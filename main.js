/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";function _createForOfIteratorHelper(t,r){var i="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!i){if(Array.isArray(t)||(i=function _unsupportedIterableToArray(t,r){if(t){if("string"==typeof t)return _arrayLikeToArray(t,r);var i={}.toString.call(t).slice(8,-1);return"Object"===i&&t.constructor&&(i=t.constructor.name),"Map"===i||"Set"===i?Array.from(t):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?_arrayLikeToArray(t,r):void 0}}(t))||r&&t&&"number"==typeof t.length){i&&(t=i);var a=0,o=function F(){};return{s:o,n:function n(){return a>=t.length?{done:!0}:{done:!1,value:t[a++]}},e:function e(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var l,c=!0,h=!1;return{s:function s(){i=i.call(t)},n:function n(){var t=i.next();return c=t.done,t},e:function e(t){h=!0,l=t},f:function f(){try{c||null==i.return||i.return()}finally{if(h)throw l}}}}function _arrayLikeToArray(t,r){(null==r||r>t.length)&&(r=t.length);for(var i=0,a=Array(r);i<r;i++)a[i]=t[i];return a}function createBoard(t,r){var i=document.createDocumentFragment(),a=100/t;r.style.gridTemplateColumns="repeat(".concat(t," , ").concat(a,"%)"),r.style.gridTemplateRows="repeat(".concat(t," , ").concat(a,"%)"),r.style.position="";for(var o=0;o<t;o++)for(var l=0;l<t;l++){var c=document.createElement("div");c.classList.add("cell"),c.style.width="100%",c.style.height="100%",c.style.border="1px solid white",c.dataset.index=o,c.dataset.jndex=l,c.style.position="",c.style.zIndex="0",c.addEventListener("dragover",(function(t){t.preventDefault()})),c.addEventListener("drop",dropShip),i.appendChild(c)}r.appendChild(i)}function createBoardComputer(t,i){var a=document.createDocumentFragment(),o=100/t;i.style.gridTemplateColumns="repeat(".concat(t," , ").concat(o,"%)"),i.style.gridTemplateRows="repeat(".concat(t," , ").concat(o,"%)"),i.style.position="";var l=document.createDocumentFragment(),c=document.createElement("div");c.classList.add("shell"),c.style.position="fixed",c.style.top="0",c.style.left="0",c.style.width="100%",c.style.height="100%",c.style.background="rgba(0,0,0,0.6)",c.style.zIndex="1",c.style.display="grid",c.style.gridTemplateColumns="repeat(".concat(t," , ").concat(o,"%)"),c.style.gridTemplateRows="repeat(".concat(t," , ").concat(o,"%)"),i.appendChild(c);for(var h=0;h<t;h++)for(var u=0;u<t;u++){var d=document.createElement("div");d.classList.add("cell"),d.style.width="100%",d.style.height="100%",d.style.border="1px solid white",d.dataset.index=h,d.dataset.indexComp=h,d.dataset.jndex=u,d.dataset.jndexComp=u,d.style.position="",d.style.zIndex="0",a.appendChild(d);var p=document.createElement("div");p.classList.add("dropcell"),l.appendChild(p)}i.appendChild(a),c.appendChild(l),function populateComputerBoard(t,i){var a=r.list.slice(),o=100;function checkShipSpan(t,r,i,a,o){var l=parseInt(t.dataset.indexComp),c=parseInt(t.dataset.jndexComp);if("land"===a)for(var h=0;h<o;h++){var u=getCellByIndexComp(l,c+h);if(!u||u.classList.contains("ship"))return!1}else for(var d=0;d<o;d++){var p=getCellByIndexComp(l+d,c);if(!p||p.classList.contains("ship"))return!1}return!0}var l,c=_createForOfIteratorHelper(a);try{for(c.s();!(l=c.n()).done;){for(var h=l.value,u=0,d=!1;!d&&u<o;){var p=Math.floor(Math.random()*i),m=Math.floor(Math.random()*i),g=Math.random()<.5?"land":"port",_=getCellByIndexComp(p,m);if(_){var x={dataset:{length:h.length,or:g,I:p.toString(),J:m.toString()}},y=calculateDomLengthLand(h.length);("land"===g?isValidDrop(_,y)&&checkNeighbours(_,y,!0):isValidDropPort(x,y)&&checkNeighboursPort(x,y,!0))&&checkShipSpan(_,x,y,g,h.length)&&("land"===g?(_.classList.add("ship"),addNeighbours(_,calculateDomLengthLand(h.length),!0)):(_.classList.add("ship"),addNeighboursPort(x,calculateDomLengthLand(h.length),!0)),d=!0),u++}else u++}d||console.warn("Could not place ship of length ".concat(h.length," after ").concat(o," attempts"))}}catch(t){c.e(t)}finally{c.f()}}(0,t)}function dropShip(t){var i=t.dataTransfer.getData("text/plain"),a=document.getElementById(i),o=t.target;a.dataset.I=o.dataset.index,a.dataset.J=o.dataset.jndex,a.dataset.index=o.dataset.index,a.dataset.jndex=o.dataset.jndex;var l=o.parentElement;if(!o.classList.contains("ship")){if(!a)return void console.warn("Could not find dragged ship with ID:",i);var c=calculateDomLengthLand(a.dataset.length);if("land"==a.dataset.or){if(!checkNeighbours(o,c))return alert("ship colliding");if(!isValidDrop(o,c))return alert("cant proceed");removePreviousMarks(a)}else if("port"==a.dataset.or){if(!checkNeighboursPort(a,c))return alert("ship colliding");if(!isValidDropPort(a,c))return alert("cant proceed");removePreviousMarksPort(a)}if(c=calculateDomLengthLand(a.dataset.length),a.dataset.refi=o.dataset.jndex-c[0],a.dataset.refj=o.dataset.jndex-c[1],a.dataset.refI=o.dataset.index,a.dataset.refJ=o.dataset.jndex,a.dataset.refx=o.dataset.index-c[0],a.dataset.refy=o.dataset.index-c[1],"land"==a.dataset.or){var h="".concat(o.dataset.jndex-c[0]+1," / ").concat(o.dataset.jndex-c[1]+2),u=o.dataset.index- -1;a.style.gridColumn=h,a.style.gridRow=u}else"port"==a.dataset.or&&handleRotationPort(a,c);a.style.zIndex="10",l.appendChild(a),o.classList.add("ship"),o.classList.add("hidden"),"land"==a.dataset.or&&addNeighbours(o,c),r.list=r.list.filter((function(t){return t.id!==i})),console.log("Ship removed from list:",i,"Remaining ships:",r.list)}}function dropShipFriend(t){var i=t.dataTransfer.getData("text/plain"),a=document.getElementById(i),o=t.target;a.dataset.I=o.dataset.index,a.dataset.J=o.dataset.jndex,a.dataset.index=o.dataset.index,a.dataset.jndex=o.dataset.jndex;var l=o.parentElement;if(console.log("current board",l),console.log("current target",o),!o.classList.contains("ship")){if(!a)return void console.warn("Could not find dragged ship with ID:",i);var c=calculateDomLengthLand(a.dataset.length);if("land"==a.dataset.or){if(!checkNeighbours(o,c,!0))return alert("ship colliding");if(!isValidDrop(o,c))return alert("cant proceed");removePreviousMarks2(a)}else if("port"==a.dataset.or){if(!checkNeighboursPort(a,c,!0))return alert("ship colliding");if(!isValidDropPort(a,c))return alert("cant proceed");removePreviousMarksPort2(a)}if(c=calculateDomLengthLand(a.dataset.length),a.dataset.refi=o.dataset.jndex-c[0],a.dataset.refj=o.dataset.jndex-c[1],a.dataset.refI=o.dataset.index,a.dataset.refJ=o.dataset.jndex,a.dataset.refx=o.dataset.index-c[0],a.dataset.refy=o.dataset.index-c[1],"land"==a.dataset.or){var h="".concat(o.dataset.jndex-c[0]+1," / ").concat(o.dataset.jndex-c[1]+2),u=o.dataset.index- -1;a.style.gridColumn=h,a.style.gridRow=u}else"port"==a.dataset.or&&handleRotationPortFriend(a,c);a.style.zIndex="10",l.appendChild(a),o.classList.add("ship"),o.classList.add("hidden"),"land"==a.dataset.or&&addNeighbours(o,c,!0,!0),r.list=r.list.filter((function(t){return t.id!==i})),console.log("Ship removed from list:",i,"Remaining ships:",r.list)}}function calculateDomLengthLand(t){for(var r=0,i=0,a=1;a<t;a++)a%2==1?r--:i++;return[i,r]}function addNeighbours(t,r){var i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];r[0];for(var o=t.dataset.index,l=t.dataset.jndex;r[0]>0;){var c=l-r[0];i?(getCellByIndexComp(o,c).classList.add("ship"),a&&getCellByIndexComp(o,c).classList.add("hidden")):(getCellByIndex(o,c).classList.add("ship"),getCellByIndex(o,c).classList.add("hidden")),r[0]--}for(;r[1]<0;){var h=l-r[1];i?(getCellByIndexComp(o,h).classList.add("ship"),a&&getCellByIndexComp(o,h).classList.add("hidden")):(getCellByIndex(o,h).classList.add("ship"),getCellByIndex(o,h).classList.add("hidden")),r[1]++}}function getCellByIndex(t,r){return document.querySelector('#board .cell[data-index="'.concat(t,'"][data-jndex="').concat(r,'"]'))}function getCellByIndexComp(t,r){return document.querySelector('#boardComputer .cell[data-index-comp="'.concat(t,'"][data-jndex-comp="').concat(r,'"]'))}function isValidDrop(t,r){var i=t.dataset.jndex,a=i-r[0],o=i-r[1];return!(a<0)&&!(o>9)}function removePreviousMarks(t){for(var r=t.dataset.refI,i=parseInt(t.dataset.refi),a=parseInt(t.dataset.refj),o=i;o<=a;o++){var l=getCellByIndex(r,o);l&&l.classList.remove("ship","hidden")}}function removePreviousMarks2(t){for(var r=t.dataset.refI,i=parseInt(t.dataset.refi),a=parseInt(t.dataset.refj),o=i;o<=a;o++){var l=getCellByIndexComp(r,o);l&&l.classList.remove("ship","hidden")}}function removePreviousMarksPort(t){for(var r=t.dataset.refJ,i=parseInt(t.dataset.refx),a=parseInt(t.dataset.refy),o=i;o<=a;o++){var l=getCellByIndex(o,r);l&&l.classList.remove("ship","hidden")}}function removePreviousMarksPort2(t){for(var r=t.dataset.refJ,i=parseInt(t.dataset.refx),a=parseInt(t.dataset.refy),o=i;o<=a;o++){var l=getCellByIndexComp(o,r);l&&l.classList.remove("ship","hidden")}}function checkNeighbours(t,r){for(var i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=t.dataset.index,o=t.dataset.jndex;r[0]>0;){var l=o-r[0];if(console.log("index",a,l),i){if(!getCellByIndexComp(a,l))return console.log("got this cell",getCellByIndexComp(a,l)),!1;if(getCellByIndexComp(a,l).classList.contains("ship"))return!1}else{if(!getCellByIndex(a,l))return!1;if(getCellByIndex(a,l).classList.contains("ship"))return!1}r[0]--}for(;r[1]<0;){var c=o-r[1];if(i){if(!getCellByIndexComp(a,c))return!1;if(getCellByIndexComp(a,c).classList.contains("ship"))return!1}else{if(!getCellByIndex(a,c))return!1;if(getCellByIndex(a,c).classList.contains("ship"))return!1}r[1]++}return!0}var t=document.querySelector("#shipContainer");function dragStart(t){var r=t.target.closest(".ships");if(r&&r.id){t.dataTransfer.setData("text/plain",r.id);var i=r.getBoundingClientRect(),a=i.width/2,o=i.height/2;t.dataTransfer.setDragImage(r,a,o)}else console.warn("dragStart: invalid drag target",t.target)}function rotateShip(t){if("shipCase"!=t.target.parentElement.id){var r=t.target.closest(".ships"),i=calculateDomLengthLand(r.dataset.length);if("land"===r.dataset.or){if(!isValidDropPort(r,i))return alert("invalid drop");if(!checkNeighboursPort(r,i))return alert("invalid neighbour");r.dataset.or="port",removePreviousMarks(r),handleRotationPort(r,i)}else if("port"===r.dataset.or){if(!isValidDrop(r,i))return alert("invalid drop");if(!checkNeighbours(r,i))return alert("invalid neighbour");r.dataset.or="land",removePreviousMarksPort(r),function handleRotationLand(t,r){var i=t.dataset.I,a=t.dataset.J;getCellByIndex(i,a).classList.add("ship"),getCellByIndex(i,a).classList.add("hidden"),r=calculateDomLengthLand(t.dataset.length),addNeighbours(t,r),r=calculateDomLengthLand(t.dataset.length);var o="".concat(t.dataset.J-r[0]+1," / ").concat(t.dataset.J-r[1]+2),l=t.dataset.I- -1;t.style.gridRow=l,t.style.gridColumn=o}(r,i)}}}function rotateShipFriend(t){if("shipCase"!=t.target.parentElement.id){var r=t.target.closest(".ships"),i=calculateDomLengthLand(r.dataset.length);if("land"===r.dataset.or){if(!isValidDropPort(r,i))return alert("invalid drop");if(!checkNeighboursPort(r,i,!0))return alert("invalid neighbour");r.dataset.or="port",removePreviousMarks2(r),handleRotationPortFriend(r,i)}else if("port"===r.dataset.or){if(!isValidDrop(r,i))return alert("invalid drop");if(!checkNeighbours(r,i,!0))return alert("invalid neighbour");r.dataset.or="land",removePreviousMarksPort2(r),function handleRotationLandFriend(t,r){var i=t.dataset.I,a=t.dataset.J;getCellByIndexComp(i,a).classList.add("ship"),getCellByIndexComp(i,a).classList.add("hidden"),r=calculateDomLengthLand(t.dataset.length),addNeighbours(t,r,!0,!0),r=calculateDomLengthLand(t.dataset.length);var o="".concat(t.dataset.J-r[0]+1," / ").concat(t.dataset.J-r[1]+2),l=t.dataset.I- -1;t.style.gridRow=l,t.style.gridColumn=o}(r,i)}}}function handleRotationPort(t,r){var i=t.dataset.I,a=t.dataset.J;getCellByIndex(i,a).classList.add("ship"),getCellByIndex(i,a).classList.add("hidden"),addNeighboursPort(t,r=calculateDomLengthLand(t.dataset.length)),r=calculateDomLengthLand(t.dataset.length);var o="".concat(t.dataset.I-r[0]+1," / ").concat(t.dataset.I-r[1]+2),l=t.dataset.J- -1;t.style.gridRow=o,t.style.gridColumn=l}function handleRotationPortFriend(t,r){var i=t.dataset.I,a=t.dataset.J;getCellByIndexComp(i,a).classList.add("ship"),getCellByIndexComp(i,a).classList.add("hidden"),addNeighboursPort(t,r=calculateDomLengthLand(t.dataset.length),!0,!0),r=calculateDomLengthLand(t.dataset.length);var o="".concat(t.dataset.I-r[0]+1," / ").concat(t.dataset.I-r[1]+2),l=t.dataset.J- -1;t.style.gridRow=o,t.style.gridColumn=l}function isValidDropPort(t,r){var i=t.dataset.I,a=i-r[0],o=i-r[1];return!(a<0)&&!(o>9)}function checkNeighboursPort(t,r){for(var i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=t.dataset.I,o=t.dataset.J;r[0]>0;){var l=a-r[0];if(i){if(!getCellByIndexComp(l,o))return!1;if(getCellByIndexComp(l,o).classList.contains("ship"))return!1}else{if(!getCellByIndex(l,o))return!1;if(getCellByIndex(l,o).classList.contains("ship"))return!1}r[0]--}for(;r[1]<0;){var c=a-r[1];if(i){if(!getCellByIndexComp(c,o))return!1;if(getCellByIndexComp(c,o).classList.contains("ship"))return!1}else{if(!getCellByIndex(c,o))return!1;if(getCellByIndex(c,o).classList.contains("ship"))return!1}r[1]++}return!0}function addNeighboursPort(t,r){for(var i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=t.dataset.I,l=t.dataset.J;r[0]>0;){var c=o-r[0];i?(getCellByIndexComp(c,l).classList.add("ship"),a&&getCellByIndexComp(c,l).classList.add("hidden")):(getCellByIndex(c,l).classList.add("hidden"),getCellByIndex(c,l).classList.add("ship")),r[0]--}for(;r[1]<0;){var h=o-r[1];i?(getCellByIndexComp(h,l).classList.add("ship"),a&&getCellByIndexComp(h,l).classList.add("hidden")):(getCellByIndex(h,l).classList.add("hidden"),getCellByIndex(h,l).classList.add("ship")),r[1]++}}function _typeof(t){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_typeof(t)}function _defineProperties(t,r){for(var i=0;i<r.length;i++){var a=r[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,_toPropertyKey(a.key),a)}}function _toPropertyKey(t){var r=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var i=t[Symbol.toPrimitive];if(void 0!==i){var a=i.call(t,r||"default");if("object"!=_typeof(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(r)?r:r+""}var r={list:[],shipHitCount:11,shipHitCountFriend:11,shipHitCountComp:11},i=function(){return function _createClass(t,r,i){return r&&_defineProperties(t.prototype,r),i&&_defineProperties(t,i),Object.defineProperty(t,"prototype",{writable:!1}),t}((function ship(t,r,i,a){!function _classCallCheck(t,r){if(!(t instanceof r))throw new TypeError("Cannot call a class as a function")}(this,ship),this.length=t,this.hit=0,this.orientation="land",this.id=r,this.boardSize=i,this.flag=a}),[{key:"hitShip",value:function hitShip(){this.hit++}},{key:"isSunk",value:function isSunk(){return this.hit==this.length}},{key:"rotate",value:function rotate(){"land"==this.orientation?this.orientation="port":"port"==this.orientation&&(this.orientation="land")}},{key:"dom",value:function dom(){r.list.push(this),function domShip(r,i){var a=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=document.createElement("div");o.addEventListener("dragstart",dragStart),o.classList.add("ships"),o.id=r.id,o.dataset.length=r.length,o.dataset.or=r.orientation,o.style.width="100%",o.style.height="100%",o.draggable=!0,a?(console.log("flag true for: ",o.id),o.addEventListener("click",rotateShipFriend)):o.addEventListener("click",rotateShip);var l=document.createElement("div");l.id="shipCase",l.style.width="".concat(10*o.dataset.length/3,"%"),l.style.height="".concat(38,"%"),l.appendChild(o),t.append(l)}(this,this.boardSize,this.flag)}}])}();function _slicedToArray(t,r){return function _arrayWithHoles(t){if(Array.isArray(t))return t}(t)||function _iterableToArrayLimit(t,r){var i=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=i){var a,o,l,c,h=[],u=!0,d=!1;try{if(l=(i=i.call(t)).next,0===r){if(Object(i)!==i)return;u=!1}else for(;!(u=(a=l.call(i)).done)&&(h.push(a.value),h.length!==r);u=!0);}catch(t){d=!0,o=t}finally{try{if(!u&&null!=i.return&&(c=i.return(),Object(c)!==c))return}finally{if(d)throw o}}return h}}(t,r)||beginGame_unsupportedIterableToArray(t,r)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function beginGame_createForOfIteratorHelper(t,r){var i="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!i){if(Array.isArray(t)||(i=beginGame_unsupportedIterableToArray(t))||r&&t&&"number"==typeof t.length){i&&(t=i);var a=0,o=function F(){};return{s:o,n:function n(){return a>=t.length?{done:!0}:{done:!1,value:t[a++]}},e:function e(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var l,c=!0,h=!1;return{s:function s(){i=i.call(t)},n:function n(){var t=i.next();return c=t.done,t},e:function e(t){h=!0,l=t},f:function f(){try{c||null==i.return||i.return()}finally{if(h)throw l}}}}function beginGame_unsupportedIterableToArray(t,r){if(t){if("string"==typeof t)return beginGame_arrayLikeToArray(t,r);var i={}.toString.call(t).slice(8,-1);return"Object"===i&&t.constructor&&(i=t.constructor.name),"Map"===i||"Set"===i?Array.from(t):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?beginGame_arrayLikeToArray(t,r):void 0}}function beginGame_arrayLikeToArray(t,r){(null==r||r>t.length)&&(r=t.length);for(var i=0,a=Array(r);i<r;i++)a[i]=t[i];return a}function beginGame(){var t=document.querySelector("#board"),i=document.querySelector("#boardComputer");i.classList.add("hov");var a=document.createDocumentFragment(),o=document.createElement("div");o.classList.add("pickshell"),o.style.position="absolute",o.style.top="0",o.style.left="0",o.style.width="100%",o.style.height="100%",o.style.background="rgba(0,0,0,0)",o.style.zIndex="15",o.style.display="grid",o.style.gridTemplateColumns="repeat(".concat(10,", ").concat(10,"%)"),o.style.gridTemplateRows="repeat(".concat(10,", ").concat(10,"%)"),o.style.pointerEvents="none",t.appendChild(o);for(var l=0;l<10;l++)for(var c=0;c<10;c++){var h=document.createElement("div");h.classList.add("pickcell"),h.dataset.index=l,h.dataset.jndex=c,h.style.pointerEvents="auto",a.appendChild(h)}o.appendChild(a);var u,d=beginGame_createForOfIteratorHelper(i.querySelectorAll(".cell"));try{var p=function _loop(){var t=u.value;t.addEventListener("click",(function(){""===t.textContent&&(t.classList.contains("ship")?(t.textContent="X",t.style.display="flex",t.style.justifyContent="center",t.style.alignItems="center",t.style.color="red",t.style.backgroundColor="black",shipHit()):(t.style.backgroundColor="rgba(0,255,255,0.6)",playCompTurn()))}))};for(d.s();!(u=d.n()).done;)p()}catch(t){d.e(t)}finally{d.f()}document.querySelectorAll(".pickcell").forEach((function(t){t.addEventListener("click",(function(){""===t.textContent&&(getCellByIndex(t.dataset.index,t.dataset.jndex).classList.contains("ship")?(t.textContent="X",t.style.display="flex",t.style.justifyContent="center",t.style.alignItems="center",t.style.color="red",t.style.backgroundColor="black",r.shipHitCountComp--,0===r.shipHitCountComp&&setTimeout((function(){return alert("You Lost!")}),1e3)):t.style.backgroundColor="rgba(0,255,0,0.6)")}))}))}function shipHit(){r.shipHitCount--,console.log(r.shipHitCount),0===r.shipHitCount&&setTimeout((function(){return alert("Player 1 Won!")}),1e3)}for(var a=null,o=[],l=0;l<10;l++)for(var c=0;c<10;c++)o.push([l,c]);var h=function shuffleArray(t){for(var r=t.length-1;r>0;r--){var i=Math.floor(Math.random()*(r+1)),a=[t[i],t[r]];t[r]=a[0],t[i]=a[1]}return t}(o),u=0,d=0;function playCompTurn(){for(var t,i=function _loop2(){var t,i;if(null!==a){if(1===++u&&a[1]+1+d<10?(t=a[0],i=a[1]+1+d,console.log("direction 1 ran")):2===u&&a[1]-1-d>=0?(t=a[0],i=a[1]-1-d,console.log("direction 2 ran")):3===u&&a[0]-1-d>=0?(t=a[0]-1-d,i=a[1],console.log("direction 3 ran")):4===u&&a[0]+1+d<10&&(t=a[0]+1+d,i=a[1],console.log("direction 4 ran")),u>4)return a=null,u=0,d=0,console.log("reset anchor, switching to random mode"),0;var o=h.findIndex((function(r){var a=_slicedToArray(r,2),o=a[0],l=a[1];return o===t&&l===i}));if(-1===o)return console.log("move already taken",t,i),0;h.splice(o,1);var l=getPickCellByIndex(t,i),c=getCellByIndex(t,i);return l&&c?(console.log("looking for cell",t,i),console.log("stats",{anchor:a,direction:u,currentPickCell:l}),c.classList.contains("ship")?(console.log("fetching cell"),l.style.display="flex",l.style.justifyContent="center",l.style.alignItems="center",l.style.color="red",l.textContent="X",l.style.backgroundColor="black",r.shipHitCountComp--,0===r.shipHitCountComp?(setTimeout((function(){return alert("You Lost!")}),1e3),{v:void 0}):(d++,u--,0)):(d=0,l.style.backgroundColor="rgba(0,255,0,0.6)",4===u&&(a=null,u=0,console.log("all directions tried, resetting anchor")),{v:void 0})):(console.warn("cell not found at index",t,i),0)}if(0===h.length)return console.warn("No more moves available!"),{v:void 0};var p=h.pop();t=p[0],i=p[1];var m=getCellByIndex(t,i),g=getPickCellByIndex(t,i);if(!g||!m)return console.warn("cell not found at index",t,i),{v:void 0};if(console.log("playing as comp"),m.classList.contains("ship")){if(g.style.display="flex",g.style.justifyContent="center",g.style.alignItems="center",g.style.color="red",g.textContent="X",g.style.backgroundColor="black",r.shipHitCountComp--,a=p,0===r.shipHitCountComp)return setTimeout((function(){return alert("You Lost!")}),1e3),{v:void 0};playCompTurn()}else g.style.backgroundColor="rgba(0,255,0,0.6)";return{v:void 0}};;)if(0!==(t=i())&&t)return t.v}function getPickCellByIndex(t,r){return document.querySelector('.pickcell[data-index="'.concat(t,'"][data-jndex="').concat(r,'"]'))}function beginGameFriends(){var t=document.querySelector("#board"),i=document.querySelector("#boardComputer"),a="player1";document.querySelector("#turn").textContent="Player 1",i.classList.add("hov");var o,l=beginGame_createForOfIteratorHelper(i.querySelectorAll(".cell"));try{var c=function _loop3(){var t=o.value;t.addEventListener("click",(function(){""===t.textContent&&"player2"!=a&&(t.classList.contains("ship")?(t.textContent="X",t.style.display="flex",t.style.justifyContent="center",t.style.alignItems="center",t.style.color="red",t.style.backgroundColor="black",shipHit()):(t.style.backgroundColor="rgba(0,255,255,0.6)",a=changeTurn(a)))}))};for(l.s();!(o=l.n()).done;)c()}catch(t){l.e(t)}finally{l.f()}var h,u=beginGame_createForOfIteratorHelper(t.querySelectorAll(".cell"));try{var d=function _loop4(){var t=h.value;t.addEventListener("click",(function(){""===t.textContent&&"player1"!=a&&(t.classList.contains("ship")?(t.textContent="X",t.style.display="flex",t.style.justifyContent="center",t.style.alignItems="center",t.style.color="red",t.style.backgroundColor="black",function shipHit2(){r.shipHitCountFriend--,console.log(r.shipHitCountFriend),0===r.shipHitCountFriend&&setTimeout((function(){return alert("Player 2 Won!")}),1e3)}()):(t.style.backgroundColor="rgba(0,255,255,0.6)",a=changeTurn(a)))}))};for(u.s();!(h=u.n()).done;)d()}catch(t){u.e(t)}finally{u.f()}}function changeTurn(t){var r=document.querySelector("#board"),i=document.querySelector("#boardComputer"),a=document.querySelector("#turn");return"player1"==t?(a.textContent="Player 2",i.classList.remove("hov"),r.classList.add("hov"),"player2"):"player2"==t?(a.textContent="Player 1",r.classList.remove("hov"),i.classList.add("hov"),"player1"):void console.warn("Error deciding turn",t)}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function _inheritsLoose(t,r){t.prototype=Object.create(r.prototype),t.prototype.constructor=t,t.__proto__=r}var p,m,g,_,x,y,M,S,b,T,E,w,C,A,R,P,L,U={autoSleep:120,force3D:"auto",nullTargetWarn:1,units:{lineHeight:""}},D={duration:.5,overwrite:!1,delay:0},I=1e8,N=1e-8,O=2*Math.PI,z=O/4,B=0,V=Math.sqrt,k=Math.cos,G=Math.sin,H=function _isString(t){return"string"==typeof t},W=function _isFunction(t){return"function"==typeof t},X=function _isNumber(t){return"number"==typeof t},j=function _isUndefined(t){return void 0===t},q=function _isObject(t){return"object"==typeof t},Y=function _isNotFalse(t){return!1!==t},J=function _windowExists(){return"undefined"!=typeof window},K=function _isFuncOrString(t){return W(t)||H(t)},Z="function"==typeof ArrayBuffer&&ArrayBuffer.isView||function(){},Q=Array.isArray,$=/(?:-?\.?\d|\.)+/gi,tt=/[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,et=/[-+=.]*\d+[.e-]*\d*[a-z%]*/g,nt=/[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,rt=/[+-]=-?[.\d]+/,it=/[^,'"\[\]\s]+/gi,at=/^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,st={},ot={},lt=function _install(t){return(ot=zt(t,st))&&Vn},ct=function _missingPlugin(t,r){return console.warn("Invalid property",t,"set to",r,"Missing plugin? gsap.registerPlugin()")},ht=function _warn(t,r){return!r&&console.warn(t)},ut=function _addGlobal(t,r){return t&&(st[t]=r)&&ot&&(ot[t]=r)||st},dt=function _emptyFunc(){return 0},pt={suppressEvents:!0,isStart:!0,kill:!1},ft={suppressEvents:!0,kill:!1},mt={suppressEvents:!0},gt={},_t=[],vt={},xt={},yt={},Mt=30,St=[],bt="",Tt=function _harness(t){var r,i,a=t[0];if(q(a)||W(a)||(t=[t]),!(r=(a._gsap||{}).harness)){for(i=St.length;i--&&!St[i].targetTest(a););r=St[i]}for(i=t.length;i--;)t[i]&&(t[i]._gsap||(t[i]._gsap=new $e(t[i],r)))||t.splice(i,1);return t},Et=function _getCache(t){return t._gsap||Tt(ge(t))[0]._gsap},wt=function _getProperty(t,r,i){return(i=t[r])&&W(i)?t[r]():j(i)&&t.getAttribute&&t.getAttribute(r)||i},Ct=function _forEachName(t,r){return(t=t.split(",")).forEach(r)||t},At=function _round(t){return Math.round(1e5*t)/1e5||0},Rt=function _roundPrecise(t){return Math.round(1e7*t)/1e7||0},Pt=function _parseRelative(t,r){var i=r.charAt(0),a=parseFloat(r.substr(2));return t=parseFloat(t),"+"===i?t+a:"-"===i?t-a:"*"===i?t*a:t/a},Lt=function _arrayContainsAny(t,r){for(var i=r.length,a=0;t.indexOf(r[a])<0&&++a<i;);return a<i},Ut=function _lazyRender(){var t,r,i=_t.length,a=_t.slice(0);for(vt={},_t.length=0,t=0;t<i;t++)(r=a[t])&&r._lazy&&(r.render(r._lazy[0],r._lazy[1],!0)._lazy=0)},Dt=function _isRevertWorthy(t){return!!(t._initted||t._startAt||t.add)},It=function _lazySafeRender(t,r,i,a){_t.length&&!m&&Ut(),t.render(r,i,a||!!(m&&r<0&&Dt(t))),_t.length&&!m&&Ut()},Nt=function _numericIfPossible(t){var r=parseFloat(t);return(r||0===r)&&(t+"").match(it).length<2?r:H(t)?t.trim():t},Ot=function _passThrough(t){return t},Ft=function _setDefaults(t,r){for(var i in r)i in t||(t[i]=r[i]);return t},zt=function _merge(t,r){for(var i in r)t[i]=r[i];return t},Bt=function _mergeDeep(t,r){for(var i in r)"__proto__"!==i&&"constructor"!==i&&"prototype"!==i&&(t[i]=q(r[i])?_mergeDeep(t[i]||(t[i]={}),r[i]):r[i]);return t},Vt=function _copyExcluding(t,r){var i,a={};for(i in t)i in r||(a[i]=t[i]);return a},kt=function _inheritDefaults(t){var r=t.parent||_,i=t.keyframes?function _setKeyframeDefaults(t){return function(r,i){for(var a in i)a in r||"duration"===a&&t||"ease"===a||(r[a]=i[a])}}(Q(t.keyframes)):Ft;if(Y(t.inherit))for(;r;)i(t,r.vars.defaults),r=r.parent||r._dp;return t},Gt=function _addLinkedListItem(t,r,i,a,o){void 0===i&&(i="_first"),void 0===a&&(a="_last");var l,c=t[a];if(o)for(l=r[o];c&&c[o]>l;)c=c._prev;return c?(r._next=c._next,c._next=r):(r._next=t[i],t[i]=r),r._next?r._next._prev=r:t[a]=r,r._prev=c,r.parent=r._dp=t,r},Ht=function _removeLinkedListItem(t,r,i,a){void 0===i&&(i="_first"),void 0===a&&(a="_last");var o=r._prev,l=r._next;o?o._next=l:t[i]===r&&(t[i]=l),l?l._prev=o:t[a]===r&&(t[a]=o),r._next=r._prev=r.parent=null},Wt=function _removeFromParent(t,r){t.parent&&(!r||t.parent.autoRemoveChildren)&&t.parent.remove&&t.parent.remove(t),t._act=0},Xt=function _uncache(t,r){if(t&&(!r||r._end>t._dur||r._start<0))for(var i=t;i;)i._dirty=1,i=i.parent;return t},jt=function _rewindStartAt(t,r,i,a){return t._startAt&&(m?t._startAt.revert(ft):t.vars.immediateRender&&!t.vars.autoRevert||t._startAt.render(r,!0,a))},qt=function _hasNoPausedAncestors(t){return!t||t._ts&&_hasNoPausedAncestors(t.parent)},Yt=function _elapsedCycleDuration(t){return t._repeat?Jt(t._tTime,t=t.duration()+t._rDelay)*t:0},Jt=function _animationCycle(t,r){var i=Math.floor(t=Rt(t/r));return t&&i===t?i-1:i},Kt=function _parentToChildTotalTime(t,r){return(t-r._start)*r._ts+(r._ts>=0?0:r._dirty?r.totalDuration():r._tDur)},Zt=function _setEnd(t){return t._end=Rt(t._start+(t._tDur/Math.abs(t._ts||t._rts||N)||0))},Qt=function _alignPlayhead(t,r){var i=t._dp;return i&&i.smoothChildTiming&&t._ts&&(t._start=Rt(i._time-(t._ts>0?r/t._ts:((t._dirty?t.totalDuration():t._tDur)-r)/-t._ts)),Zt(t),i._dirty||Xt(i,t)),t},$t=function _postAddChecks(t,r){var i;if((r._time||!r._dur&&r._initted||r._start<t._time&&(r._dur||!r.add))&&(i=Kt(t.rawTime(),r),(!r._dur||ue(0,r.totalDuration(),i)-r._tTime>N)&&r.render(i,!0)),Xt(t,r)._dp&&t._initted&&t._time>=t._dur&&t._ts){if(t._dur<t.duration())for(i=t;i._dp;)i.rawTime()>=0&&i.totalTime(i._tTime),i=i._dp;t._zTime=-1e-8}},te=function _addToTimeline(t,r,i,a){return r.parent&&Wt(r),r._start=Rt((X(i)?i:i||t!==_?le(t,i,r):t._time)+r._delay),r._end=Rt(r._start+(r.totalDuration()/Math.abs(r.timeScale())||0)),Gt(t,r,"_first","_last",t._sort?"_start":0),ie(r)||(t._recent=r),a||$t(t,r),t._ts<0&&Qt(t,t._tTime),t},ee=function _scrollTrigger(t,r){return(st.ScrollTrigger||ct("scrollTrigger",r))&&st.ScrollTrigger.create(r,t)},ne=function _attemptInitTween(t,r,i,a,o){return ln(t,r,o),t._initted?!i&&t._pt&&!m&&(t._dur&&!1!==t.vars.lazy||!t._dur&&t.vars.lazy)&&b!==Ve.frame?(_t.push(t),t._lazy=[o,a],1):void 0:1},re=function _parentPlayheadIsBeforeStart(t){var r=t.parent;return r&&r._ts&&r._initted&&!r._lock&&(r.rawTime()<0||_parentPlayheadIsBeforeStart(r))},ie=function _isFromOrFromStart(t){var r=t.data;return"isFromStart"===r||"isStart"===r},ae=function _setDuration(t,r,i,a){var o=t._repeat,l=Rt(r)||0,c=t._tTime/t._tDur;return c&&!a&&(t._time*=l/t._dur),t._dur=l,t._tDur=o?o<0?1e10:Rt(l*(o+1)+t._rDelay*o):l,c>0&&!a&&Qt(t,t._tTime=t._tDur*c),t.parent&&Zt(t),i||Xt(t.parent,t),t},se=function _onUpdateTotalDuration(t){return t instanceof en?Xt(t):ae(t,t._dur)},oe={_start:0,endTime:dt,totalDuration:dt},le=function _parsePosition(t,r,i){var a,o,l,c=t.labels,h=t._recent||oe,u=t.duration()>=I?h.endTime(!1):t._dur;return H(r)&&(isNaN(r)||r in c)?(o=r.charAt(0),l="%"===r.substr(-1),a=r.indexOf("="),"<"===o||">"===o?(a>=0&&(r=r.replace(/=/,"")),("<"===o?h._start:h.endTime(h._repeat>=0))+(parseFloat(r.substr(1))||0)*(l?(a<0?h:i).totalDuration()/100:1)):a<0?(r in c||(c[r]=u),c[r]):(o=parseFloat(r.charAt(a-1)+r.substr(a+1)),l&&i&&(o=o/100*(Q(i)?i[0]:i).totalDuration()),a>1?_parsePosition(t,r.substr(0,a-1),i)+o:u+o)):null==r?u:+r},ce=function _createTweenType(t,r,i){var a,o,l=X(r[1]),c=(l?2:1)+(t<2?0:1),h=r[c];if(l&&(h.duration=r[1]),h.parent=i,t){for(a=h,o=i;o&&!("immediateRender"in a);)a=o.vars.defaults||{},o=Y(o.vars.inherit)&&o.parent;h.immediateRender=Y(a.immediateRender),t<2?h.runBackwards=1:h.startAt=r[c-1]}return new pn(r[0],h,r[c+1])},he=function _conditionalReturn(t,r){return t||0===t?r(t):r},ue=function _clamp(t,r,i){return i<t?t:i>r?r:i},de=function getUnit(t,r){return H(t)&&(r=at.exec(t))?r[1]:""},pe=[].slice,fe=function _isArrayLike(t,r){return t&&q(t)&&"length"in t&&(!r&&!t.length||t.length-1 in t&&q(t[0]))&&!t.nodeType&&t!==x},me=function _flatten(t,r,i){return void 0===i&&(i=[]),t.forEach((function(t){var a;return H(t)&&!r||fe(t,1)?(a=i).push.apply(a,ge(t)):i.push(t)}))||i},ge=function toArray(t,r,i){return g&&!r&&g.selector?g.selector(t):!H(t)||i||!y&&ke()?Q(t)?me(t,i):fe(t)?pe.call(t,0):t?[t]:[]:pe.call((r||M).querySelectorAll(t),0)},_e=function selector(t){return t=ge(t)[0]||ht("Invalid scope")||{},function(r){var i=t.current||t.nativeElement||t;return ge(r,i.querySelectorAll?i:i===t?ht("Invalid scope")||M.createElement("div"):t)}},ve=function shuffle(t){return t.sort((function(){return.5-Math.random()}))},xe=function distribute(t){if(W(t))return t;var r=q(t)?t:{each:t},i=Ye(r.ease),a=r.from||0,o=parseFloat(r.base)||0,l={},c=a>0&&a<1,h=isNaN(a)||c,u=r.axis,d=a,p=a;return H(a)?d=p={center:.5,edges:.5,end:1}[a]||0:!c&&h&&(d=a[0],p=a[1]),function(t,c,m){var g,_,x,y,M,S,b,T,E,w=(m||r).length,C=l[w];if(!C){if(!(E="auto"===r.grid?0:(r.grid||[1,I])[1])){for(b=-I;b<(b=m[E++].getBoundingClientRect().left)&&E<w;);E<w&&E--}for(C=l[w]=[],g=h?Math.min(E,w)*d-.5:a%E,_=E===I?0:h?w*p/E-.5:a/E|0,b=0,T=I,S=0;S<w;S++)x=S%E-g,y=_-(S/E|0),C[S]=M=u?Math.abs("y"===u?y:x):V(x*x+y*y),M>b&&(b=M),M<T&&(T=M);"random"===a&&ve(C),C.max=b-T,C.min=T,C.v=w=(parseFloat(r.amount)||parseFloat(r.each)*(E>w?w-1:u?"y"===u?w/E:E:Math.max(E,w/E))||0)*("edges"===a?-1:1),C.b=w<0?o-w:o,C.u=de(r.amount||r.each)||0,i=i&&w<0?je(i):i}return w=(C[t]-C.min)/C.max||0,Rt(C.b+(i?i(w):w)*C.v)+C.u}},ye=function _roundModifier(t){var r=Math.pow(10,((t+"").split(".")[1]||"").length);return function(i){var a=Rt(Math.round(parseFloat(i)/t)*t*r);return(a-a%1)/r+(X(i)?0:de(i))}},Me=function snap(t,r){var i,a,o=Q(t);return!o&&q(t)&&(i=o=t.radius||I,t.values?(t=ge(t.values),(a=!X(t[0]))&&(i*=i)):t=ye(t.increment)),he(r,o?W(t)?function(r){return a=t(r),Math.abs(a-r)<=i?a:r}:function(r){for(var o,l,c=parseFloat(a?r.x:r),h=parseFloat(a?r.y:0),u=I,d=0,p=t.length;p--;)(o=a?(o=t[p].x-c)*o+(l=t[p].y-h)*l:Math.abs(t[p]-c))<u&&(u=o,d=p);return d=!i||u<=i?t[d]:r,a||d===r||X(r)?d:d+de(r)}:ye(t))},Se=function random(t,r,i,a){return he(Q(t)?!r:!0===i?!!(i=0):!a,(function(){return Q(t)?t[~~(Math.random()*t.length)]:(i=i||1e-5)&&(a=i<1?Math.pow(10,(i+"").length-2):1)&&Math.floor(Math.round((t-i/2+Math.random()*(r-t+.99*i))/i)*i*a)/a}))},be=function _wrapArray(t,r,i){return he(i,(function(i){return t[~~r(i)]}))},Te=function _replaceRandom(t){for(var r,i,a,o,l=0,c="";~(r=t.indexOf("random(",l));)a=t.indexOf(")",r),o="["===t.charAt(r+7),i=t.substr(r+7,a-r-7).match(o?it:$),c+=t.substr(l,r-l)+Se(o?i:+i[0],o?0:+i[1],+i[2]||1e-5),l=a+1;return c+t.substr(l,t.length-l)},Ee=function mapRange(t,r,i,a,o){var l=r-t,c=a-i;return he(o,(function(r){return i+((r-t)/l*c||0)}))},we=function _getLabelInDirection(t,r,i){var a,o,l,c=t.labels,h=I;for(a in c)(o=c[a]-r)<0==!!i&&o&&h>(o=Math.abs(o))&&(l=a,h=o);return l},Ce=function _callback(t,r,i){var a,o,l,c=t.vars,h=c[r],u=g,d=t._ctx;if(h)return a=c[r+"Params"],o=c.callbackScope||t,i&&_t.length&&Ut(),d&&(g=d),l=a?h.apply(o,a):h.call(o),g=u,l},Ae=function _interrupt(t){return Wt(t),t.scrollTrigger&&t.scrollTrigger.kill(!!m),t.progress()<1&&Ce(t,"onInterrupt"),t},Re=[],Pe=function _createPlugin(t){if(t)if(t=!t.name&&t.default||t,J()||t.headless){var r=t.name,i=W(t),a=r&&!i&&t.init?function(){this._props=[]}:t,o={init:dt,render:Sn,add:sn,kill:Tn,modifier:bn,rawVars:0},l={targetTest:0,get:0,getSetter:vn,aliases:{},register:0};if(ke(),t!==a){if(xt[r])return;Ft(a,Ft(Vt(t,o),l)),zt(a.prototype,zt(o,Vt(t,l))),xt[a.prop=r]=a,t.targetTest&&(St.push(a),gt[r]=1),r=("css"===r?"CSS":r.charAt(0).toUpperCase()+r.substr(1))+"Plugin"}ut(r,a),t.register&&t.register(Vn,a,Cn)}else Re.push(t)},Le=255,Ue={aqua:[0,Le,Le],lime:[0,Le,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,Le],navy:[0,0,128],white:[Le,Le,Le],olive:[128,128,0],yellow:[Le,Le,0],orange:[Le,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[Le,0,0],pink:[Le,192,203],cyan:[0,Le,Le],transparent:[Le,Le,Le,0]},De=function _hue(t,r,i){return(6*(t+=t<0?1:t>1?-1:0)<1?r+(i-r)*t*6:t<.5?i:3*t<2?r+(i-r)*(2/3-t)*6:r)*Le+.5|0},Ie=function splitColor(t,r,i){var a,o,l,c,h,u,d,p,m,g,_=t?X(t)?[t>>16,t>>8&Le,t&Le]:0:Ue.black;if(!_){if(","===t.substr(-1)&&(t=t.substr(0,t.length-1)),Ue[t])_=Ue[t];else if("#"===t.charAt(0)){if(t.length<6&&(a=t.charAt(1),o=t.charAt(2),l=t.charAt(3),t="#"+a+a+o+o+l+l+(5===t.length?t.charAt(4)+t.charAt(4):"")),9===t.length)return[(_=parseInt(t.substr(1,6),16))>>16,_>>8&Le,_&Le,parseInt(t.substr(7),16)/255];_=[(t=parseInt(t.substr(1),16))>>16,t>>8&Le,t&Le]}else if("hsl"===t.substr(0,3))if(_=g=t.match($),r){if(~t.indexOf("="))return _=t.match(tt),i&&_.length<4&&(_[3]=1),_}else c=+_[0]%360/360,h=+_[1]/100,a=2*(u=+_[2]/100)-(o=u<=.5?u*(h+1):u+h-u*h),_.length>3&&(_[3]*=1),_[0]=De(c+1/3,a,o),_[1]=De(c,a,o),_[2]=De(c-1/3,a,o);else _=t.match($)||Ue.transparent;_=_.map(Number)}return r&&!g&&(a=_[0]/Le,o=_[1]/Le,l=_[2]/Le,u=((d=Math.max(a,o,l))+(p=Math.min(a,o,l)))/2,d===p?c=h=0:(m=d-p,h=u>.5?m/(2-d-p):m/(d+p),c=d===a?(o-l)/m+(o<l?6:0):d===o?(l-a)/m+2:(a-o)/m+4,c*=60),_[0]=~~(c+.5),_[1]=~~(100*h+.5),_[2]=~~(100*u+.5)),i&&_.length<4&&(_[3]=1),_},Ne=function _colorOrderData(t){var r=[],i=[],a=-1;return t.split(Fe).forEach((function(t){var o=t.match(et)||[];r.push.apply(r,o),i.push(a+=o.length+1)})),r.c=i,r},Oe=function _formatColors(t,r,i){var a,o,l,c,h="",u=(t+h).match(Fe),d=r?"hsla(":"rgba(",p=0;if(!u)return t;if(u=u.map((function(t){return(t=Ie(t,r,1))&&d+(r?t[0]+","+t[1]+"%,"+t[2]+"%,"+t[3]:t.join(","))+")"})),i&&(l=Ne(t),(a=i.c).join(h)!==l.c.join(h)))for(c=(o=t.replace(Fe,"1").split(et)).length-1;p<c;p++)h+=o[p]+(~a.indexOf(p)?u.shift()||d+"0,0,0,0)":(l.length?l:u.length?u:i).shift());if(!o)for(c=(o=t.split(Fe)).length-1;p<c;p++)h+=o[p]+u[p];return h+o[c]},Fe=function(){var t,r="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b";for(t in Ue)r+="|"+t+"\\b";return new RegExp(r+")","gi")}(),ze=/hsl[a]?\(/,Be=function _colorStringFilter(t){var r,i=t.join(" ");if(Fe.lastIndex=0,Fe.test(i))return r=ze.test(i),t[1]=Oe(t[1],r),t[0]=Oe(t[0],r,Ne(t[1])),!0},Ve=function(){var t,r,i,a,o,l,c=Date.now,h=500,u=33,d=c(),p=d,m=1e3/240,g=m,_=[],b=function _tick(i){var x,y,M,S,b=c()-p,T=!0===i;if((b>h||b<0)&&(d+=b-u),((x=(M=(p+=b)-d)-g)>0||T)&&(S=++a.frame,o=M-1e3*a.time,a.time=M/=1e3,g+=x+(x>=m?4:m-x),y=1),T||(t=r(_tick)),y)for(l=0;l<_.length;l++)_[l](M,o,S,i)};return a={time:0,frame:0,tick:function tick(){b(!0)},deltaRatio:function deltaRatio(t){return o/(1e3/(t||60))},wake:function wake(){S&&(!y&&J()&&(x=y=window,M=x.document||{},st.gsap=Vn,(x.gsapVersions||(x.gsapVersions=[])).push(Vn.version),lt(ot||x.GreenSockGlobals||!x.gsap&&x||{}),Re.forEach(Pe)),i="undefined"!=typeof requestAnimationFrame&&requestAnimationFrame,t&&a.sleep(),r=i||function(t){return setTimeout(t,g-1e3*a.time+1|0)},E=1,b(2))},sleep:function sleep(){(i?cancelAnimationFrame:clearTimeout)(t),E=0,r=dt},lagSmoothing:function lagSmoothing(t,r){h=t||1/0,u=Math.min(r||33,h)},fps:function fps(t){m=1e3/(t||240),g=1e3*a.time+m},add:function add(t,r,i){var o=r?function(r,i,l,c){t(r,i,l,c),a.remove(o)}:t;return a.remove(t),_[i?"unshift":"push"](o),ke(),o},remove:function remove(t,r){~(r=_.indexOf(t))&&_.splice(r,1)&&l>=r&&l--},_listeners:_},a}(),ke=function _wake(){return!E&&Ve.wake()},Ge={},He=/^[\d.\-M][\d.\-,\s]/,We=/["']/g,Xe=function _parseObjectInString(t){for(var r,i,a,o={},l=t.substr(1,t.length-3).split(":"),c=l[0],h=1,u=l.length;h<u;h++)i=l[h],r=h!==u-1?i.lastIndexOf(","):i.length,a=i.substr(0,r),o[c]=isNaN(a)?a.replace(We,"").trim():+a,c=i.substr(r+1).trim();return o},je=function _invertEase(t){return function(r){return 1-t(1-r)}},qe=function _propagateYoyoEase(t,r){for(var i,a=t._first;a;)a instanceof en?_propagateYoyoEase(a,r):!a.vars.yoyoEase||a._yoyo&&a._repeat||a._yoyo===r||(a.timeline?_propagateYoyoEase(a.timeline,r):(i=a._ease,a._ease=a._yEase,a._yEase=i,a._yoyo=r)),a=a._next},Ye=function _parseEase(t,r){return t&&(W(t)?t:Ge[t]||function _configEaseFromString(t){var r=(t+"").split("("),i=Ge[r[0]];return i&&r.length>1&&i.config?i.config.apply(null,~t.indexOf("{")?[Xe(r[1])]:function _valueInParentheses(t){var r=t.indexOf("(")+1,i=t.indexOf(")"),a=t.indexOf("(",r);return t.substring(r,~a&&a<i?t.indexOf(")",i+1):i)}(t).split(",").map(Nt)):Ge._CE&&He.test(t)?Ge._CE("",t):i}(t))||r},Je=function _insertEase(t,r,i,a){void 0===i&&(i=function easeOut(t){return 1-r(1-t)}),void 0===a&&(a=function easeInOut(t){return t<.5?r(2*t)/2:1-r(2*(1-t))/2});var o,l={easeIn:r,easeOut:i,easeInOut:a};return Ct(t,(function(t){for(var r in Ge[t]=st[t]=l,Ge[o=t.toLowerCase()]=i,l)Ge[o+("easeIn"===r?".in":"easeOut"===r?".out":".inOut")]=Ge[t+"."+r]=l[r]})),l},Ke=function _easeInOutFromOut(t){return function(r){return r<.5?(1-t(1-2*r))/2:.5+t(2*(r-.5))/2}},Ze=function _configElastic(t,r,i){var a=r>=1?r:1,o=(i||(t?.3:.45))/(r<1?r:1),l=o/O*(Math.asin(1/a)||0),c=function easeOut(t){return 1===t?1:a*Math.pow(2,-10*t)*G((t-l)*o)+1},h="out"===t?c:"in"===t?function(t){return 1-c(1-t)}:Ke(c);return o=O/o,h.config=function(r,i){return _configElastic(t,r,i)},h},Qe=function _configBack(t,r){void 0===r&&(r=1.70158);var i=function easeOut(t){return t?--t*t*((r+1)*t+r)+1:0},a="out"===t?i:"in"===t?function(t){return 1-i(1-t)}:Ke(i);return a.config=function(r){return _configBack(t,r)},a};Ct("Linear,Quad,Cubic,Quart,Quint,Strong",(function(t,r){var i=r<5?r+1:r;Je(t+",Power"+(i-1),r?function(t){return Math.pow(t,i)}:function(t){return t},(function(t){return 1-Math.pow(1-t,i)}),(function(t){return t<.5?Math.pow(2*t,i)/2:1-Math.pow(2*(1-t),i)/2}))})),Ge.Linear.easeNone=Ge.none=Ge.Linear.easeIn,Je("Elastic",Ze("in"),Ze("out"),Ze()),w=7.5625,R=2*(A=1/(C=2.75)),P=2.5*A,Je("Bounce",(function(t){return 1-L(1-t)}),L=function easeOut(t){return t<A?w*t*t:t<R?w*Math.pow(t-1.5/C,2)+.75:t<P?w*(t-=2.25/C)*t+.9375:w*Math.pow(t-2.625/C,2)+.984375}),Je("Expo",(function(t){return Math.pow(2,10*(t-1))*t+t*t*t*t*t*t*(1-t)})),Je("Circ",(function(t){return-(V(1-t*t)-1)})),Je("Sine",(function(t){return 1===t?1:1-k(t*z)})),Je("Back",Qe("in"),Qe("out"),Qe()),Ge.SteppedEase=Ge.steps=st.SteppedEase={config:function config(t,r){void 0===t&&(t=1);var i=1/t,a=t+(r?0:1),o=r?1:0;return function(t){return((a*ue(0,.99999999,t)|0)+o)*i}}},D.ease=Ge["quad.out"],Ct("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt",(function(t){return bt+=t+","+t+"Params,"}));var $e=function GSCache(t,r){this.id=B++,t._gsap=this,this.target=t,this.harness=r,this.get=r?r.get:wt,this.set=r?r.getSetter:vn},tn=function(){function Animation(t){this.vars=t,this._delay=+t.delay||0,(this._repeat=t.repeat===1/0?-2:t.repeat||0)&&(this._rDelay=t.repeatDelay||0,this._yoyo=!!t.yoyo||!!t.yoyoEase),this._ts=1,ae(this,+t.duration,1,1),this.data=t.data,g&&(this._ctx=g,g.data.push(this)),E||Ve.wake()}var t=Animation.prototype;return t.delay=function delay(t){return t||0===t?(this.parent&&this.parent.smoothChildTiming&&this.startTime(this._start+t-this._delay),this._delay=t,this):this._delay},t.duration=function duration(t){return arguments.length?this.totalDuration(this._repeat>0?t+(t+this._rDelay)*this._repeat:t):this.totalDuration()&&this._dur},t.totalDuration=function totalDuration(t){return arguments.length?(this._dirty=0,ae(this,this._repeat<0?t:(t-this._repeat*this._rDelay)/(this._repeat+1))):this._tDur},t.totalTime=function totalTime(t,r){if(ke(),!arguments.length)return this._tTime;var i=this._dp;if(i&&i.smoothChildTiming&&this._ts){for(Qt(this,t),!i._dp||i.parent||$t(i,this);i&&i.parent;)i.parent._time!==i._start+(i._ts>=0?i._tTime/i._ts:(i.totalDuration()-i._tTime)/-i._ts)&&i.totalTime(i._tTime,!0),i=i.parent;!this.parent&&this._dp.autoRemoveChildren&&(this._ts>0&&t<this._tDur||this._ts<0&&t>0||!this._tDur&&!t)&&te(this._dp,this,this._start-this._delay)}return(this._tTime!==t||!this._dur&&!r||this._initted&&Math.abs(this._zTime)===N||!t&&!this._initted&&(this.add||this._ptLookup))&&(this._ts||(this._pTime=t),It(this,t,r)),this},t.time=function time(t,r){return arguments.length?this.totalTime(Math.min(this.totalDuration(),t+Yt(this))%(this._dur+this._rDelay)||(t?this._dur:0),r):this._time},t.totalProgress=function totalProgress(t,r){return arguments.length?this.totalTime(this.totalDuration()*t,r):this.totalDuration()?Math.min(1,this._tTime/this._tDur):this.rawTime()>=0&&this._initted?1:0},t.progress=function progress(t,r){return arguments.length?this.totalTime(this.duration()*(!this._yoyo||1&this.iteration()?t:1-t)+Yt(this),r):this.duration()?Math.min(1,this._time/this._dur):this.rawTime()>0?1:0},t.iteration=function iteration(t,r){var i=this.duration()+this._rDelay;return arguments.length?this.totalTime(this._time+(t-1)*i,r):this._repeat?Jt(this._tTime,i)+1:1},t.timeScale=function timeScale(t,r){if(!arguments.length)return-1e-8===this._rts?0:this._rts;if(this._rts===t)return this;var i=this.parent&&this._ts?Kt(this.parent._time,this):this._tTime;return this._rts=+t||0,this._ts=this._ps||-1e-8===t?0:this._rts,this.totalTime(ue(-Math.abs(this._delay),this.totalDuration(),i),!1!==r),Zt(this),function _recacheAncestors(t){for(var r=t.parent;r&&r.parent;)r._dirty=1,r.totalDuration(),r=r.parent;return t}(this)},t.paused=function paused(t){return arguments.length?(this._ps!==t&&(this._ps=t,t?(this._pTime=this._tTime||Math.max(-this._delay,this.rawTime()),this._ts=this._act=0):(ke(),this._ts=this._rts,this.totalTime(this.parent&&!this.parent.smoothChildTiming?this.rawTime():this._tTime||this._pTime,1===this.progress()&&Math.abs(this._zTime)!==N&&(this._tTime-=N)))),this):this._ps},t.startTime=function startTime(t){if(arguments.length){this._start=t;var r=this.parent||this._dp;return r&&(r._sort||!this.parent)&&te(r,this,t-this._delay),this}return this._start},t.endTime=function endTime(t){return this._start+(Y(t)?this.totalDuration():this.duration())/Math.abs(this._ts||1)},t.rawTime=function rawTime(t){var r=this.parent||this._dp;return r?t&&(!this._ts||this._repeat&&this._time&&this.totalProgress()<1)?this._tTime%(this._dur+this._rDelay):this._ts?Kt(r.rawTime(t),this):this._tTime:this._tTime},t.revert=function revert(t){void 0===t&&(t=mt);var r=m;return m=t,Dt(this)&&(this.timeline&&this.timeline.revert(t),this.totalTime(-.01,t.suppressEvents)),"nested"!==this.data&&!1!==t.kill&&this.kill(),m=r,this},t.globalTime=function globalTime(t){for(var r=this,i=arguments.length?t:r.rawTime();r;)i=r._start+i/(Math.abs(r._ts)||1),r=r._dp;return!this.parent&&this._sat?this._sat.globalTime(t):i},t.repeat=function repeat(t){return arguments.length?(this._repeat=t===1/0?-2:t,se(this)):-2===this._repeat?1/0:this._repeat},t.repeatDelay=function repeatDelay(t){if(arguments.length){var r=this._time;return this._rDelay=t,se(this),r?this.time(r):this}return this._rDelay},t.yoyo=function yoyo(t){return arguments.length?(this._yoyo=t,this):this._yoyo},t.seek=function seek(t,r){return this.totalTime(le(this,t),Y(r))},t.restart=function restart(t,r){return this.play().totalTime(t?-this._delay:0,Y(r)),this._dur||(this._zTime=-1e-8),this},t.play=function play(t,r){return null!=t&&this.seek(t,r),this.reversed(!1).paused(!1)},t.reverse=function reverse(t,r){return null!=t&&this.seek(t||this.totalDuration(),r),this.reversed(!0).paused(!1)},t.pause=function pause(t,r){return null!=t&&this.seek(t,r),this.paused(!0)},t.resume=function resume(){return this.paused(!1)},t.reversed=function reversed(t){return arguments.length?(!!t!==this.reversed()&&this.timeScale(-this._rts||(t?-1e-8:0)),this):this._rts<0},t.invalidate=function invalidate(){return this._initted=this._act=0,this._zTime=-1e-8,this},t.isActive=function isActive(){var t,r=this.parent||this._dp,i=this._start;return!(r&&!(this._ts&&this._initted&&r.isActive()&&(t=r.rawTime(!0))>=i&&t<this.endTime(!0)-N))},t.eventCallback=function eventCallback(t,r,i){var a=this.vars;return arguments.length>1?(r?(a[t]=r,i&&(a[t+"Params"]=i),"onUpdate"===t&&(this._onUpdate=r)):delete a[t],this):a[t]},t.then=function then(t){var r=this;return new Promise((function(i){var a=W(t)?t:Ot,o=function _resolve(){var t=r.then;r.then=null,W(a)&&(a=a(r))&&(a.then||a===r)&&(r.then=t),i(a),r.then=t};r._initted&&1===r.totalProgress()&&r._ts>=0||!r._tTime&&r._ts<0?o():r._prom=o}))},t.kill=function kill(){Ae(this)},Animation}();Ft(tn.prototype,{_time:0,_start:0,_end:0,_tTime:0,_tDur:0,_dirty:0,_repeat:0,_yoyo:!1,parent:null,_initted:!1,_rDelay:0,_ts:1,_dp:0,ratio:0,_zTime:-1e-8,_prom:0,_ps:!1,_rts:1});var en=function(t){function Timeline(r,i){var a;return void 0===r&&(r={}),(a=t.call(this,r)||this).labels={},a.smoothChildTiming=!!r.smoothChildTiming,a.autoRemoveChildren=!!r.autoRemoveChildren,a._sort=Y(r.sortChildren),_&&te(r.parent||_,_assertThisInitialized(a),i),r.reversed&&a.reverse(),r.paused&&a.paused(!0),r.scrollTrigger&&ee(_assertThisInitialized(a),r.scrollTrigger),a}_inheritsLoose(Timeline,t);var r=Timeline.prototype;return r.to=function to(t,r,i){return ce(0,arguments,this),this},r.from=function from(t,r,i){return ce(1,arguments,this),this},r.fromTo=function fromTo(t,r,i,a){return ce(2,arguments,this),this},r.set=function set(t,r,i){return r.duration=0,r.parent=this,kt(r).repeatDelay||(r.repeat=0),r.immediateRender=!!r.immediateRender,new pn(t,r,le(this,i),1),this},r.call=function call(t,r,i){return te(this,pn.delayedCall(0,t,r),i)},r.staggerTo=function staggerTo(t,r,i,a,o,l,c){return i.duration=r,i.stagger=i.stagger||a,i.onComplete=l,i.onCompleteParams=c,i.parent=this,new pn(t,i,le(this,o)),this},r.staggerFrom=function staggerFrom(t,r,i,a,o,l,c){return i.runBackwards=1,kt(i).immediateRender=Y(i.immediateRender),this.staggerTo(t,r,i,a,o,l,c)},r.staggerFromTo=function staggerFromTo(t,r,i,a,o,l,c,h){return a.startAt=i,kt(a).immediateRender=Y(a.immediateRender),this.staggerTo(t,r,a,o,l,c,h)},r.render=function render(t,r,i){var a,o,l,c,h,u,d,p,g,x,y,M,S=this._time,b=this._dirty?this.totalDuration():this._tDur,T=this._dur,E=t<=0?0:Rt(t),w=this._zTime<0!=t<0&&(this._initted||!T);if(this!==_&&E>b&&t>=0&&(E=b),E!==this._tTime||i||w){if(S!==this._time&&T&&(E+=this._time-S,t+=this._time-S),a=E,g=this._start,u=!(p=this._ts),w&&(T||(S=this._zTime),(t||!r)&&(this._zTime=t)),this._repeat){if(y=this._yoyo,h=T+this._rDelay,this._repeat<-1&&t<0)return this.totalTime(100*h+t,r,i);if(a=Rt(E%h),E===b?(c=this._repeat,a=T):((c=~~(x=Rt(E/h)))&&c===x&&(a=T,c--),a>T&&(a=T)),x=Jt(this._tTime,h),!S&&this._tTime&&x!==c&&this._tTime-x*h-this._dur<=0&&(x=c),y&&1&c&&(a=T-a,M=1),c!==x&&!this._lock){var C=y&&1&x,A=C===(y&&1&c);if(c<x&&(C=!C),S=C?0:E%T?T:E,this._lock=1,this.render(S||(M?0:Rt(c*h)),r,!T)._lock=0,this._tTime=E,!r&&this.parent&&Ce(this,"onRepeat"),this.vars.repeatRefresh&&!M&&(this.invalidate()._lock=1),S&&S!==this._time||u!==!this._ts||this.vars.onRepeat&&!this.parent&&!this._act)return this;if(T=this._dur,b=this._tDur,A&&(this._lock=2,S=C?T:-1e-4,this.render(S,!0),this.vars.repeatRefresh&&!M&&this.invalidate()),this._lock=0,!this._ts&&!u)return this;qe(this,M)}}if(this._hasPause&&!this._forcing&&this._lock<2&&(d=function _findNextPauseTween(t,r,i){var a;if(i>r)for(a=t._first;a&&a._start<=i;){if("isPause"===a.data&&a._start>r)return a;a=a._next}else for(a=t._last;a&&a._start>=i;){if("isPause"===a.data&&a._start<r)return a;a=a._prev}}(this,Rt(S),Rt(a)),d&&(E-=a-(a=d._start))),this._tTime=E,this._time=a,this._act=!p,this._initted||(this._onUpdate=this.vars.onUpdate,this._initted=1,this._zTime=t,S=0),!S&&E&&!r&&!x&&(Ce(this,"onStart"),this._tTime!==E))return this;if(a>=S&&t>=0)for(o=this._first;o;){if(l=o._next,(o._act||a>=o._start)&&o._ts&&d!==o){if(o.parent!==this)return this.render(t,r,i);if(o.render(o._ts>0?(a-o._start)*o._ts:(o._dirty?o.totalDuration():o._tDur)+(a-o._start)*o._ts,r,i),a!==this._time||!this._ts&&!u){d=0,l&&(E+=this._zTime=-1e-8);break}}o=l}else{o=this._last;for(var R=t<0?t:a;o;){if(l=o._prev,(o._act||R<=o._end)&&o._ts&&d!==o){if(o.parent!==this)return this.render(t,r,i);if(o.render(o._ts>0?(R-o._start)*o._ts:(o._dirty?o.totalDuration():o._tDur)+(R-o._start)*o._ts,r,i||m&&Dt(o)),a!==this._time||!this._ts&&!u){d=0,l&&(E+=this._zTime=R?-1e-8:N);break}}o=l}}if(d&&!r&&(this.pause(),d.render(a>=S?0:-1e-8)._zTime=a>=S?1:-1,this._ts))return this._start=g,Zt(this),this.render(t,r,i);this._onUpdate&&!r&&Ce(this,"onUpdate",!0),(E===b&&this._tTime>=this.totalDuration()||!E&&S)&&(g!==this._start&&Math.abs(p)===Math.abs(this._ts)||this._lock||((t||!T)&&(E===b&&this._ts>0||!E&&this._ts<0)&&Wt(this,1),r||t<0&&!S||!E&&!S&&b||(Ce(this,E===b&&t>=0?"onComplete":"onReverseComplete",!0),this._prom&&!(E<b&&this.timeScale()>0)&&this._prom())))}return this},r.add=function add(t,r){var i=this;if(X(r)||(r=le(this,r,t)),!(t instanceof tn)){if(Q(t))return t.forEach((function(t){return i.add(t,r)})),this;if(H(t))return this.addLabel(t,r);if(!W(t))return this;t=pn.delayedCall(0,t)}return this!==t?te(this,t,r):this},r.getChildren=function getChildren(t,r,i,a){void 0===t&&(t=!0),void 0===r&&(r=!0),void 0===i&&(i=!0),void 0===a&&(a=-I);for(var o=[],l=this._first;l;)l._start>=a&&(l instanceof pn?r&&o.push(l):(i&&o.push(l),t&&o.push.apply(o,l.getChildren(!0,r,i)))),l=l._next;return o},r.getById=function getById(t){for(var r=this.getChildren(1,1,1),i=r.length;i--;)if(r[i].vars.id===t)return r[i]},r.remove=function remove(t){return H(t)?this.removeLabel(t):W(t)?this.killTweensOf(t):(t.parent===this&&Ht(this,t),t===this._recent&&(this._recent=this._last),Xt(this))},r.totalTime=function totalTime(r,i){return arguments.length?(this._forcing=1,!this._dp&&this._ts&&(this._start=Rt(Ve.time-(this._ts>0?r/this._ts:(this.totalDuration()-r)/-this._ts))),t.prototype.totalTime.call(this,r,i),this._forcing=0,this):this._tTime},r.addLabel=function addLabel(t,r){return this.labels[t]=le(this,r),this},r.removeLabel=function removeLabel(t){return delete this.labels[t],this},r.addPause=function addPause(t,r,i){var a=pn.delayedCall(0,r||dt,i);return a.data="isPause",this._hasPause=1,te(this,a,le(this,t))},r.removePause=function removePause(t){var r=this._first;for(t=le(this,t);r;)r._start===t&&"isPause"===r.data&&Wt(r),r=r._next},r.killTweensOf=function killTweensOf(t,r,i){for(var a=this.getTweensOf(t,i),o=a.length;o--;)nn!==a[o]&&a[o].kill(t,r);return this},r.getTweensOf=function getTweensOf(t,r){for(var i,a=[],o=ge(t),l=this._first,c=X(r);l;)l instanceof pn?Lt(l._targets,o)&&(c?(!nn||l._initted&&l._ts)&&l.globalTime(0)<=r&&l.globalTime(l.totalDuration())>r:!r||l.isActive())&&a.push(l):(i=l.getTweensOf(o,r)).length&&a.push.apply(a,i),l=l._next;return a},r.tweenTo=function tweenTo(t,r){r=r||{};var i,a=this,o=le(a,t),l=r,c=l.startAt,h=l.onStart,u=l.onStartParams,d=l.immediateRender,p=pn.to(a,Ft({ease:r.ease||"none",lazy:!1,immediateRender:!1,time:o,overwrite:"auto",duration:r.duration||Math.abs((o-(c&&"time"in c?c.time:a._time))/a.timeScale())||N,onStart:function onStart(){if(a.pause(),!i){var t=r.duration||Math.abs((o-(c&&"time"in c?c.time:a._time))/a.timeScale());p._dur!==t&&ae(p,t,0,1).render(p._time,!0,!0),i=1}h&&h.apply(p,u||[])}},r));return d?p.render(0):p},r.tweenFromTo=function tweenFromTo(t,r,i){return this.tweenTo(r,Ft({startAt:{time:le(this,t)}},i))},r.recent=function recent(){return this._recent},r.nextLabel=function nextLabel(t){return void 0===t&&(t=this._time),we(this,le(this,t))},r.previousLabel=function previousLabel(t){return void 0===t&&(t=this._time),we(this,le(this,t),1)},r.currentLabel=function currentLabel(t){return arguments.length?this.seek(t,!0):this.previousLabel(this._time+N)},r.shiftChildren=function shiftChildren(t,r,i){void 0===i&&(i=0);for(var a,o=this._first,l=this.labels;o;)o._start>=i&&(o._start+=t,o._end+=t),o=o._next;if(r)for(a in l)l[a]>=i&&(l[a]+=t);return Xt(this)},r.invalidate=function invalidate(r){var i=this._first;for(this._lock=0;i;)i.invalidate(r),i=i._next;return t.prototype.invalidate.call(this,r)},r.clear=function clear(t){void 0===t&&(t=!0);for(var r,i=this._first;i;)r=i._next,this.remove(i),i=r;return this._dp&&(this._time=this._tTime=this._pTime=0),t&&(this.labels={}),Xt(this)},r.totalDuration=function totalDuration(t){var r,i,a,o=0,l=this,c=l._last,h=I;if(arguments.length)return l.timeScale((l._repeat<0?l.duration():l.totalDuration())/(l.reversed()?-t:t));if(l._dirty){for(a=l.parent;c;)r=c._prev,c._dirty&&c.totalDuration(),(i=c._start)>h&&l._sort&&c._ts&&!l._lock?(l._lock=1,te(l,c,i-c._delay,1)._lock=0):h=i,i<0&&c._ts&&(o-=i,(!a&&!l._dp||a&&a.smoothChildTiming)&&(l._start+=i/l._ts,l._time-=i,l._tTime-=i),l.shiftChildren(-i,!1,-Infinity),h=0),c._end>o&&c._ts&&(o=c._end),c=r;ae(l,l===_&&l._time>o?l._time:o,1,1),l._dirty=0}return l._tDur},Timeline.updateRoot=function updateRoot(t){if(_._ts&&(It(_,Kt(t,_)),b=Ve.frame),Ve.frame>=Mt){Mt+=U.autoSleep||120;var r=_._first;if((!r||!r._ts)&&U.autoSleep&&Ve._listeners.length<2){for(;r&&!r._ts;)r=r._next;r||Ve.sleep()}}},Timeline}(tn);Ft(en.prototype,{_lock:0,_hasPause:0,_forcing:0});var nn,rn,an=function _addComplexStringPropTween(t,r,i,a,o,l,c){var h,u,d,p,m,g,_,x,y=new Cn(this._pt,t,r,0,1,Mn,null,o),M=0,S=0;for(y.b=i,y.e=a,i+="",(_=~(a+="").indexOf("random("))&&(a=Te(a)),l&&(l(x=[i,a],t,r),i=x[0],a=x[1]),u=i.match(nt)||[];h=nt.exec(a);)p=h[0],m=a.substring(M,h.index),d?d=(d+1)%5:"rgba("===m.substr(-5)&&(d=1),p!==u[S++]&&(g=parseFloat(u[S-1])||0,y._pt={_next:y._pt,p:m||1===S?m:",",s:g,c:"="===p.charAt(1)?Pt(g,p)-g:parseFloat(p)-g,m:d&&d<4?Math.round:0},M=nt.lastIndex);return y.c=M<a.length?a.substring(M,a.length):"",y.fp=c,(rt.test(a)||_)&&(y.e=0),this._pt=y,y},sn=function _addPropTween(t,r,i,a,o,l,c,h,u,d){W(a)&&(a=a(o||0,t,l));var p,m=t[r],g="get"!==i?i:W(m)?u?t[r.indexOf("set")||!W(t["get"+r.substr(3)])?r:"get"+r.substr(3)](u):t[r]():m,_=W(m)?u?gn:mn:fn;if(H(a)&&(~a.indexOf("random(")&&(a=Te(a)),"="===a.charAt(1)&&((p=Pt(g,a)+(de(g)||0))||0===p)&&(a=p)),!d||g!==a||rn)return isNaN(g*a)||""===a?(!m&&!(r in t)&&ct(r,a),an.call(this,t,r,g,a,_,h||U.stringFilter,u)):(p=new Cn(this._pt,t,r,+g||0,a-(g||0),"boolean"==typeof m?yn:xn,0,_),u&&(p.fp=u),c&&p.modifier(c,this,t),this._pt=p)},on=function _checkPlugin(t,r,i,a,o,l){var c,h,u,d;if(xt[t]&&!1!==(c=new xt[t]).init(o,c.rawVars?r[t]:function _processVars(t,r,i,a,o){if(W(t)&&(t=hn(t,o,r,i,a)),!q(t)||t.style&&t.nodeType||Q(t)||Z(t))return H(t)?hn(t,o,r,i,a):t;var l,c={};for(l in t)c[l]=hn(t[l],o,r,i,a);return c}(r[t],a,o,l,i),i,a,l)&&(i._pt=h=new Cn(i._pt,o,t,0,1,c.render,c,0,c.priority),i!==T))for(u=i._ptLookup[i._targets.indexOf(o)],d=c._props.length;d--;)u[c._props[d]]=h;return c},ln=function _initTween(t,r,i){var a,o,l,c,h,u,d,g,x,y,M,S,b,T=t.vars,E=T.ease,w=T.startAt,C=T.immediateRender,A=T.lazy,R=T.onUpdate,P=T.runBackwards,L=T.yoyoEase,U=T.keyframes,O=T.autoRevert,z=t._dur,B=t._startAt,V=t._targets,k=t.parent,G=k&&"nested"===k.data?k.vars.targets:V,H="auto"===t._overwrite&&!p,W=t.timeline;if(W&&(!U||!E)&&(E="none"),t._ease=Ye(E,D.ease),t._yEase=L?je(Ye(!0===L?E:L,D.ease)):0,L&&t._yoyo&&!t._repeat&&(L=t._yEase,t._yEase=t._ease,t._ease=L),t._from=!W&&!!T.runBackwards,!W||U&&!T.stagger){if(S=(g=V[0]?Et(V[0]).harness:0)&&T[g.prop],a=Vt(T,gt),B&&(B._zTime<0&&B.progress(1),r<0&&P&&C&&!O?B.render(-1,!0):B.revert(P&&z?ft:pt),B._lazy=0),w){if(Wt(t._startAt=pn.set(V,Ft({data:"isStart",overwrite:!1,parent:k,immediateRender:!0,lazy:!B&&Y(A),startAt:null,delay:0,onUpdate:R&&function(){return Ce(t,"onUpdate")},stagger:0},w))),t._startAt._dp=0,t._startAt._sat=t,r<0&&(m||!C&&!O)&&t._startAt.revert(ft),C&&z&&r<=0&&i<=0)return void(r&&(t._zTime=r))}else if(P&&z&&!B)if(r&&(C=!1),l=Ft({overwrite:!1,data:"isFromStart",lazy:C&&!B&&Y(A),immediateRender:C,stagger:0,parent:k},a),S&&(l[g.prop]=S),Wt(t._startAt=pn.set(V,l)),t._startAt._dp=0,t._startAt._sat=t,r<0&&(m?t._startAt.revert(ft):t._startAt.render(-1,!0)),t._zTime=r,C){if(!r)return}else _initTween(t._startAt,N,N);for(t._pt=t._ptCache=0,A=z&&Y(A)||A&&!z,o=0;o<V.length;o++){if(d=(h=V[o])._gsap||Tt(V)[o]._gsap,t._ptLookup[o]=y={},vt[d.id]&&_t.length&&Ut(),M=G===V?o:G.indexOf(h),g&&!1!==(x=new g).init(h,S||a,t,M,G)&&(t._pt=c=new Cn(t._pt,h,x.name,0,1,x.render,x,0,x.priority),x._props.forEach((function(t){y[t]=c})),x.priority&&(u=1)),!g||S)for(l in a)xt[l]&&(x=on(l,a,t,M,h,G))?x.priority&&(u=1):y[l]=c=sn.call(t,h,l,"get",a[l],M,G,0,T.stringFilter);t._op&&t._op[o]&&t.kill(h,t._op[o]),H&&t._pt&&(nn=t,_.killTweensOf(h,y,t.globalTime(r)),b=!t.parent,nn=0),t._pt&&A&&(vt[d.id]=1)}u&&wn(t),t._onInit&&t._onInit(t)}t._onUpdate=R,t._initted=(!t._op||t._pt)&&!b,U&&r<=0&&W.render(I,!0,!0)},cn=function _parseKeyframe(t,r,i,a){var o,l,c=r.ease||a||"power1.inOut";if(Q(r))l=i[t]||(i[t]=[]),r.forEach((function(t,i){return l.push({t:i/(r.length-1)*100,v:t,e:c})}));else for(o in r)l=i[o]||(i[o]=[]),"ease"===o||l.push({t:parseFloat(t),v:r[o],e:c})},hn=function _parseFuncOrString(t,r,i,a,o){return W(t)?t.call(r,i,a,o):H(t)&&~t.indexOf("random(")?Te(t):t},un=bt+"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",dn={};Ct(un+",id,stagger,delay,duration,paused,scrollTrigger",(function(t){return dn[t]=1}));var pn=function(t){function Tween(r,i,a,o){var l;"number"==typeof i&&(a.duration=i,i=a,a=null);var c,h,u,d,m,g,x,y,M=(l=t.call(this,o?i:kt(i))||this).vars,S=M.duration,b=M.delay,T=M.immediateRender,E=M.stagger,w=M.overwrite,C=M.keyframes,A=M.defaults,R=M.scrollTrigger,P=M.yoyoEase,L=i.parent||_,D=(Q(r)||Z(r)?X(r[0]):"length"in i)?[r]:ge(r);if(l._targets=D.length?Tt(D):ht("GSAP target "+r+" not found. https://gsap.com",!U.nullTargetWarn)||[],l._ptLookup=[],l._overwrite=w,C||E||K(S)||K(b)){if(i=l.vars,(c=l.timeline=new en({data:"nested",defaults:A||{},targets:L&&"nested"===L.data?L.vars.targets:D})).kill(),c.parent=c._dp=_assertThisInitialized(l),c._start=0,E||K(S)||K(b)){if(d=D.length,x=E&&xe(E),q(E))for(m in E)~un.indexOf(m)&&(y||(y={}),y[m]=E[m]);for(h=0;h<d;h++)(u=Vt(i,dn)).stagger=0,P&&(u.yoyoEase=P),y&&zt(u,y),g=D[h],u.duration=+hn(S,_assertThisInitialized(l),h,g,D),u.delay=(+hn(b,_assertThisInitialized(l),h,g,D)||0)-l._delay,!E&&1===d&&u.delay&&(l._delay=b=u.delay,l._start+=b,u.delay=0),c.to(g,u,x?x(h,g,D):0),c._ease=Ge.none;c.duration()?S=b=0:l.timeline=0}else if(C){kt(Ft(c.vars.defaults,{ease:"none"})),c._ease=Ye(C.ease||i.ease||"none");var I,N,O,z=0;if(Q(C))C.forEach((function(t){return c.to(D,t,">")})),c.duration();else{for(m in u={},C)"ease"===m||"easeEach"===m||cn(m,C[m],u,C.easeEach);for(m in u)for(I=u[m].sort((function(t,r){return t.t-r.t})),z=0,h=0;h<I.length;h++)(O={ease:(N=I[h]).e,duration:(N.t-(h?I[h-1].t:0))/100*S})[m]=N.v,c.to(D,O,z),z+=O.duration;c.duration()<S&&c.to({},{duration:S-c.duration()})}}S||l.duration(S=c.duration())}else l.timeline=0;return!0!==w||p||(nn=_assertThisInitialized(l),_.killTweensOf(D),nn=0),te(L,_assertThisInitialized(l),a),i.reversed&&l.reverse(),i.paused&&l.paused(!0),(T||!S&&!C&&l._start===Rt(L._time)&&Y(T)&&qt(_assertThisInitialized(l))&&"nested"!==L.data)&&(l._tTime=-1e-8,l.render(Math.max(0,-b)||0)),R&&ee(_assertThisInitialized(l),R),l}_inheritsLoose(Tween,t);var r=Tween.prototype;return r.render=function render(t,r,i){var a,o,l,c,h,u,d,p,g,_=this._time,x=this._tDur,y=this._dur,M=t<0,S=t>x-N&&!M?x:t<N?0:t;if(y){if(S!==this._tTime||!t||i||!this._initted&&this._tTime||this._startAt&&this._zTime<0!==M||this._lazy){if(a=S,p=this.timeline,this._repeat){if(c=y+this._rDelay,this._repeat<-1&&M)return this.totalTime(100*c+t,r,i);if(a=Rt(S%c),S===x?(l=this._repeat,a=y):(l=~~(h=Rt(S/c)))&&l===h?(a=y,l--):a>y&&(a=y),(u=this._yoyo&&1&l)&&(g=this._yEase,a=y-a),h=Jt(this._tTime,c),a===_&&!i&&this._initted&&l===h)return this._tTime=S,this;l!==h&&(p&&this._yEase&&qe(p,u),this.vars.repeatRefresh&&!u&&!this._lock&&a!==c&&this._initted&&(this._lock=i=1,this.render(Rt(c*l),!0).invalidate()._lock=0))}if(!this._initted){if(ne(this,M?t:a,i,r,S))return this._tTime=0,this;if(!(_===this._time||i&&this.vars.repeatRefresh&&l!==h))return this;if(y!==this._dur)return this.render(t,r,i)}if(this._tTime=S,this._time=a,!this._act&&this._ts&&(this._act=1,this._lazy=0),this.ratio=d=(g||this._ease)(a/y),this._from&&(this.ratio=d=1-d),!_&&S&&!r&&!h&&(Ce(this,"onStart"),this._tTime!==S))return this;for(o=this._pt;o;)o.r(d,o.d),o=o._next;p&&p.render(t<0?t:p._dur*p._ease(a/this._dur),r,i)||this._startAt&&(this._zTime=t),this._onUpdate&&!r&&(M&&jt(this,t,0,i),Ce(this,"onUpdate")),this._repeat&&l!==h&&this.vars.onRepeat&&!r&&this.parent&&Ce(this,"onRepeat"),S!==this._tDur&&S||this._tTime!==S||(M&&!this._onUpdate&&jt(this,t,0,!0),(t||!y)&&(S===this._tDur&&this._ts>0||!S&&this._ts<0)&&Wt(this,1),r||M&&!_||!(S||_||u)||(Ce(this,S===x?"onComplete":"onReverseComplete",!0),this._prom&&!(S<x&&this.timeScale()>0)&&this._prom()))}}else!function _renderZeroDurationTween(t,r,i,a){var o,l,c,h=t.ratio,u=r<0||!r&&(!t._start&&re(t)&&(t._initted||!ie(t))||(t._ts<0||t._dp._ts<0)&&!ie(t))?0:1,d=t._rDelay,p=0;if(d&&t._repeat&&(p=ue(0,t._tDur,r),l=Jt(p,d),t._yoyo&&1&l&&(u=1-u),l!==Jt(t._tTime,d)&&(h=1-u,t.vars.repeatRefresh&&t._initted&&t.invalidate())),u!==h||m||a||t._zTime===N||!r&&t._zTime){if(!t._initted&&ne(t,r,a,i,p))return;for(c=t._zTime,t._zTime=r||(i?N:0),i||(i=r&&!c),t.ratio=u,t._from&&(u=1-u),t._time=0,t._tTime=p,o=t._pt;o;)o.r(u,o.d),o=o._next;r<0&&jt(t,r,0,!0),t._onUpdate&&!i&&Ce(t,"onUpdate"),p&&t._repeat&&!i&&t.parent&&Ce(t,"onRepeat"),(r>=t._tDur||r<0)&&t.ratio===u&&(u&&Wt(t,1),i||m||(Ce(t,u?"onComplete":"onReverseComplete",!0),t._prom&&t._prom()))}else t._zTime||(t._zTime=r)}(this,t,r,i);return this},r.targets=function targets(){return this._targets},r.invalidate=function invalidate(r){return(!r||!this.vars.runBackwards)&&(this._startAt=0),this._pt=this._op=this._onUpdate=this._lazy=this.ratio=0,this._ptLookup=[],this.timeline&&this.timeline.invalidate(r),t.prototype.invalidate.call(this,r)},r.resetTo=function resetTo(t,r,i,a,o){E||Ve.wake(),this._ts||this.play();var l=Math.min(this._dur,(this._dp._time-this._start)*this._ts);return this._initted||ln(this,l),function _updatePropTweens(t,r,i,a,o,l,c,h){var u,d,p,m,g=(t._pt&&t._ptCache||(t._ptCache={}))[r];if(!g)for(g=t._ptCache[r]=[],p=t._ptLookup,m=t._targets.length;m--;){if((u=p[m][r])&&u.d&&u.d._pt)for(u=u.d._pt;u&&u.p!==r&&u.fp!==r;)u=u._next;if(!u)return rn=1,t.vars[r]="+=0",ln(t,c),rn=0,h?ht(r+" not eligible for reset"):1;g.push(u)}for(m=g.length;m--;)(u=(d=g[m])._pt||d).s=!a&&0!==a||o?u.s+(a||0)+l*u.c:a,u.c=i-u.s,d.e&&(d.e=At(i)+de(d.e)),d.b&&(d.b=u.s+de(d.b))}(this,t,r,i,a,this._ease(l/this._dur),l,o)?this.resetTo(t,r,i,a,1):(Qt(this,0),this.parent||Gt(this._dp,this,"_first","_last",this._dp._sort?"_start":0),this.render(0))},r.kill=function kill(t,r){if(void 0===r&&(r="all"),!(t||r&&"all"!==r))return this._lazy=this._pt=0,this.parent?Ae(this):this.scrollTrigger&&this.scrollTrigger.kill(!!m),this;if(this.timeline){var i=this.timeline.totalDuration();return this.timeline.killTweensOf(t,r,nn&&!0!==nn.vars.overwrite)._first||Ae(this),this.parent&&i!==this.timeline.totalDuration()&&ae(this,this._dur*this.timeline._tDur/i,0,1),this}var a,o,l,c,h,u,d,p=this._targets,g=t?ge(t):p,_=this._ptLookup,x=this._pt;if((!r||"all"===r)&&function _arraysMatch(t,r){for(var i=t.length,a=i===r.length;a&&i--&&t[i]===r[i];);return i<0}(p,g))return"all"===r&&(this._pt=0),Ae(this);for(a=this._op=this._op||[],"all"!==r&&(H(r)&&(h={},Ct(r,(function(t){return h[t]=1})),r=h),r=function _addAliasesToVars(t,r){var i,a,o,l,c=t[0]?Et(t[0]).harness:0,h=c&&c.aliases;if(!h)return r;for(a in i=zt({},r),h)if(a in i)for(o=(l=h[a].split(",")).length;o--;)i[l[o]]=i[a];return i}(p,r)),d=p.length;d--;)if(~g.indexOf(p[d]))for(h in o=_[d],"all"===r?(a[d]=r,c=o,l={}):(l=a[d]=a[d]||{},c=r),c)(u=o&&o[h])&&("kill"in u.d&&!0!==u.d.kill(h)||Ht(this,u,"_pt"),delete o[h]),"all"!==l&&(l[h]=1);return this._initted&&!this._pt&&x&&Ae(this),this},Tween.to=function to(t,r){return new Tween(t,r,arguments[2])},Tween.from=function from(t,r){return ce(1,arguments)},Tween.delayedCall=function delayedCall(t,r,i,a){return new Tween(r,0,{immediateRender:!1,lazy:!1,overwrite:!1,delay:t,onComplete:r,onReverseComplete:r,onCompleteParams:i,onReverseCompleteParams:i,callbackScope:a})},Tween.fromTo=function fromTo(t,r,i){return ce(2,arguments)},Tween.set=function set(t,r){return r.duration=0,r.repeatDelay||(r.repeat=0),new Tween(t,r)},Tween.killTweensOf=function killTweensOf(t,r,i){return _.killTweensOf(t,r,i)},Tween}(tn);Ft(pn.prototype,{_targets:[],_lazy:0,_startAt:0,_op:0,_onInit:0}),Ct("staggerTo,staggerFrom,staggerFromTo",(function(t){pn[t]=function(){var r=new en,i=pe.call(arguments,0);return i.splice("staggerFromTo"===t?5:4,0,0),r[t].apply(r,i)}}));var fn=function _setterPlain(t,r,i){return t[r]=i},mn=function _setterFunc(t,r,i){return t[r](i)},gn=function _setterFuncWithParam(t,r,i,a){return t[r](a.fp,i)},_n=function _setterAttribute(t,r,i){return t.setAttribute(r,i)},vn=function _getSetter(t,r){return W(t[r])?mn:j(t[r])&&t.setAttribute?_n:fn},xn=function _renderPlain(t,r){return r.set(r.t,r.p,Math.round(1e6*(r.s+r.c*t))/1e6,r)},yn=function _renderBoolean(t,r){return r.set(r.t,r.p,!!(r.s+r.c*t),r)},Mn=function _renderComplexString(t,r){var i=r._pt,a="";if(!t&&r.b)a=r.b;else if(1===t&&r.e)a=r.e;else{for(;i;)a=i.p+(i.m?i.m(i.s+i.c*t):Math.round(1e4*(i.s+i.c*t))/1e4)+a,i=i._next;a+=r.c}r.set(r.t,r.p,a,r)},Sn=function _renderPropTweens(t,r){for(var i=r._pt;i;)i.r(t,i.d),i=i._next},bn=function _addPluginModifier(t,r,i,a){for(var o,l=this._pt;l;)o=l._next,l.p===a&&l.modifier(t,r,i),l=o},Tn=function _killPropTweensOf(t){for(var r,i,a=this._pt;a;)i=a._next,a.p===t&&!a.op||a.op===t?Ht(this,a,"_pt"):a.dep||(r=1),a=i;return!r},En=function _setterWithModifier(t,r,i,a){a.mSet(t,r,a.m.call(a.tween,i,a.mt),a)},wn=function _sortPropTweensByPriority(t){for(var r,i,a,o,l=t._pt;l;){for(r=l._next,i=a;i&&i.pr>l.pr;)i=i._next;(l._prev=i?i._prev:o)?l._prev._next=l:a=l,(l._next=i)?i._prev=l:o=l,l=r}t._pt=a},Cn=function(){function PropTween(t,r,i,a,o,l,c,h,u){this.t=r,this.s=a,this.c=o,this.p=i,this.r=l||xn,this.d=c||this,this.set=h||fn,this.pr=u||0,this._next=t,t&&(t._prev=this)}return PropTween.prototype.modifier=function modifier(t,r,i){this.mSet=this.mSet||this.set,this.set=En,this.m=t,this.mt=i,this.tween=r},PropTween}();Ct(bt+"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger",(function(t){return gt[t]=1})),st.TweenMax=st.TweenLite=pn,st.TimelineLite=st.TimelineMax=en,_=new en({sortChildren:!1,defaults:D,autoRemoveChildren:!0,id:"root",smoothChildTiming:!0}),U.stringFilter=Be;var An=[],Rn={},Pn=[],Ln=0,Un=0,Dn=function _dispatch(t){return(Rn[t]||Pn).map((function(t){return t()}))},In=function _onMediaChange(){var t=Date.now(),r=[];t-Ln>2&&(Dn("matchMediaInit"),An.forEach((function(t){var i,a,o,l,c=t.queries,h=t.conditions;for(a in c)(i=x.matchMedia(c[a]).matches)&&(o=1),i!==h[a]&&(h[a]=i,l=1);l&&(t.revert(),o&&r.push(t))})),Dn("matchMediaRevert"),r.forEach((function(t){return t.onMatch(t,(function(r){return t.add(null,r)}))})),Ln=t,Dn("matchMedia"))},Nn=function(){function Context(t,r){this.selector=r&&_e(r),this.data=[],this._r=[],this.isReverted=!1,this.id=Un++,t&&this.add(t)}var t=Context.prototype;return t.add=function add(t,r,i){W(t)&&(i=r,r=t,t=W);var a=this,o=function f(){var t,o=g,l=a.selector;return o&&o!==a&&o.data.push(a),i&&(a.selector=_e(i)),g=a,t=r.apply(a,arguments),W(t)&&a._r.push(t),g=o,a.selector=l,a.isReverted=!1,t};return a.last=o,t===W?o(a,(function(t){return a.add(null,t)})):t?a[t]=o:o},t.ignore=function ignore(t){var r=g;g=null,t(this),g=r},t.getTweens=function getTweens(){var t=[];return this.data.forEach((function(r){return r instanceof Context?t.push.apply(t,r.getTweens()):r instanceof pn&&!(r.parent&&"nested"===r.parent.data)&&t.push(r)})),t},t.clear=function clear(){this._r.length=this.data.length=0},t.kill=function kill(t,r){var i=this;if(t?function(){for(var r,a=i.getTweens(),o=i.data.length;o--;)"isFlip"===(r=i.data[o]).data&&(r.revert(),r.getChildren(!0,!0,!1).forEach((function(t){return a.splice(a.indexOf(t),1)})));for(a.map((function(t){return{g:t._dur||t._delay||t._sat&&!t._sat.vars.immediateRender?t.globalTime(0):-1/0,t}})).sort((function(t,r){return r.g-t.g||-1/0})).forEach((function(r){return r.t.revert(t)})),o=i.data.length;o--;)(r=i.data[o])instanceof en?"nested"!==r.data&&(r.scrollTrigger&&r.scrollTrigger.revert(),r.kill()):!(r instanceof pn)&&r.revert&&r.revert(t);i._r.forEach((function(r){return r(t,i)})),i.isReverted=!0}():this.data.forEach((function(t){return t.kill&&t.kill()})),this.clear(),r)for(var a=An.length;a--;)An[a].id===this.id&&An.splice(a,1)},t.revert=function revert(t){this.kill(t||{})},Context}(),On=function(){function MatchMedia(t){this.contexts=[],this.scope=t,g&&g.data.push(this)}var t=MatchMedia.prototype;return t.add=function add(t,r,i){q(t)||(t={matches:t});var a,o,l,c=new Nn(0,i||this.scope),h=c.conditions={};for(o in g&&!c.selector&&(c.selector=g.selector),this.contexts.push(c),r=c.add("onMatch",r),c.queries=t,t)"all"===o?l=1:(a=x.matchMedia(t[o]))&&(An.indexOf(c)<0&&An.push(c),(h[o]=a.matches)&&(l=1),a.addListener?a.addListener(In):a.addEventListener("change",In));return l&&r(c,(function(t){return c.add(null,t)})),this},t.revert=function revert(t){this.kill(t||{})},t.kill=function kill(t){this.contexts.forEach((function(r){return r.kill(t,!0)}))},MatchMedia}(),Fn={registerPlugin:function registerPlugin(){for(var t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];r.forEach((function(t){return Pe(t)}))},timeline:function timeline(t){return new en(t)},getTweensOf:function getTweensOf(t,r){return _.getTweensOf(t,r)},getProperty:function getProperty(t,r,i,a){H(t)&&(t=ge(t)[0]);var o=Et(t||{}).get,l=i?Ot:Nt;return"native"===i&&(i=""),t?r?l((xt[r]&&xt[r].get||o)(t,r,i,a)):function(r,i,a){return l((xt[r]&&xt[r].get||o)(t,r,i,a))}:t},quickSetter:function quickSetter(t,r,i){if((t=ge(t)).length>1){var a=t.map((function(t){return Vn.quickSetter(t,r,i)})),o=a.length;return function(t){for(var r=o;r--;)a[r](t)}}t=t[0]||{};var l=xt[r],c=Et(t),h=c.harness&&(c.harness.aliases||{})[r]||r,u=l?function(r){var a=new l;T._pt=0,a.init(t,i?r+i:r,T,0,[t]),a.render(1,a),T._pt&&Sn(1,T)}:c.set(t,h);return l?u:function(r){return u(t,h,i?r+i:r,c,1)}},quickTo:function quickTo(t,r,i){var a,o=Vn.to(t,Ft(((a={})[r]="+=0.1",a.paused=!0,a.stagger=0,a),i||{})),l=function func(t,i,a){return o.resetTo(r,t,i,a)};return l.tween=o,l},isTweening:function isTweening(t){return _.getTweensOf(t,!0).length>0},defaults:function defaults(t){return t&&t.ease&&(t.ease=Ye(t.ease,D.ease)),Bt(D,t||{})},config:function config(t){return Bt(U,t||{})},registerEffect:function registerEffect(t){var r=t.name,i=t.effect,a=t.plugins,o=t.defaults,l=t.extendTimeline;(a||"").split(",").forEach((function(t){return t&&!xt[t]&&!st[t]&&ht(r+" effect requires "+t+" plugin.")})),yt[r]=function(t,r,a){return i(ge(t),Ft(r||{},o),a)},l&&(en.prototype[r]=function(t,i,a){return this.add(yt[r](t,q(i)?i:(a=i)&&{},this),a)})},registerEase:function registerEase(t,r){Ge[t]=Ye(r)},parseEase:function parseEase(t,r){return arguments.length?Ye(t,r):Ge},getById:function getById(t){return _.getById(t)},exportRoot:function exportRoot(t,r){void 0===t&&(t={});var i,a,o=new en(t);for(o.smoothChildTiming=Y(t.smoothChildTiming),_.remove(o),o._dp=0,o._time=o._tTime=_._time,i=_._first;i;)a=i._next,!r&&!i._dur&&i instanceof pn&&i.vars.onComplete===i._targets[0]||te(o,i,i._start-i._delay),i=a;return te(_,o,0),o},context:function context(t,r){return t?new Nn(t,r):g},matchMedia:function matchMedia(t){return new On(t)},matchMediaRefresh:function matchMediaRefresh(){return An.forEach((function(t){var r,i,a=t.conditions;for(i in a)a[i]&&(a[i]=!1,r=1);r&&t.revert()}))||In()},addEventListener:function addEventListener(t,r){var i=Rn[t]||(Rn[t]=[]);~i.indexOf(r)||i.push(r)},removeEventListener:function removeEventListener(t,r){var i=Rn[t],a=i&&i.indexOf(r);a>=0&&i.splice(a,1)},utils:{wrap:function wrap(t,r,i){var a=r-t;return Q(t)?be(t,wrap(0,t.length),r):he(i,(function(r){return(a+(r-t)%a)%a+t}))},wrapYoyo:function wrapYoyo(t,r,i){var a=r-t,o=2*a;return Q(t)?be(t,wrapYoyo(0,t.length-1),r):he(i,(function(r){return t+((r=(o+(r-t)%o)%o||0)>a?o-r:r)}))},distribute:xe,random:Se,snap:Me,normalize:function normalize(t,r,i){return Ee(t,r,0,1,i)},getUnit:de,clamp:function clamp(t,r,i){return he(i,(function(i){return ue(t,r,i)}))},splitColor:Ie,toArray:ge,selector:_e,mapRange:Ee,pipe:function pipe(){for(var t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];return function(t){return r.reduce((function(t,r){return r(t)}),t)}},unitize:function unitize(t,r){return function(i){return t(parseFloat(i))+(r||de(i))}},interpolate:function interpolate(t,r,i,a){var o=isNaN(t+r)?0:function(i){return(1-i)*t+i*r};if(!o){var l,c,h,u,d,p=H(t),m={};if(!0===i&&(a=1)&&(i=null),p)t={p:t},r={p:r};else if(Q(t)&&!Q(r)){for(h=[],u=t.length,d=u-2,c=1;c<u;c++)h.push(interpolate(t[c-1],t[c]));u--,o=function func(t){t*=u;var r=Math.min(d,~~t);return h[r](t-r)},i=r}else a||(t=zt(Q(t)?[]:{},t));if(!h){for(l in r)sn.call(m,t,l,"get",r[l]);o=function func(r){return Sn(r,m)||(p?t.p:t)}}}return he(i,o)},shuffle:ve},install:lt,effects:yt,ticker:Ve,updateRoot:en.updateRoot,plugins:xt,globalTimeline:_,core:{PropTween:Cn,globals:ut,Tween:pn,Timeline:en,Animation:tn,getCache:Et,_removeLinkedListItem:Ht,reverting:function reverting(){return m},context:function context(t){return t&&g&&(g.data.push(t),t._ctx=g),g},suppressOverwrites:function suppressOverwrites(t){return p=t}}};Ct("to,from,fromTo,delayedCall,set,killTweensOf",(function(t){return Fn[t]=pn[t]})),Ve.add(en.updateRoot),T=Fn.to({},{duration:0});var zn=function _getPluginPropTween(t,r){for(var i=t._pt;i&&i.p!==r&&i.op!==r&&i.fp!==r;)i=i._next;return i},Bn=function _buildModifierPlugin(t,r){return{name:t,headless:1,rawVars:1,init:function init(t,i,a){a._onInit=function(t){var a,o;if(H(i)&&(a={},Ct(i,(function(t){return a[t]=1})),i=a),r){for(o in a={},i)a[o]=r(i[o]);i=a}!function _addModifiers(t,r){var i,a,o,l=t._targets;for(i in r)for(a=l.length;a--;)(o=t._ptLookup[a][i])&&(o=o.d)&&(o._pt&&(o=zn(o,i)),o&&o.modifier&&o.modifier(r[i],t,l[a],i))}(t,i)}}}},Vn=Fn.registerPlugin({name:"attr",init:function init(t,r,i,a,o){var l,c,h;for(l in this.tween=i,r)h=t.getAttribute(l)||"",(c=this.add(t,"setAttribute",(h||0)+"",r[l],a,o,0,0,l)).op=l,c.b=h,this._props.push(l)},render:function render(t,r){for(var i=r._pt;i;)m?i.set(i.t,i.p,i.b,i):i.r(t,i.d),i=i._next}},{name:"endArray",headless:1,init:function init(t,r){for(var i=r.length;i--;)this.add(t,i,t[i]||0,r[i],0,0,0,0,0,1)}},Bn("roundProps",ye),Bn("modifiers"),Bn("snap",Me))||Fn;pn.version=en.version=Vn.version="3.13.0",S=1,J()&&ke();Ge.Power0,Ge.Power1,Ge.Power2,Ge.Power3,Ge.Power4,Ge.Linear,Ge.Quad,Ge.Cubic,Ge.Quart,Ge.Quint,Ge.Strong,Ge.Elastic,Ge.Back,Ge.SteppedEase,Ge.Bounce,Ge.Sine,Ge.Expo,Ge.Circ;var kn,Gn,Hn,Wn,Xn,jn,qn,Yn,Jn={},Kn=180/Math.PI,Zn=Math.PI/180,Qn=Math.atan2,$n=/([A-Z])/g,tr=/(left|right|width|margin|padding|x)/i,er=/[\s,\(]\S/,nr={autoAlpha:"opacity,visibility",scale:"scaleX,scaleY",alpha:"opacity"},rr=function _renderCSSProp(t,r){return r.set(r.t,r.p,Math.round(1e4*(r.s+r.c*t))/1e4+r.u,r)},ir=function _renderPropWithEnd(t,r){return r.set(r.t,r.p,1===t?r.e:Math.round(1e4*(r.s+r.c*t))/1e4+r.u,r)},ar=function _renderCSSPropWithBeginning(t,r){return r.set(r.t,r.p,t?Math.round(1e4*(r.s+r.c*t))/1e4+r.u:r.b,r)},sr=function _renderRoundedCSSProp(t,r){var i=r.s+r.c*t;r.set(r.t,r.p,~~(i+(i<0?-.5:.5))+r.u,r)},or=function _renderNonTweeningValue(t,r){return r.set(r.t,r.p,t?r.e:r.b,r)},lr=function _renderNonTweeningValueOnlyAtEnd(t,r){return r.set(r.t,r.p,1!==t?r.b:r.e,r)},cr=function _setterCSSStyle(t,r,i){return t.style[r]=i},hr=function _setterCSSProp(t,r,i){return t.style.setProperty(r,i)},ur=function _setterTransform(t,r,i){return t._gsap[r]=i},dr=function _setterScale(t,r,i){return t._gsap.scaleX=t._gsap.scaleY=i},pr=function _setterScaleWithRender(t,r,i,a,o){var l=t._gsap;l.scaleX=l.scaleY=i,l.renderTransform(o,l)},fr=function _setterTransformWithRender(t,r,i,a,o){var l=t._gsap;l[r]=i,l.renderTransform(o,l)},mr="transform",gr=mr+"Origin",_r=function _saveStyle(t,r){var i=this,a=this.target,o=a.style,l=a._gsap;if(t in Jn&&o){if(this.tfm=this.tfm||{},"transform"===t)return nr.transform.split(",").forEach((function(t){return _saveStyle.call(i,t,r)}));if(~(t=nr[t]||t).indexOf(",")?t.split(",").forEach((function(t){return i.tfm[t]=Nr(a,t)})):this.tfm[t]=l.x?l[t]:Nr(a,t),t===gr&&(this.tfm.zOrigin=l.zOrigin),this.props.indexOf(mr)>=0)return;l.svg&&(this.svgo=a.getAttribute("data-svg-origin"),this.props.push(gr,r,"")),t=mr}(o||r)&&this.props.push(t,r,o[t])},vr=function _removeIndependentTransforms(t){t.translate&&(t.removeProperty("translate"),t.removeProperty("scale"),t.removeProperty("rotate"))},xr=function _revertStyle(){var t,r,i=this.props,a=this.target,o=a.style,l=a._gsap;for(t=0;t<i.length;t+=3)i[t+1]?2===i[t+1]?a[i[t]](i[t+2]):a[i[t]]=i[t+2]:i[t+2]?o[i[t]]=i[t+2]:o.removeProperty("--"===i[t].substr(0,2)?i[t]:i[t].replace($n,"-$1").toLowerCase());if(this.tfm){for(r in this.tfm)l[r]=this.tfm[r];l.svg&&(l.renderTransform(),a.setAttribute("data-svg-origin",this.svgo||"")),(t=qn())&&t.isStart||o[mr]||(vr(o),l.zOrigin&&o[gr]&&(o[gr]+=" "+l.zOrigin+"px",l.zOrigin=0,l.renderTransform()),l.uncache=1)}},yr=function _getStyleSaver(t,r){var i={target:t,props:[],revert:xr,save:_r};return t._gsap||Vn.core.getCache(t),r&&t.style&&t.nodeType&&r.split(",").forEach((function(t){return i.save(t)})),i},Mr=function _createElement(t,r){var i=Gn.createElementNS?Gn.createElementNS((r||"http://www.w3.org/1999/xhtml").replace(/^https/,"http"),t):Gn.createElement(t);return i&&i.style?i:Gn.createElement(t)},Sr=function _getComputedProperty(t,r,i){var a=getComputedStyle(t);return a[r]||a.getPropertyValue(r.replace($n,"-$1").toLowerCase())||a.getPropertyValue(r)||!i&&_getComputedProperty(t,Tr(r)||r,1)||""},br="O,Moz,ms,Ms,Webkit".split(","),Tr=function _checkPropPrefix(t,r,i){var a=(r||Xn).style,o=5;if(t in a&&!i)return t;for(t=t.charAt(0).toUpperCase()+t.substr(1);o--&&!(br[o]+t in a););return o<0?null:(3===o?"ms":o>=0?br[o]:"")+t},Er=function _initCore(){(function _windowExists(){return"undefined"!=typeof window})()&&window.document&&(kn=window,Gn=kn.document,Hn=Gn.documentElement,Xn=Mr("div")||{style:{}},Mr("div"),mr=Tr(mr),gr=mr+"Origin",Xn.style.cssText="border-width:0;line-height:0;position:absolute;padding:0",Yn=!!Tr("perspective"),qn=Vn.core.reverting,Wn=1)},wr=function _getReparentedCloneBBox(t){var r,i=t.ownerSVGElement,a=Mr("svg",i&&i.getAttribute("xmlns")||"http://www.w3.org/2000/svg"),o=t.cloneNode(!0);o.style.display="block",a.appendChild(o),Hn.appendChild(a);try{r=o.getBBox()}catch(t){}return a.removeChild(o),Hn.removeChild(a),r},Cr=function _getAttributeFallbacks(t,r){for(var i=r.length;i--;)if(t.hasAttribute(r[i]))return t.getAttribute(r[i])},Ar=function _getBBox(t){var r,i;try{r=t.getBBox()}catch(a){r=wr(t),i=1}return r&&(r.width||r.height)||i||(r=wr(t)),!r||r.width||r.x||r.y?r:{x:+Cr(t,["x","cx","x1"])||0,y:+Cr(t,["y","cy","y1"])||0,width:0,height:0}},Rr=function _isSVG(t){return!(!t.getCTM||t.parentNode&&!t.ownerSVGElement||!Ar(t))},Pr=function _removeProperty(t,r){if(r){var i,a=t.style;r in Jn&&r!==gr&&(r=mr),a.removeProperty?("ms"!==(i=r.substr(0,2))&&"webkit"!==r.substr(0,6)||(r="-"+r),a.removeProperty("--"===i?r:r.replace($n,"-$1").toLowerCase())):a.removeAttribute(r)}},Lr=function _addNonTweeningPT(t,r,i,a,o,l){var c=new Cn(t._pt,r,i,0,1,l?lr:or);return t._pt=c,c.b=a,c.e=o,t._props.push(i),c},Ur={deg:1,rad:1,turn:1},Dr={grid:1,flex:1},Ir=function _convertToUnit(t,r,i,a){var o,l,c,h,u=parseFloat(i)||0,d=(i+"").trim().substr((u+"").length)||"px",p=Xn.style,m=tr.test(r),g="svg"===t.tagName.toLowerCase(),_=(g?"client":"offset")+(m?"Width":"Height"),x=100,y="px"===a,M="%"===a;if(a===d||!u||Ur[a]||Ur[d])return u;if("px"!==d&&!y&&(u=_convertToUnit(t,r,i,"px")),h=t.getCTM&&Rr(t),(M||"%"===d)&&(Jn[r]||~r.indexOf("adius")))return o=h?t.getBBox()[m?"width":"height"]:t[_],At(M?u/o*x:u/100*o);if(p[m?"width":"height"]=x+(y?d:a),l="rem"!==a&&~r.indexOf("adius")||"em"===a&&t.appendChild&&!g?t:t.parentNode,h&&(l=(t.ownerSVGElement||{}).parentNode),l&&l!==Gn&&l.appendChild||(l=Gn.body),(c=l._gsap)&&M&&c.width&&m&&c.time===Ve.time&&!c.uncache)return At(u/c.width*x);if(!M||"height"!==r&&"width"!==r)(M||"%"===d)&&!Dr[Sr(l,"display")]&&(p.position=Sr(t,"position")),l===t&&(p.position="static"),l.appendChild(Xn),o=Xn[_],l.removeChild(Xn),p.position="absolute";else{var S=t.style[r];t.style[r]=x+a,o=t[_],S?t.style[r]=S:Pr(t,r)}return m&&M&&((c=Et(l)).time=Ve.time,c.width=l[_]),At(y?o*u/x:o&&u?x/o*u:0)},Nr=function _get(t,r,i,a){var o;return Wn||Er(),r in nr&&"transform"!==r&&~(r=nr[r]).indexOf(",")&&(r=r.split(",")[0]),Jn[r]&&"transform"!==r?(o=qr(t,a),o="transformOrigin"!==r?o[r]:o.svg?o.origin:Yr(Sr(t,gr))+" "+o.zOrigin+"px"):(!(o=t.style[r])||"auto"===o||a||~(o+"").indexOf("calc("))&&(o=Vr[r]&&Vr[r](t,r,i)||Sr(t,r)||wt(t,r)||("opacity"===r?1:0)),i&&!~(o+"").trim().indexOf(" ")?Ir(t,r,o,i)+i:o},Or=function _tweenComplexCSSString(t,r,i,a){if(!i||"none"===i){var o=Tr(r,t,1),l=o&&Sr(t,o,1);l&&l!==i?(r=o,i=l):"borderColor"===r&&(i=Sr(t,"borderTopColor"))}var c,h,u,d,p,m,g,_,x,y,M,S=new Cn(this._pt,t.style,r,0,1,Mn),b=0,T=0;if(S.b=i,S.e=a,i+="","var(--"===(a+="").substring(0,6)&&(a=Sr(t,a.substring(4,a.indexOf(")")))),"auto"===a&&(m=t.style[r],t.style[r]=a,a=Sr(t,r)||a,m?t.style[r]=m:Pr(t,r)),Be(c=[i,a]),a=c[1],u=(i=c[0]).match(et)||[],(a.match(et)||[]).length){for(;h=et.exec(a);)g=h[0],x=a.substring(b,h.index),p?p=(p+1)%5:"rgba("!==x.substr(-5)&&"hsla("!==x.substr(-5)||(p=1),g!==(m=u[T++]||"")&&(d=parseFloat(m)||0,M=m.substr((d+"").length),"="===g.charAt(1)&&(g=Pt(d,g)+M),_=parseFloat(g),y=g.substr((_+"").length),b=et.lastIndex-y.length,y||(y=y||U.units[r]||M,b===a.length&&(a+=y,S.e+=y)),M!==y&&(d=Ir(t,r,m,y)||0),S._pt={_next:S._pt,p:x||1===T?x:",",s:d,c:_-d,m:p&&p<4||"zIndex"===r?Math.round:0});S.c=b<a.length?a.substring(b,a.length):""}else S.r="display"===r&&"none"===a?lr:or;return rt.test(a)&&(S.e=0),this._pt=S,S},Fr={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"},zr=function _convertKeywordsToPercentages(t){var r=t.split(" "),i=r[0],a=r[1]||"50%";return"top"!==i&&"bottom"!==i&&"left"!==a&&"right"!==a||(t=i,i=a,a=t),r[0]=Fr[i]||i,r[1]=Fr[a]||a,r.join(" ")},Br=function _renderClearProps(t,r){if(r.tween&&r.tween._time===r.tween._dur){var i,a,o,l=r.t,c=l.style,h=r.u,u=l._gsap;if("all"===h||!0===h)c.cssText="",a=1;else for(o=(h=h.split(",")).length;--o>-1;)i=h[o],Jn[i]&&(a=1,i="transformOrigin"===i?gr:mr),Pr(l,i);a&&(Pr(l,mr),u&&(u.svg&&l.removeAttribute("transform"),c.scale=c.rotate=c.translate="none",qr(l,1),u.uncache=1,vr(c)))}},Vr={clearProps:function clearProps(t,r,i,a,o){if("isFromStart"!==o.data){var l=t._pt=new Cn(t._pt,r,i,0,0,Br);return l.u=a,l.pr=-10,l.tween=o,t._props.push(i),1}}},kr=[1,0,0,1,0,0],Gr={},Hr=function _isNullTransform(t){return"matrix(1, 0, 0, 1, 0, 0)"===t||"none"===t||!t},Wr=function _getComputedTransformMatrixAsArray(t){var r=Sr(t,mr);return Hr(r)?kr:r.substr(7).match(tt).map(At)},Xr=function _getMatrix(t,r){var i,a,o,l,c=t._gsap||Et(t),h=t.style,u=Wr(t);return c.svg&&t.getAttribute("transform")?"1,0,0,1,0,0"===(u=[(o=t.transform.baseVal.consolidate().matrix).a,o.b,o.c,o.d,o.e,o.f]).join(",")?kr:u:(u!==kr||t.offsetParent||t===Hn||c.svg||(o=h.display,h.display="block",(i=t.parentNode)&&(t.offsetParent||t.getBoundingClientRect().width)||(l=1,a=t.nextElementSibling,Hn.appendChild(t)),u=Wr(t),o?h.display=o:Pr(t,"display"),l&&(a?i.insertBefore(t,a):i?i.appendChild(t):Hn.removeChild(t))),r&&u.length>6?[u[0],u[1],u[4],u[5],u[12],u[13]]:u)},jr=function _applySVGOrigin(t,r,i,a,o,l){var c,h,u,d=t._gsap,p=o||Xr(t,!0),m=d.xOrigin||0,g=d.yOrigin||0,_=d.xOffset||0,x=d.yOffset||0,y=p[0],M=p[1],S=p[2],b=p[3],T=p[4],E=p[5],w=r.split(" "),C=parseFloat(w[0])||0,A=parseFloat(w[1])||0;i?p!==kr&&(h=y*b-M*S)&&(u=C*(-M/h)+A*(y/h)-(y*E-M*T)/h,C=C*(b/h)+A*(-S/h)+(S*E-b*T)/h,A=u):(C=(c=Ar(t)).x+(~w[0].indexOf("%")?C/100*c.width:C),A=c.y+(~(w[1]||w[0]).indexOf("%")?A/100*c.height:A)),a||!1!==a&&d.smooth?(T=C-m,E=A-g,d.xOffset=_+(T*y+E*S)-T,d.yOffset=x+(T*M+E*b)-E):d.xOffset=d.yOffset=0,d.xOrigin=C,d.yOrigin=A,d.smooth=!!a,d.origin=r,d.originIsAbsolute=!!i,t.style[gr]="0px 0px",l&&(Lr(l,d,"xOrigin",m,C),Lr(l,d,"yOrigin",g,A),Lr(l,d,"xOffset",_,d.xOffset),Lr(l,d,"yOffset",x,d.yOffset)),t.setAttribute("data-svg-origin",C+" "+A)},qr=function _parseTransform(t,r){var i=t._gsap||new $e(t);if("x"in i&&!r&&!i.uncache)return i;var a,o,l,c,h,u,d,p,m,g,_,x,y,M,S,b,T,E,w,C,A,R,P,L,D,I,N,O,z,B,V,k,G=t.style,H=i.scaleX<0,W="px",X="deg",j=getComputedStyle(t),q=Sr(t,gr)||"0";return a=o=l=u=d=p=m=g=_=0,c=h=1,i.svg=!(!t.getCTM||!Rr(t)),j.translate&&("none"===j.translate&&"none"===j.scale&&"none"===j.rotate||(G[mr]=("none"!==j.translate?"translate3d("+(j.translate+" 0 0").split(" ").slice(0,3).join(", ")+") ":"")+("none"!==j.rotate?"rotate("+j.rotate+") ":"")+("none"!==j.scale?"scale("+j.scale.split(" ").join(",")+") ":"")+("none"!==j[mr]?j[mr]:"")),G.scale=G.rotate=G.translate="none"),M=Xr(t,i.svg),i.svg&&(i.uncache?(D=t.getBBox(),q=i.xOrigin-D.x+"px "+(i.yOrigin-D.y)+"px",L=""):L=!r&&t.getAttribute("data-svg-origin"),jr(t,L||q,!!L||i.originIsAbsolute,!1!==i.smooth,M)),x=i.xOrigin||0,y=i.yOrigin||0,M!==kr&&(E=M[0],w=M[1],C=M[2],A=M[3],a=R=M[4],o=P=M[5],6===M.length?(c=Math.sqrt(E*E+w*w),h=Math.sqrt(A*A+C*C),u=E||w?Qn(w,E)*Kn:0,(m=C||A?Qn(C,A)*Kn+u:0)&&(h*=Math.abs(Math.cos(m*Zn))),i.svg&&(a-=x-(x*E+y*C),o-=y-(x*w+y*A))):(k=M[6],B=M[7],N=M[8],O=M[9],z=M[10],V=M[11],a=M[12],o=M[13],l=M[14],d=(S=Qn(k,z))*Kn,S&&(L=R*(b=Math.cos(-S))+N*(T=Math.sin(-S)),D=P*b+O*T,I=k*b+z*T,N=R*-T+N*b,O=P*-T+O*b,z=k*-T+z*b,V=B*-T+V*b,R=L,P=D,k=I),p=(S=Qn(-C,z))*Kn,S&&(b=Math.cos(-S),V=A*(T=Math.sin(-S))+V*b,E=L=E*b-N*T,w=D=w*b-O*T,C=I=C*b-z*T),u=(S=Qn(w,E))*Kn,S&&(L=E*(b=Math.cos(S))+w*(T=Math.sin(S)),D=R*b+P*T,w=w*b-E*T,P=P*b-R*T,E=L,R=D),d&&Math.abs(d)+Math.abs(u)>359.9&&(d=u=0,p=180-p),c=At(Math.sqrt(E*E+w*w+C*C)),h=At(Math.sqrt(P*P+k*k)),S=Qn(R,P),m=Math.abs(S)>2e-4?S*Kn:0,_=V?1/(V<0?-V:V):0),i.svg&&(L=t.getAttribute("transform"),i.forceCSS=t.setAttribute("transform","")||!Hr(Sr(t,mr)),L&&t.setAttribute("transform",L))),Math.abs(m)>90&&Math.abs(m)<270&&(H?(c*=-1,m+=u<=0?180:-180,u+=u<=0?180:-180):(h*=-1,m+=m<=0?180:-180)),r=r||i.uncache,i.x=a-((i.xPercent=a&&(!r&&i.xPercent||(Math.round(t.offsetWidth/2)===Math.round(-a)?-50:0)))?t.offsetWidth*i.xPercent/100:0)+W,i.y=o-((i.yPercent=o&&(!r&&i.yPercent||(Math.round(t.offsetHeight/2)===Math.round(-o)?-50:0)))?t.offsetHeight*i.yPercent/100:0)+W,i.z=l+W,i.scaleX=At(c),i.scaleY=At(h),i.rotation=At(u)+X,i.rotationX=At(d)+X,i.rotationY=At(p)+X,i.skewX=m+X,i.skewY=g+X,i.transformPerspective=_+W,(i.zOrigin=parseFloat(q.split(" ")[2])||!r&&i.zOrigin||0)&&(G[gr]=Yr(q)),i.xOffset=i.yOffset=0,i.force3D=U.force3D,i.renderTransform=i.svg?ei:Yn?ti:Kr,i.uncache=0,i},Yr=function _firstTwoOnly(t){return(t=t.split(" "))[0]+" "+t[1]},Jr=function _addPxTranslate(t,r,i){var a=de(r);return At(parseFloat(r)+parseFloat(Ir(t,"x",i+"px",a)))+a},Kr=function _renderNon3DTransforms(t,r){r.z="0px",r.rotationY=r.rotationX="0deg",r.force3D=0,ti(t,r)},Zr="0deg",Qr="0px",$r=") ",ti=function _renderCSSTransforms(t,r){var i=r||this,a=i.xPercent,o=i.yPercent,l=i.x,c=i.y,h=i.z,u=i.rotation,d=i.rotationY,p=i.rotationX,m=i.skewX,g=i.skewY,_=i.scaleX,x=i.scaleY,y=i.transformPerspective,M=i.force3D,S=i.target,b=i.zOrigin,T="",E="auto"===M&&t&&1!==t||!0===M;if(b&&(p!==Zr||d!==Zr)){var w,C=parseFloat(d)*Zn,A=Math.sin(C),R=Math.cos(C);C=parseFloat(p)*Zn,w=Math.cos(C),l=Jr(S,l,A*w*-b),c=Jr(S,c,-Math.sin(C)*-b),h=Jr(S,h,R*w*-b+b)}y!==Qr&&(T+="perspective("+y+$r),(a||o)&&(T+="translate("+a+"%, "+o+"%) "),(E||l!==Qr||c!==Qr||h!==Qr)&&(T+=h!==Qr||E?"translate3d("+l+", "+c+", "+h+") ":"translate("+l+", "+c+$r),u!==Zr&&(T+="rotate("+u+$r),d!==Zr&&(T+="rotateY("+d+$r),p!==Zr&&(T+="rotateX("+p+$r),m===Zr&&g===Zr||(T+="skew("+m+", "+g+$r),1===_&&1===x||(T+="scale("+_+", "+x+$r),S.style[mr]=T||"translate(0, 0)"},ei=function _renderSVGTransforms(t,r){var i,a,o,l,c,h=r||this,u=h.xPercent,d=h.yPercent,p=h.x,m=h.y,g=h.rotation,_=h.skewX,x=h.skewY,y=h.scaleX,M=h.scaleY,S=h.target,b=h.xOrigin,T=h.yOrigin,E=h.xOffset,w=h.yOffset,C=h.forceCSS,A=parseFloat(p),R=parseFloat(m);g=parseFloat(g),_=parseFloat(_),(x=parseFloat(x))&&(_+=x=parseFloat(x),g+=x),g||_?(g*=Zn,_*=Zn,i=Math.cos(g)*y,a=Math.sin(g)*y,o=Math.sin(g-_)*-M,l=Math.cos(g-_)*M,_&&(x*=Zn,c=Math.tan(_-x),o*=c=Math.sqrt(1+c*c),l*=c,x&&(c=Math.tan(x),i*=c=Math.sqrt(1+c*c),a*=c)),i=At(i),a=At(a),o=At(o),l=At(l)):(i=y,l=M,a=o=0),(A&&!~(p+"").indexOf("px")||R&&!~(m+"").indexOf("px"))&&(A=Ir(S,"x",p,"px"),R=Ir(S,"y",m,"px")),(b||T||E||w)&&(A=At(A+b-(b*i+T*o)+E),R=At(R+T-(b*a+T*l)+w)),(u||d)&&(c=S.getBBox(),A=At(A+u/100*c.width),R=At(R+d/100*c.height)),c="matrix("+i+","+a+","+o+","+l+","+A+","+R+")",S.setAttribute("transform",c),C&&(S.style[mr]=c)},ni=function _addRotationalPropTween(t,r,i,a,o){var l,c,h=360,u=H(o),d=parseFloat(o)*(u&&~o.indexOf("rad")?Kn:1)-a,p=a+d+"deg";return u&&("short"===(l=o.split("_")[1])&&(d%=h)!==d%180&&(d+=d<0?h:-360),"cw"===l&&d<0?d=(d+36e9)%h-~~(d/h)*h:"ccw"===l&&d>0&&(d=(d-36e9)%h-~~(d/h)*h)),t._pt=c=new Cn(t._pt,r,i,a,d,ir),c.e=p,c.u="deg",t._props.push(i),c},ri=function _assign(t,r){for(var i in r)t[i]=r[i];return t},ii=function _addRawTransformPTs(t,r,i){var a,o,l,c,h,u,d,p=ri({},i._gsap),m=i.style;for(o in p.svg?(l=i.getAttribute("transform"),i.setAttribute("transform",""),m[mr]=r,a=qr(i,1),Pr(i,mr),i.setAttribute("transform",l)):(l=getComputedStyle(i)[mr],m[mr]=r,a=qr(i,1),m[mr]=l),Jn)(l=p[o])!==(c=a[o])&&"perspective,force3D,transformOrigin,svgOrigin".indexOf(o)<0&&(h=de(l)!==(d=de(c))?Ir(i,o,l,d):parseFloat(l),u=parseFloat(c),t._pt=new Cn(t._pt,a,o,h,u-h,rr),t._pt.u=d||0,t._props.push(o));ri(a,p)};Ct("padding,margin,Width,Radius",(function(t,r){var i="Top",a="Right",o="Bottom",l="Left",c=(r<3?[i,a,o,l]:[i+l,i+a,o+a,o+l]).map((function(i){return r<2?t+i:"border"+i+t}));Vr[r>1?"border"+t:t]=function(t,r,i,a,o){var l,h;if(arguments.length<4)return l=c.map((function(r){return Nr(t,r,i)})),5===(h=l.join(" ")).split(l[0]).length?l[0]:h;l=(a+"").split(" "),h={},c.forEach((function(t,r){return h[t]=l[r]=l[r]||l[(r-1)/2|0]})),t.init(r,h,o)}}));var ai,si,oi,li={name:"css",register:Er,targetTest:function targetTest(t){return t.style&&t.nodeType},init:function init(t,r,i,a,o){var l,c,h,u,d,p,m,g,_,x,y,M,S,b,T,E,w=this._props,C=t.style,A=i.vars.startAt;for(m in Wn||Er(),this.styles=this.styles||yr(t),E=this.styles.props,this.tween=i,r)if("autoRound"!==m&&(c=r[m],!xt[m]||!on(m,r,i,a,t,o)))if(d=typeof c,p=Vr[m],"function"===d&&(d=typeof(c=c.call(i,a,t,o))),"string"===d&&~c.indexOf("random(")&&(c=Te(c)),p)p(this,t,m,c,i)&&(T=1);else if("--"===m.substr(0,2))l=(getComputedStyle(t).getPropertyValue(m)+"").trim(),c+="",Fe.lastIndex=0,Fe.test(l)||(g=de(l),_=de(c)),_?g!==_&&(l=Ir(t,m,l,_)+_):g&&(c+=g),this.add(C,"setProperty",l,c,a,o,0,0,m),w.push(m),E.push(m,0,C[m]);else if("undefined"!==d){if(A&&m in A?(l="function"==typeof A[m]?A[m].call(i,a,t,o):A[m],H(l)&&~l.indexOf("random(")&&(l=Te(l)),de(l+"")||"auto"===l||(l+=U.units[m]||de(Nr(t,m))||""),"="===(l+"").charAt(1)&&(l=Nr(t,m))):l=Nr(t,m),u=parseFloat(l),(x="string"===d&&"="===c.charAt(1)&&c.substr(0,2))&&(c=c.substr(2)),h=parseFloat(c),m in nr&&("autoAlpha"===m&&(1===u&&"hidden"===Nr(t,"visibility")&&h&&(u=0),E.push("visibility",0,C.visibility),Lr(this,C,"visibility",u?"inherit":"hidden",h?"inherit":"hidden",!h)),"scale"!==m&&"transform"!==m&&~(m=nr[m]).indexOf(",")&&(m=m.split(",")[0])),y=m in Jn)if(this.styles.save(m),"string"===d&&"var(--"===c.substring(0,6)&&(c=Sr(t,c.substring(4,c.indexOf(")"))),h=parseFloat(c)),M||((S=t._gsap).renderTransform&&!r.parseTransform||qr(t,r.parseTransform),b=!1!==r.smoothOrigin&&S.smooth,(M=this._pt=new Cn(this._pt,C,mr,0,1,S.renderTransform,S,0,-1)).dep=1),"scale"===m)this._pt=new Cn(this._pt,S,"scaleY",S.scaleY,(x?Pt(S.scaleY,x+h):h)-S.scaleY||0,rr),this._pt.u=0,w.push("scaleY",m),m+="X";else{if("transformOrigin"===m){E.push(gr,0,C[gr]),c=zr(c),S.svg?jr(t,c,0,b,0,this):((_=parseFloat(c.split(" ")[2])||0)!==S.zOrigin&&Lr(this,S,"zOrigin",S.zOrigin,_),Lr(this,C,m,Yr(l),Yr(c)));continue}if("svgOrigin"===m){jr(t,c,1,b,0,this);continue}if(m in Gr){ni(this,S,m,u,x?Pt(u,x+c):c);continue}if("smoothOrigin"===m){Lr(this,S,"smooth",S.smooth,c);continue}if("force3D"===m){S[m]=c;continue}if("transform"===m){ii(this,c,t);continue}}else m in C||(m=Tr(m)||m);if(y||(h||0===h)&&(u||0===u)&&!er.test(c)&&m in C)h||(h=0),(g=(l+"").substr((u+"").length))!==(_=de(c)||(m in U.units?U.units[m]:g))&&(u=Ir(t,m,l,_)),this._pt=new Cn(this._pt,y?S:C,m,u,(x?Pt(u,x+h):h)-u,y||"px"!==_&&"zIndex"!==m||!1===r.autoRound?rr:sr),this._pt.u=_||0,g!==_&&"%"!==_&&(this._pt.b=l,this._pt.r=ar);else if(m in C)Or.call(this,t,m,l,x?x+c:c);else if(m in t)this.add(t,m,l||t[m],x?x+c:c,a,o);else if("parseTransform"!==m){ct(m,c);continue}y||(m in C?E.push(m,0,C[m]):"function"==typeof t[m]?E.push(m,2,t[m]()):E.push(m,1,l||t[m])),w.push(m)}T&&wn(this)},render:function render(t,r){if(r.tween._time||!qn())for(var i=r._pt;i;)i.r(t,i.d),i=i._next;else r.styles.revert()},get:Nr,aliases:nr,getSetter:function getSetter(t,r,i){var a=nr[r];return a&&a.indexOf(",")<0&&(r=a),r in Jn&&r!==gr&&(t._gsap.x||Nr(t,"x"))?i&&jn===i?"scale"===r?dr:ur:(jn=i||{})&&("scale"===r?pr:fr):t.style&&!j(t.style[r])?cr:~r.indexOf("-")?hr:vn(t,r)},core:{_removeProperty:Pr,_getMatrix:Xr}};Vn.utils.checkPrefix=Tr,Vn.core.getStyleSaver=yr,oi=Ct((ai="x,y,z,scale,scaleX,scaleY,xPercent,yPercent")+","+(si="rotation,rotationX,rotationY,skewX,skewY")+",transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective",(function(t){Jn[t]=1})),Ct(si,(function(t){U.units[t]="deg",Gr[t]=1})),nr[oi[13]]=ai+","+si,Ct("0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY",(function(t){var r=t.split(":");nr[r[1]]=oi[r[0]]})),Ct("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective",(function(t){U.units[t]="px"})),Vn.registerPlugin(li);var ci=Vn.registerPlugin(li)||Vn;ci.core.Tween;function game_createForOfIteratorHelper(t,r){var i="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!i){if(Array.isArray(t)||(i=function game_unsupportedIterableToArray(t,r){if(t){if("string"==typeof t)return game_arrayLikeToArray(t,r);var i={}.toString.call(t).slice(8,-1);return"Object"===i&&t.constructor&&(i=t.constructor.name),"Map"===i||"Set"===i?Array.from(t):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?game_arrayLikeToArray(t,r):void 0}}(t))||r&&t&&"number"==typeof t.length){i&&(t=i);var a=0,o=function F(){};return{s:o,n:function n(){return a>=t.length?{done:!0}:{done:!1,value:t[a++]}},e:function e(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var l,c=!0,h=!1;return{s:function s(){i=i.call(t)},n:function n(){var t=i.next();return c=t.done,t},e:function e(t){h=!0,l=t},f:function f(){try{c||null==i.return||i.return()}finally{if(h)throw l}}}}function game_arrayLikeToArray(t,r){(null==r||r>t.length)&&(r=t.length);for(var i=0,a=Array(r);i<r;i++)a[i]=t[i];return a}var hi=!1;function handleReady(){if(0==r.list.length){document.querySelector("#ready").removeEventListener("click",handleReady);var t,i=document.querySelector("#board"),a=(document.querySelector("#ready"),document.querySelector("#buttonContainer")),o=game_createForOfIteratorHelper(i.children);try{for(o.s();!(t=o.n()).done;){var l=t.value;l.draggable=!1,l.removeEventListener("click",rotateShip),l.removeEventListener("dragstart",dragStart),l.removeEventListener("dragover",(function(t){t.preventDefault()})),l.removeEventListener("drop",dropShip)}}catch(t){o.e(t)}finally{o.f()}setTimeout((function(){!function handleBegin(){var t=document.querySelector(".shell"),r=document.querySelector(".boardContainer"),i=document.querySelector(".boardContainer2");hi=!0,ci.to(t.children,{scale:0,duration:.5,stagger:{from:"center",each:.02},onComplete:function onComplete(){ci.to(r,{x:200,duration:.8}),ci.to(i,{x:-200,duration:.8,onComplete:function onComplete(){beginGame()}}),t.style.backgroundColor="transparent",setTimeout((function(){t.style.display="none"}),900)}})}()}),1e3),ci.to(a,{y:-600,duration:.8,ease:"power1.inOut"})}else alert("Place all ships")}function initializeGameFriend(){var t=document.querySelector("#turn"),r=document.querySelector("#turnCounter");t.textContent="Player 1";var a=document.querySelector(".boardContainer"),o=document.querySelector(".boardContainer2");hi&&(ci.to(a,{x:0,duration:.8}),ci.to(o,{x:0,duration:.8})),hi=!1,document.getElementById("game").style.display="grid";var l=new i(4,"s1",10,!1),c=new i(5,"s2",10,!1),h=new i(2,"s3",10,!1);l.dom(),c.dom(),h.dom();var u=document.querySelector("#ready");u.addEventListener("click",handleReadyFriend),u.addEventListener("mousedown",(function(){u.style.backgroundColor="rgba(189,0,255,0.7)"})),u.addEventListener("mouseup",(function(){u.style.backgroundColor="rgba(189,0,255,1)"})),u.addEventListener("mouseenter",(function(){u.style.backgroundColor="rgba(0,0,0,0.6)"})),u.addEventListener("mouseleave",(function(){u.style.backgroundColor="rgba(189,0,255,1)"}));createBoard(10,document.querySelector("#board")),function createBoard2(t,r){var i=document.createDocumentFragment(),a=100/t;r.style.gridTemplateColumns="repeat(".concat(t," , ").concat(a,"%)"),r.style.gridTemplateRows="repeat(".concat(t," , ").concat(a,"%)"),r.style.position="";for(var o=0;o<t;o++)for(var l=0;l<t;l++){var c=document.createElement("div");c.classList.add("cell"),c.style.width="100%",c.style.height="100%",c.style.border="1px solid white",c.dataset.index=o,c.dataset.indexComp=o,c.dataset.jndex=l,c.dataset.jndexComp=l,c.style.position="",c.style.zIndex="0",c.addEventListener("dragover",(function(t){t.preventDefault()})),c.addEventListener("drop",dropShipFriend),i.appendChild(c)}r.appendChild(i)}(10,document.querySelector("#boardComputer"));var d,p=game_createForOfIteratorHelper(document.querySelector("#boardComputer").children);try{for(p.s();!(d=p.n()).done;){var m=d.value;m.removeEventListener("drop",dropShipFriend),m.removeEventListener("dragover",(function(t){t.preventDefault()})),m.draggable=!1}}catch(t){p.e(t)}finally{p.f()}setTimeout((function(){document.querySelector("#backButton").style.display="block"}),4e3),document.querySelector("#textArea").classList.remove("hiddenfade"),r.classList.remove("hiddenfade");var g=document.querySelector("#p1tag"),_=document.querySelector("#p2tag");g.classList.remove("hiddenfade"),_.classList.remove("hiddenfade")}function handleReadyFriend(){if(0==r.list.length){document.querySelector("#ready").removeEventListener("click",handleReadyFriend);var t,a=document.querySelector("#board"),o=(document.querySelector("#ready"),document.querySelector("#buttonContainer"),document.querySelector("#s1")),l=document.querySelector("#s2"),c=document.querySelector("#s3"),h=game_createForOfIteratorHelper(a.children);try{for(h.s();!(t=h.n()).done;){var u=t.value;u.draggable=!1,u.classList.remove("hidden"),u.removeEventListener("click",rotateShip),u.removeEventListener("dragstart",dragStart),u.removeEventListener("dragover",(function(t){t.preventDefault()})),u.removeEventListener("drop",dropShip)}}catch(t){h.e(t)}finally{h.f()}o.classList.add("hidden"),l.classList.add("hidden"),c.classList.add("hidden");var d,p=game_createForOfIteratorHelper(document.querySelector("#boardComputer").children);try{for(p.s();!(d=p.n()).done;){var m=d.value;m.addEventListener("drop",dropShipFriend),m.addEventListener("dragover",(function(t){t.preventDefault()})),m.draggable=!0}}catch(t){p.e(t)}finally{p.f()}setTimeout((function(){!function initializeGameFriend2(){document.querySelector("#turn").textContent="Player 2";var t=new i(4,"s4",10,!0),r=new i(5,"s5",10,!0),a=new i(2,"s6",10,!0);t.dom(),r.dom(),a.dom();var o=document.querySelector("#ready");o.addEventListener("click",handleReadyFriend2),o.addEventListener("mousedown",(function(){o.style.backgroundColor="rgba(189,0,255,0.7)"})),o.addEventListener("mouseup",(function(){o.style.backgroundColor="rgba(189,0,255,1)"})),o.addEventListener("mouseenter",(function(){o.style.backgroundColor="rgba(0,0,0,0.6)"})),o.addEventListener("mouseleave",(function(){o.style.backgroundColor="rgba(189,0,255,1)"}))}()}),1e3)}else alert("Place all ships")}function handleReadyFriend2(){if(0==r.list.length){document.querySelector("#ready").removeEventListener("click",handleReadyFriend2);var t,i=document.querySelector("#boardComputer"),a=(document.querySelector("#ready"),document.querySelector("#buttonContainer")),o=document.querySelector("#s4"),l=document.querySelector("#s5"),c=document.querySelector("#s6"),h=game_createForOfIteratorHelper(i.children);try{for(h.s();!(t=h.n()).done;){var u=t.value;u.draggable=!1,u.classList.remove("hidden"),u.removeEventListener("click",rotateShip),u.removeEventListener("dragstart",dragStart),u.removeEventListener("dragover",(function(t){t.preventDefault()})),u.removeEventListener("drop",dropShip)}}catch(t){h.e(t)}finally{h.f()}o.classList.add("hidden"),l.classList.add("hidden"),c.classList.add("hidden"),ci.to(a,{y:-600,duration:1,ease:"power2.inOut"}),setTimeout((function(){!function handleBeginFriends(){document.querySelector(".shell");var t=document.querySelector(".boardContainer"),r=document.querySelector(".boardContainer2");hi=!0,ci.to(t,{x:200,duration:.8}),ci.to(r,{x:-200,duration:.8,onComplete:function onComplete(){beginGameFriends()}})}()}),1e3)}else alert("Place all ships")}const ui="177",di=0,pi=1,fi=2,mi=100,gi=101,_i=102,vi=200,xi=201,yi=202,Mi=203,Si=204,bi=205,Ti=206,Ei=207,wi=208,Ci=209,Ai=210,Ri=211,Pi=212,Li=213,Ui=214,Di=0,Ii=1,Ni=2,Oi=3,Fi=4,zi=5,Bi=6,Vi=7,ki=301,Gi=302,Hi=303,Wi=304,Xi=306,ji=1e3,qi=1001,Yi=1002,Ji=1003,Ki=1004,Zi=1005,Qi=1006,$i=1007,ta=1008,ea=1009,na=1010,ra=1011,ia=1012,aa=1013,sa=1014,oa=1015,la=1016,ca=1017,ha=1018,ua=1020,da=35902,pa=1023,fa=1026,ma=1027,ga=1028,_a=1029,va=1031,xa=1033,ya=33776,Ma=33777,Sa=33778,ba=33779,Ta=35840,Ea=35841,wa=35842,Ca=35843,Aa=36196,Ra=37492,Pa=37496,La=37808,Ua=37809,Da=37810,Ia=37811,Na=37812,Oa=37813,Fa=37814,za=37815,Ba=37816,Va=37817,ka=37818,Ga=37819,Ha=37820,Wa=37821,Xa=36492,ja=36494,qa=36495,Ya=36284,Ja=36285,Ka=36286,Za=2300,Qa=2301,$a=2302,ts=2400,es=2401,ns=2402,rs="",is="srgb",as="srgb-linear",ss="linear",os="srgb",ls=7680,cs=512,hs=513,us=514,ds=515,ps=516,fs=517,ms=518,gs=519,_s=35044,vs="300 es",xs=2e3,ys=2001;class EventDispatcher{addEventListener(t,r){void 0===this._listeners&&(this._listeners={});const i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(r)&&i[t].push(r)}hasEventListener(t,r){const i=this._listeners;return void 0!==i&&(void 0!==i[t]&&-1!==i[t].indexOf(r))}removeEventListener(t,r){const i=this._listeners;if(void 0===i)return;const a=i[t];if(void 0!==a){const t=a.indexOf(r);-1!==t&&a.splice(t,1)}}dispatchEvent(t){const r=this._listeners;if(void 0===r)return;const i=r[t.type];if(void 0!==i){t.target=this;const r=i.slice(0);for(let i=0,a=r.length;i<a;i++)r[i].call(this,t);t.target=null}}}const Ms=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];const Ss=Math.PI/180,bs=180/Math.PI;function generateUUID(){const t=4294967295*Math.random()|0,r=4294967295*Math.random()|0,i=4294967295*Math.random()|0,a=4294967295*Math.random()|0;return(Ms[255&t]+Ms[t>>8&255]+Ms[t>>16&255]+Ms[t>>24&255]+"-"+Ms[255&r]+Ms[r>>8&255]+"-"+Ms[r>>16&15|64]+Ms[r>>24&255]+"-"+Ms[63&i|128]+Ms[i>>8&255]+"-"+Ms[i>>16&255]+Ms[i>>24&255]+Ms[255&a]+Ms[a>>8&255]+Ms[a>>16&255]+Ms[a>>24&255]).toLowerCase()}function three_core_clamp(t,r,i){return Math.max(r,Math.min(i,t))}function euclideanModulo(t,r){return(t%r+r)%r}function lerp(t,r,i){return(1-i)*t+i*r}function denormalize(t,r){switch(r.constructor){case Float32Array:return t;case Uint32Array:return t/4294967295;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int32Array:return Math.max(t/2147483647,-1);case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function three_core_normalize(t,r){switch(r.constructor){case Float32Array:return t;case Uint32Array:return Math.round(4294967295*t);case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int32Array:return Math.round(2147483647*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}}class Vector2{constructor(t=0,r=0){Vector2.prototype.isVector2=!0,this.x=t,this.y=r}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,r){return this.x=t,this.y=r,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,r){switch(t){case 0:this.x=r;break;case 1:this.y=r;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,r){return this.x=t.x+r.x,this.y=t.y+r.y,this}addScaledVector(t,r){return this.x+=t.x*r,this.y+=t.y*r,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,r){return this.x=t.x-r.x,this.y=t.y-r.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const r=this.x,i=this.y,a=t.elements;return this.x=a[0]*r+a[3]*i+a[6],this.y=a[1]*r+a[4]*i+a[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,r){return this.x=three_core_clamp(this.x,t.x,r.x),this.y=three_core_clamp(this.y,t.y,r.y),this}clampScalar(t,r){return this.x=three_core_clamp(this.x,t,r),this.y=three_core_clamp(this.y,t,r),this}clampLength(t,r){const i=this.length();return this.divideScalar(i||1).multiplyScalar(three_core_clamp(i,t,r))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const r=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===r)return Math.PI/2;const i=this.dot(t)/r;return Math.acos(three_core_clamp(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const r=this.x-t.x,i=this.y-t.y;return r*r+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,r){return this.x+=(t.x-this.x)*r,this.y+=(t.y-this.y)*r,this}lerpVectors(t,r,i){return this.x=t.x+(r.x-t.x)*i,this.y=t.y+(r.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,r=0){return this.x=t[r],this.y=t[r+1],this}toArray(t=[],r=0){return t[r]=this.x,t[r+1]=this.y,t}fromBufferAttribute(t,r){return this.x=t.getX(r),this.y=t.getY(r),this}rotateAround(t,r){const i=Math.cos(r),a=Math.sin(r),o=this.x-t.x,l=this.y-t.y;return this.x=o*i-l*a+t.x,this.y=o*a+l*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Quaternion{constructor(t=0,r=0,i=0,a=1){this.isQuaternion=!0,this._x=t,this._y=r,this._z=i,this._w=a}static slerpFlat(t,r,i,a,o,l,c){let h=i[a+0],u=i[a+1],d=i[a+2],p=i[a+3];const m=o[l+0],g=o[l+1],_=o[l+2],x=o[l+3];if(0===c)return t[r+0]=h,t[r+1]=u,t[r+2]=d,void(t[r+3]=p);if(1===c)return t[r+0]=m,t[r+1]=g,t[r+2]=_,void(t[r+3]=x);if(p!==x||h!==m||u!==g||d!==_){let t=1-c;const r=h*m+u*g+d*_+p*x,i=r>=0?1:-1,a=1-r*r;if(a>Number.EPSILON){const o=Math.sqrt(a),l=Math.atan2(o,r*i);t=Math.sin(t*l)/o,c=Math.sin(c*l)/o}const o=c*i;if(h=h*t+m*o,u=u*t+g*o,d=d*t+_*o,p=p*t+x*o,t===1-c){const t=1/Math.sqrt(h*h+u*u+d*d+p*p);h*=t,u*=t,d*=t,p*=t}}t[r]=h,t[r+1]=u,t[r+2]=d,t[r+3]=p}static multiplyQuaternionsFlat(t,r,i,a,o,l){const c=i[a],h=i[a+1],u=i[a+2],d=i[a+3],p=o[l],m=o[l+1],g=o[l+2],_=o[l+3];return t[r]=c*_+d*p+h*g-u*m,t[r+1]=h*_+d*m+u*p-c*g,t[r+2]=u*_+d*g+c*m-h*p,t[r+3]=d*_-c*p-h*m-u*g,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,r,i,a){return this._x=t,this._y=r,this._z=i,this._w=a,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,r=!0){const i=t._x,a=t._y,o=t._z,l=t._order,c=Math.cos,h=Math.sin,u=c(i/2),d=c(a/2),p=c(o/2),m=h(i/2),g=h(a/2),_=h(o/2);switch(l){case"XYZ":this._x=m*d*p+u*g*_,this._y=u*g*p-m*d*_,this._z=u*d*_+m*g*p,this._w=u*d*p-m*g*_;break;case"YXZ":this._x=m*d*p+u*g*_,this._y=u*g*p-m*d*_,this._z=u*d*_-m*g*p,this._w=u*d*p+m*g*_;break;case"ZXY":this._x=m*d*p-u*g*_,this._y=u*g*p+m*d*_,this._z=u*d*_+m*g*p,this._w=u*d*p-m*g*_;break;case"ZYX":this._x=m*d*p-u*g*_,this._y=u*g*p+m*d*_,this._z=u*d*_-m*g*p,this._w=u*d*p+m*g*_;break;case"YZX":this._x=m*d*p+u*g*_,this._y=u*g*p+m*d*_,this._z=u*d*_-m*g*p,this._w=u*d*p-m*g*_;break;case"XZY":this._x=m*d*p-u*g*_,this._y=u*g*p-m*d*_,this._z=u*d*_+m*g*p,this._w=u*d*p+m*g*_;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return!0===r&&this._onChangeCallback(),this}setFromAxisAngle(t,r){const i=r/2,a=Math.sin(i);return this._x=t.x*a,this._y=t.y*a,this._z=t.z*a,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const r=t.elements,i=r[0],a=r[4],o=r[8],l=r[1],c=r[5],h=r[9],u=r[2],d=r[6],p=r[10],m=i+c+p;if(m>0){const t=.5/Math.sqrt(m+1);this._w=.25/t,this._x=(d-h)*t,this._y=(o-u)*t,this._z=(l-a)*t}else if(i>c&&i>p){const t=2*Math.sqrt(1+i-c-p);this._w=(d-h)/t,this._x=.25*t,this._y=(a+l)/t,this._z=(o+u)/t}else if(c>p){const t=2*Math.sqrt(1+c-i-p);this._w=(o-u)/t,this._x=(a+l)/t,this._y=.25*t,this._z=(h+d)/t}else{const t=2*Math.sqrt(1+p-i-c);this._w=(l-a)/t,this._x=(o+u)/t,this._y=(h+d)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,r){let i=t.dot(r)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*r.z-t.z*r.y,this._y=t.z*r.x-t.x*r.z,this._z=t.x*r.y-t.y*r.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(three_core_clamp(this.dot(t),-1,1)))}rotateTowards(t,r){const i=this.angleTo(t);if(0===i)return this;const a=Math.min(1,r/i);return this.slerp(t,a),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,r){const i=t._x,a=t._y,o=t._z,l=t._w,c=r._x,h=r._y,u=r._z,d=r._w;return this._x=i*d+l*c+a*u-o*h,this._y=a*d+l*h+o*c-i*u,this._z=o*d+l*u+i*h-a*c,this._w=l*d-i*c-a*h-o*u,this._onChangeCallback(),this}slerp(t,r){if(0===r)return this;if(1===r)return this.copy(t);const i=this._x,a=this._y,o=this._z,l=this._w;let c=l*t._w+i*t._x+a*t._y+o*t._z;if(c<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,c=-c):this.copy(t),c>=1)return this._w=l,this._x=i,this._y=a,this._z=o,this;const h=1-c*c;if(h<=Number.EPSILON){const t=1-r;return this._w=t*l+r*this._w,this._x=t*i+r*this._x,this._y=t*a+r*this._y,this._z=t*o+r*this._z,this.normalize(),this}const u=Math.sqrt(h),d=Math.atan2(u,c),p=Math.sin((1-r)*d)/u,m=Math.sin(r*d)/u;return this._w=l*p+this._w*m,this._x=i*p+this._x*m,this._y=a*p+this._y*m,this._z=o*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(t,r,i){return this.copy(t).slerp(r,i)}random(){const t=2*Math.PI*Math.random(),r=2*Math.PI*Math.random(),i=Math.random(),a=Math.sqrt(1-i),o=Math.sqrt(i);return this.set(a*Math.sin(t),a*Math.cos(t),o*Math.sin(r),o*Math.cos(r))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,r=0){return this._x=t[r],this._y=t[r+1],this._z=t[r+2],this._w=t[r+3],this._onChangeCallback(),this}toArray(t=[],r=0){return t[r]=this._x,t[r+1]=this._y,t[r+2]=this._z,t[r+3]=this._w,t}fromBufferAttribute(t,r){return this._x=t.getX(r),this._y=t.getY(r),this._z=t.getZ(r),this._w=t.getW(r),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Vector3{constructor(t=0,r=0,i=0){Vector3.prototype.isVector3=!0,this.x=t,this.y=r,this.z=i}set(t,r,i){return void 0===i&&(i=this.z),this.x=t,this.y=r,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,r){switch(t){case 0:this.x=r;break;case 1:this.y=r;break;case 2:this.z=r;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,r){return this.x=t.x+r.x,this.y=t.y+r.y,this.z=t.z+r.z,this}addScaledVector(t,r){return this.x+=t.x*r,this.y+=t.y*r,this.z+=t.z*r,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,r){return this.x=t.x-r.x,this.y=t.y-r.y,this.z=t.z-r.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,r){return this.x=t.x*r.x,this.y=t.y*r.y,this.z=t.z*r.z,this}applyEuler(t){return this.applyQuaternion(Es.setFromEuler(t))}applyAxisAngle(t,r){return this.applyQuaternion(Es.setFromAxisAngle(t,r))}applyMatrix3(t){const r=this.x,i=this.y,a=this.z,o=t.elements;return this.x=o[0]*r+o[3]*i+o[6]*a,this.y=o[1]*r+o[4]*i+o[7]*a,this.z=o[2]*r+o[5]*i+o[8]*a,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const r=this.x,i=this.y,a=this.z,o=t.elements,l=1/(o[3]*r+o[7]*i+o[11]*a+o[15]);return this.x=(o[0]*r+o[4]*i+o[8]*a+o[12])*l,this.y=(o[1]*r+o[5]*i+o[9]*a+o[13])*l,this.z=(o[2]*r+o[6]*i+o[10]*a+o[14])*l,this}applyQuaternion(t){const r=this.x,i=this.y,a=this.z,o=t.x,l=t.y,c=t.z,h=t.w,u=2*(l*a-c*i),d=2*(c*r-o*a),p=2*(o*i-l*r);return this.x=r+h*u+l*p-c*d,this.y=i+h*d+c*u-o*p,this.z=a+h*p+o*d-l*u,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const r=this.x,i=this.y,a=this.z,o=t.elements;return this.x=o[0]*r+o[4]*i+o[8]*a,this.y=o[1]*r+o[5]*i+o[9]*a,this.z=o[2]*r+o[6]*i+o[10]*a,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,r){return this.x=three_core_clamp(this.x,t.x,r.x),this.y=three_core_clamp(this.y,t.y,r.y),this.z=three_core_clamp(this.z,t.z,r.z),this}clampScalar(t,r){return this.x=three_core_clamp(this.x,t,r),this.y=three_core_clamp(this.y,t,r),this.z=three_core_clamp(this.z,t,r),this}clampLength(t,r){const i=this.length();return this.divideScalar(i||1).multiplyScalar(three_core_clamp(i,t,r))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,r){return this.x+=(t.x-this.x)*r,this.y+=(t.y-this.y)*r,this.z+=(t.z-this.z)*r,this}lerpVectors(t,r,i){return this.x=t.x+(r.x-t.x)*i,this.y=t.y+(r.y-t.y)*i,this.z=t.z+(r.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,r){const i=t.x,a=t.y,o=t.z,l=r.x,c=r.y,h=r.z;return this.x=a*h-o*c,this.y=o*l-i*h,this.z=i*c-a*l,this}projectOnVector(t){const r=t.lengthSq();if(0===r)return this.set(0,0,0);const i=t.dot(this)/r;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return Ts.copy(this).projectOnVector(t),this.sub(Ts)}reflect(t){return this.sub(Ts.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const r=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===r)return Math.PI/2;const i=this.dot(t)/r;return Math.acos(three_core_clamp(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const r=this.x-t.x,i=this.y-t.y,a=this.z-t.z;return r*r+i*i+a*a}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,r,i){const a=Math.sin(r)*t;return this.x=a*Math.sin(i),this.y=Math.cos(r)*t,this.z=a*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,r,i){return this.x=t*Math.sin(r),this.y=i,this.z=t*Math.cos(r),this}setFromMatrixPosition(t){const r=t.elements;return this.x=r[12],this.y=r[13],this.z=r[14],this}setFromMatrixScale(t){const r=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),a=this.setFromMatrixColumn(t,2).length();return this.x=r,this.y=i,this.z=a,this}setFromMatrixColumn(t,r){return this.fromArray(t.elements,4*r)}setFromMatrix3Column(t,r){return this.fromArray(t.elements,3*r)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,r=0){return this.x=t[r],this.y=t[r+1],this.z=t[r+2],this}toArray(t=[],r=0){return t[r]=this.x,t[r+1]=this.y,t[r+2]=this.z,t}fromBufferAttribute(t,r){return this.x=t.getX(r),this.y=t.getY(r),this.z=t.getZ(r),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,r=2*Math.random()-1,i=Math.sqrt(1-r*r);return this.x=i*Math.cos(t),this.y=r,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Ts=new Vector3,Es=new Quaternion;class Matrix3{constructor(t,r,i,a,o,l,c,h,u){Matrix3.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==t&&this.set(t,r,i,a,o,l,c,h,u)}set(t,r,i,a,o,l,c,h,u){const d=this.elements;return d[0]=t,d[1]=a,d[2]=c,d[3]=r,d[4]=o,d[5]=h,d[6]=i,d[7]=l,d[8]=u,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const r=this.elements,i=t.elements;return r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],this}extractBasis(t,r,i){return t.setFromMatrix3Column(this,0),r.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const r=t.elements;return this.set(r[0],r[4],r[8],r[1],r[5],r[9],r[2],r[6],r[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,r){const i=t.elements,a=r.elements,o=this.elements,l=i[0],c=i[3],h=i[6],u=i[1],d=i[4],p=i[7],m=i[2],g=i[5],_=i[8],x=a[0],y=a[3],M=a[6],S=a[1],b=a[4],T=a[7],E=a[2],w=a[5],C=a[8];return o[0]=l*x+c*S+h*E,o[3]=l*y+c*b+h*w,o[6]=l*M+c*T+h*C,o[1]=u*x+d*S+p*E,o[4]=u*y+d*b+p*w,o[7]=u*M+d*T+p*C,o[2]=m*x+g*S+_*E,o[5]=m*y+g*b+_*w,o[8]=m*M+g*T+_*C,this}multiplyScalar(t){const r=this.elements;return r[0]*=t,r[3]*=t,r[6]*=t,r[1]*=t,r[4]*=t,r[7]*=t,r[2]*=t,r[5]*=t,r[8]*=t,this}determinant(){const t=this.elements,r=t[0],i=t[1],a=t[2],o=t[3],l=t[4],c=t[5],h=t[6],u=t[7],d=t[8];return r*l*d-r*c*u-i*o*d+i*c*h+a*o*u-a*l*h}invert(){const t=this.elements,r=t[0],i=t[1],a=t[2],o=t[3],l=t[4],c=t[5],h=t[6],u=t[7],d=t[8],p=d*l-c*u,m=c*h-d*o,g=u*o-l*h,_=r*p+i*m+a*g;if(0===_)return this.set(0,0,0,0,0,0,0,0,0);const x=1/_;return t[0]=p*x,t[1]=(a*u-d*i)*x,t[2]=(c*i-a*l)*x,t[3]=m*x,t[4]=(d*r-a*h)*x,t[5]=(a*o-c*r)*x,t[6]=g*x,t[7]=(i*h-u*r)*x,t[8]=(l*r-i*o)*x,this}transpose(){let t;const r=this.elements;return t=r[1],r[1]=r[3],r[3]=t,t=r[2],r[2]=r[6],r[6]=t,t=r[5],r[5]=r[7],r[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const r=this.elements;return t[0]=r[0],t[1]=r[3],t[2]=r[6],t[3]=r[1],t[4]=r[4],t[5]=r[7],t[6]=r[2],t[7]=r[5],t[8]=r[8],this}setUvTransform(t,r,i,a,o,l,c){const h=Math.cos(o),u=Math.sin(o);return this.set(i*h,i*u,-i*(h*l+u*c)+l+t,-a*u,a*h,-a*(-u*l+h*c)+c+r,0,0,1),this}scale(t,r){return this.premultiply(ws.makeScale(t,r)),this}rotate(t){return this.premultiply(ws.makeRotation(-t)),this}translate(t,r){return this.premultiply(ws.makeTranslation(t,r)),this}makeTranslation(t,r){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,r,0,0,1),this}makeRotation(t){const r=Math.cos(t),i=Math.sin(t);return this.set(r,-i,0,i,r,0,0,0,1),this}makeScale(t,r){return this.set(t,0,0,0,r,0,0,0,1),this}equals(t){const r=this.elements,i=t.elements;for(let t=0;t<9;t++)if(r[t]!==i[t])return!1;return!0}fromArray(t,r=0){for(let i=0;i<9;i++)this.elements[i]=t[i+r];return this}toArray(t=[],r=0){const i=this.elements;return t[r]=i[0],t[r+1]=i[1],t[r+2]=i[2],t[r+3]=i[3],t[r+4]=i[4],t[r+5]=i[5],t[r+6]=i[6],t[r+7]=i[7],t[r+8]=i[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}const ws=new Matrix3;function arrayNeedsUint32(t){for(let r=t.length-1;r>=0;--r)if(t[r]>=65535)return!0;return!1}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;function createElementNS(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function createCanvasElement(){const t=createElementNS("canvas");return t.style.display="block",t}const Cs={};function warnOnce(t){t in Cs||(Cs[t]=!0,console.warn(t))}const As=(new Matrix3).set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Rs=(new Matrix3).set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function createColorManagement(){const t={enabled:!0,workingColorSpace:as,spaces:{},convert:function(t,r,i){return!1!==this.enabled&&r!==i&&r&&i?(this.spaces[r].transfer===os&&(t.r=SRGBToLinear(t.r),t.g=SRGBToLinear(t.g),t.b=SRGBToLinear(t.b)),this.spaces[r].primaries!==this.spaces[i].primaries&&(t.applyMatrix3(this.spaces[r].toXYZ),t.applyMatrix3(this.spaces[i].fromXYZ)),this.spaces[i].transfer===os&&(t.r=LinearToSRGB(t.r),t.g=LinearToSRGB(t.g),t.b=LinearToSRGB(t.b)),t):t},workingToColorSpace:function(t,r){return this.convert(t,this.workingColorSpace,r)},colorSpaceToWorking:function(t,r){return this.convert(t,r,this.workingColorSpace)},getPrimaries:function(t){return this.spaces[t].primaries},getTransfer:function(t){return t===rs?ss:this.spaces[t].transfer},getLuminanceCoefficients:function(t,r=this.workingColorSpace){return t.fromArray(this.spaces[r].luminanceCoefficients)},define:function(t){Object.assign(this.spaces,t)},_getMatrix:function(t,r,i){return t.copy(this.spaces[r].toXYZ).multiply(this.spaces[i].fromXYZ)},_getDrawingBufferColorSpace:function(t){return this.spaces[t].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(t=this.workingColorSpace){return this.spaces[t].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(r,i){return warnOnce("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),t.workingToColorSpace(r,i)},toWorkingColorSpace:function(r,i){return warnOnce("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),t.colorSpaceToWorking(r,i)}},r=[.64,.33,.3,.6,.15,.06],i=[.2126,.7152,.0722],a=[.3127,.329];return t.define({[as]:{primaries:r,whitePoint:a,transfer:ss,toXYZ:As,fromXYZ:Rs,luminanceCoefficients:i,workingColorSpaceConfig:{unpackColorSpace:is},outputColorSpaceConfig:{drawingBufferColorSpace:is}},[is]:{primaries:r,whitePoint:a,transfer:os,toXYZ:As,fromXYZ:Rs,luminanceCoefficients:i,outputColorSpaceConfig:{drawingBufferColorSpace:is}}}),t}const Ps=createColorManagement();function SRGBToLinear(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function LinearToSRGB(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}let Ls;class ImageUtils{static getDataURL(t,r="image/png"){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let i;if(t instanceof HTMLCanvasElement)i=t;else{void 0===Ls&&(Ls=createElementNS("canvas")),Ls.width=t.width,Ls.height=t.height;const r=Ls.getContext("2d");t instanceof ImageData?r.putImageData(t,0,0):r.drawImage(t,0,0,t.width,t.height),i=Ls}return i.toDataURL(r)}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const r=createElementNS("canvas");r.width=t.width,r.height=t.height;const i=r.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const a=i.getImageData(0,0,t.width,t.height),o=a.data;for(let t=0;t<o.length;t++)o[t]=255*SRGBToLinear(o[t]/255);return i.putImageData(a,0,0),r}if(t.data){const r=t.data.slice(0);for(let t=0;t<r.length;t++)r instanceof Uint8Array||r instanceof Uint8ClampedArray?r[t]=Math.floor(255*SRGBToLinear(r[t]/255)):r[t]=SRGBToLinear(r[t]);return{data:r,width:t.width,height:t.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let Us=0;class Source{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Us++}),this.uuid=generateUUID(),this.data=t,this.dataReady=!0,this.version=0}getSize(t){const r=this.data;return r instanceof HTMLVideoElement?t.set(r.videoWidth,r.videoHeight):null!==r?t.set(r.width,r.height,r.depth||0):t.set(0,0,0),t}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const r=void 0===t||"string"==typeof t;if(!r&&void 0!==t.images[this.uuid])return t.images[this.uuid];const i={uuid:this.uuid,url:""},a=this.data;if(null!==a){let t;if(Array.isArray(a)){t=[];for(let r=0,i=a.length;r<i;r++)a[r].isDataTexture?t.push(serializeImage(a[r].image)):t.push(serializeImage(a[r]))}else t=serializeImage(a);i.url=t}return r||(t.images[this.uuid]=i),i}}function serializeImage(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?ImageUtils.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Ds=0;const Is=new Vector3;class Texture extends EventDispatcher{constructor(t=Texture.DEFAULT_IMAGE,r=Texture.DEFAULT_MAPPING,i=1001,a=1001,o=1006,l=1008,c=1023,h=1009,u=Texture.DEFAULT_ANISOTROPY,d=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Ds++}),this.uuid=generateUUID(),this.name="",this.source=new Source(t),this.mipmaps=[],this.mapping=r,this.channel=0,this.wrapS=i,this.wrapT=a,this.magFilter=o,this.minFilter=l,this.anisotropy=u,this.format=c,this.internalFormat=null,this.type=h,this.offset=new Vector2(0,0),this.repeat=new Vector2(1,1),this.center=new Vector2(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Matrix3,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=d,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(t&&t.depth&&t.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(Is).x}get height(){return this.source.getSize(Is).y}get depth(){return this.source.getSize(Is).z}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(t,r){this.updateRanges.push({start:t,count:r})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.isArrayTexture=t.isArrayTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}setValues(t){for(const r in t){const i=t[r];if(void 0===i){console.warn(`THREE.Texture.setValues(): parameter '${r}' has value of undefined.`);continue}const a=this[r];void 0!==a?a&&i&&a.isVector2&&i.isVector2||a&&i&&a.isVector3&&i.isVector3||a&&i&&a.isMatrix3&&i.isMatrix3?a.copy(i):this[r]=i:console.warn(`THREE.Texture.setValues(): property '${r}' does not exist.`)}}toJSON(t){const r=void 0===t||"string"==typeof t;if(!r&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const i={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),r||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case ji:t.x=t.x-Math.floor(t.x);break;case qi:t.x=t.x<0?0:1;break;case Yi:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case ji:t.y=t.y-Math.floor(t.y);break;case qi:t.y=t.y<0?0:1;break;case Yi:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){!0===t&&this.pmremVersion++}}Texture.DEFAULT_IMAGE=null,Texture.DEFAULT_MAPPING=300,Texture.DEFAULT_ANISOTROPY=1;class Vector4{constructor(t=0,r=0,i=0,a=1){Vector4.prototype.isVector4=!0,this.x=t,this.y=r,this.z=i,this.w=a}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,r,i,a){return this.x=t,this.y=r,this.z=i,this.w=a,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,r){switch(t){case 0:this.x=r;break;case 1:this.y=r;break;case 2:this.z=r;break;case 3:this.w=r;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,r){return this.x=t.x+r.x,this.y=t.y+r.y,this.z=t.z+r.z,this.w=t.w+r.w,this}addScaledVector(t,r){return this.x+=t.x*r,this.y+=t.y*r,this.z+=t.z*r,this.w+=t.w*r,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,r){return this.x=t.x-r.x,this.y=t.y-r.y,this.z=t.z-r.z,this.w=t.w-r.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const r=this.x,i=this.y,a=this.z,o=this.w,l=t.elements;return this.x=l[0]*r+l[4]*i+l[8]*a+l[12]*o,this.y=l[1]*r+l[5]*i+l[9]*a+l[13]*o,this.z=l[2]*r+l[6]*i+l[10]*a+l[14]*o,this.w=l[3]*r+l[7]*i+l[11]*a+l[15]*o,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const r=Math.sqrt(1-t.w*t.w);return r<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/r,this.y=t.y/r,this.z=t.z/r),this}setAxisAngleFromRotationMatrix(t){let r,i,a,o;const l=.01,c=.1,h=t.elements,u=h[0],d=h[4],p=h[8],m=h[1],g=h[5],_=h[9],x=h[2],y=h[6],M=h[10];if(Math.abs(d-m)<l&&Math.abs(p-x)<l&&Math.abs(_-y)<l){if(Math.abs(d+m)<c&&Math.abs(p+x)<c&&Math.abs(_+y)<c&&Math.abs(u+g+M-3)<c)return this.set(1,0,0,0),this;r=Math.PI;const t=(u+1)/2,h=(g+1)/2,S=(M+1)/2,b=(d+m)/4,T=(p+x)/4,E=(_+y)/4;return t>h&&t>S?t<l?(i=0,a=.707106781,o=.707106781):(i=Math.sqrt(t),a=b/i,o=T/i):h>S?h<l?(i=.707106781,a=0,o=.707106781):(a=Math.sqrt(h),i=b/a,o=E/a):S<l?(i=.707106781,a=.707106781,o=0):(o=Math.sqrt(S),i=T/o,a=E/o),this.set(i,a,o,r),this}let S=Math.sqrt((y-_)*(y-_)+(p-x)*(p-x)+(m-d)*(m-d));return Math.abs(S)<.001&&(S=1),this.x=(y-_)/S,this.y=(p-x)/S,this.z=(m-d)/S,this.w=Math.acos((u+g+M-1)/2),this}setFromMatrixPosition(t){const r=t.elements;return this.x=r[12],this.y=r[13],this.z=r[14],this.w=r[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,r){return this.x=three_core_clamp(this.x,t.x,r.x),this.y=three_core_clamp(this.y,t.y,r.y),this.z=three_core_clamp(this.z,t.z,r.z),this.w=three_core_clamp(this.w,t.w,r.w),this}clampScalar(t,r){return this.x=three_core_clamp(this.x,t,r),this.y=three_core_clamp(this.y,t,r),this.z=three_core_clamp(this.z,t,r),this.w=three_core_clamp(this.w,t,r),this}clampLength(t,r){const i=this.length();return this.divideScalar(i||1).multiplyScalar(three_core_clamp(i,t,r))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,r){return this.x+=(t.x-this.x)*r,this.y+=(t.y-this.y)*r,this.z+=(t.z-this.z)*r,this.w+=(t.w-this.w)*r,this}lerpVectors(t,r,i){return this.x=t.x+(r.x-t.x)*i,this.y=t.y+(r.y-t.y)*i,this.z=t.z+(r.z-t.z)*i,this.w=t.w+(r.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,r=0){return this.x=t[r],this.y=t[r+1],this.z=t[r+2],this.w=t[r+3],this}toArray(t=[],r=0){return t[r]=this.x,t[r+1]=this.y,t[r+2]=this.z,t[r+3]=this.w,t}fromBufferAttribute(t,r){return this.x=t.getX(r),this.y=t.getY(r),this.z=t.getZ(r),this.w=t.getW(r),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class RenderTarget extends EventDispatcher{constructor(t=1,r=1,i={}){super(),i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Qi,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},i),this.isRenderTarget=!0,this.width=t,this.height=r,this.depth=i.depth,this.scissor=new Vector4(0,0,t,r),this.scissorTest=!1,this.viewport=new Vector4(0,0,t,r);const a={width:t,height:r,depth:i.depth},o=new Texture(a);this.textures=[];const l=i.count;for(let t=0;t<l;t++)this.textures[t]=o.clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;this._setTextureOptions(i),this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=i.depthTexture,this.samples=i.samples,this.multiview=i.multiview}_setTextureOptions(t={}){const r={minFilter:Qi,generateMipmaps:!1,flipY:!1,internalFormat:null};void 0!==t.mapping&&(r.mapping=t.mapping),void 0!==t.wrapS&&(r.wrapS=t.wrapS),void 0!==t.wrapT&&(r.wrapT=t.wrapT),void 0!==t.wrapR&&(r.wrapR=t.wrapR),void 0!==t.magFilter&&(r.magFilter=t.magFilter),void 0!==t.minFilter&&(r.minFilter=t.minFilter),void 0!==t.format&&(r.format=t.format),void 0!==t.type&&(r.type=t.type),void 0!==t.anisotropy&&(r.anisotropy=t.anisotropy),void 0!==t.colorSpace&&(r.colorSpace=t.colorSpace),void 0!==t.flipY&&(r.flipY=t.flipY),void 0!==t.generateMipmaps&&(r.generateMipmaps=t.generateMipmaps),void 0!==t.internalFormat&&(r.internalFormat=t.internalFormat);for(let t=0;t<this.textures.length;t++){this.textures[t].setValues(r)}}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){null!==this._depthTexture&&(this._depthTexture.renderTarget=null),null!==t&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,r,i=1){if(this.width!==t||this.height!==r||this.depth!==i){this.width=t,this.height=r,this.depth=i;for(let a=0,o=this.textures.length;a<o;a++)this.textures[a].image.width=t,this.textures[a].image.height=r,this.textures[a].image.depth=i,this.textures[a].isArrayTexture=this.textures[a].image.depth>1;this.dispose()}this.viewport.set(0,0,t,r),this.scissor.set(0,0,t,r)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let r=0,i=t.textures.length;r<i;r++){this.textures[r]=t.textures[r].clone(),this.textures[r].isRenderTargetTexture=!0,this.textures[r].renderTarget=this;const i=Object.assign({},t.textures[r].image);this.textures[r].source=new Source(i)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class WebGLRenderTarget extends RenderTarget{constructor(t=1,r=1,i={}){super(t,r,i),this.isWebGLRenderTarget=!0}}class DataArrayTexture extends Texture{constructor(t=null,r=1,i=1,a=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:r,height:i,depth:a},this.magFilter=Ji,this.minFilter=Ji,this.wrapR=qi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class Data3DTexture extends Texture{constructor(t=null,r=1,i=1,a=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:r,height:i,depth:a},this.magFilter=Ji,this.minFilter=Ji,this.wrapR=qi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Box3{constructor(t=new Vector3(1/0,1/0,1/0),r=new Vector3(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=r}set(t,r){return this.min.copy(t),this.max.copy(r),this}setFromArray(t){this.makeEmpty();for(let r=0,i=t.length;r<i;r+=3)this.expandByPoint(Os.fromArray(t,r));return this}setFromBufferAttribute(t){this.makeEmpty();for(let r=0,i=t.count;r<i;r++)this.expandByPoint(Os.fromBufferAttribute(t,r));return this}setFromPoints(t){this.makeEmpty();for(let r=0,i=t.length;r<i;r++)this.expandByPoint(t[r]);return this}setFromCenterAndSize(t,r){const i=Os.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,r=!1){return this.makeEmpty(),this.expandByObject(t,r)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,r=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(void 0!==i){const a=i.getAttribute("position");if(!0===r&&void 0!==a&&!0!==t.isInstancedMesh)for(let r=0,i=a.count;r<i;r++)!0===t.isMesh?t.getVertexPosition(r,Os):Os.fromBufferAttribute(a,r),Os.applyMatrix4(t.matrixWorld),this.expandByPoint(Os);else void 0!==t.boundingBox?(null===t.boundingBox&&t.computeBoundingBox(),Fs.copy(t.boundingBox)):(null===i.boundingBox&&i.computeBoundingBox(),Fs.copy(i.boundingBox)),Fs.applyMatrix4(t.matrixWorld),this.union(Fs)}const a=t.children;for(let t=0,i=a.length;t<i;t++)this.expandByObject(a[t],r);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,r){return r.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,Os),Os.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let r,i;return t.normal.x>0?(r=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(r=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(r+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(r+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(r+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(r+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),r<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Ws),Xs.subVectors(this.max,Ws),zs.subVectors(t.a,Ws),Bs.subVectors(t.b,Ws),Vs.subVectors(t.c,Ws),ks.subVectors(Bs,zs),Gs.subVectors(Vs,Bs),Hs.subVectors(zs,Vs);let r=[0,-ks.z,ks.y,0,-Gs.z,Gs.y,0,-Hs.z,Hs.y,ks.z,0,-ks.x,Gs.z,0,-Gs.x,Hs.z,0,-Hs.x,-ks.y,ks.x,0,-Gs.y,Gs.x,0,-Hs.y,Hs.x,0];return!!satForAxes(r,zs,Bs,Vs,Xs)&&(r=[1,0,0,0,1,0,0,0,1],!!satForAxes(r,zs,Bs,Vs,Xs)&&(js.crossVectors(ks,Gs),r=[js.x,js.y,js.z],satForAxes(r,zs,Bs,Vs,Xs)))}clampPoint(t,r){return r.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Os).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=.5*this.getSize(Os).length()),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(Ns[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Ns[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Ns[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Ns[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Ns[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Ns[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Ns[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Ns[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Ns)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(t){return this.min.fromArray(t.min),this.max.fromArray(t.max),this}}const Ns=[new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3],Os=new Vector3,Fs=new Box3,zs=new Vector3,Bs=new Vector3,Vs=new Vector3,ks=new Vector3,Gs=new Vector3,Hs=new Vector3,Ws=new Vector3,Xs=new Vector3,js=new Vector3,qs=new Vector3;function satForAxes(t,r,i,a,o){for(let l=0,c=t.length-3;l<=c;l+=3){qs.fromArray(t,l);const c=o.x*Math.abs(qs.x)+o.y*Math.abs(qs.y)+o.z*Math.abs(qs.z),h=r.dot(qs),u=i.dot(qs),d=a.dot(qs);if(Math.max(-Math.max(h,u,d),Math.min(h,u,d))>c)return!1}return!0}const Ys=new Box3,Js=new Vector3,Ks=new Vector3;class Sphere{constructor(t=new Vector3,r=-1){this.isSphere=!0,this.center=t,this.radius=r}set(t,r){return this.center.copy(t),this.radius=r,this}setFromPoints(t,r){const i=this.center;void 0!==r?i.copy(r):Ys.setFromPoints(t).getCenter(i);let a=0;for(let r=0,o=t.length;r<o;r++)a=Math.max(a,i.distanceToSquared(t[r]));return this.radius=Math.sqrt(a),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const r=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=r*r}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,r){const i=this.center.distanceToSquared(t);return r.copy(t),i>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center)),r}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Js.subVectors(t,this.center);const r=Js.lengthSq();if(r>this.radius*this.radius){const t=Math.sqrt(r),i=.5*(t-this.radius);this.center.addScaledVector(Js,i/t),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(!0===this.center.equals(t.center)?this.radius=Math.max(this.radius,t.radius):(Ks.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Js.copy(t.center).add(Ks)),this.expandByPoint(Js.copy(t.center).sub(Ks))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(t){return this.radius=t.radius,this.center.fromArray(t.center),this}}const Zs=new Vector3,Qs=new Vector3,$s=new Vector3,eo=new Vector3,no=new Vector3,ro=new Vector3,io=new Vector3;class Ray{constructor(t=new Vector3,r=new Vector3(0,0,-1)){this.origin=t,this.direction=r}set(t,r){return this.origin.copy(t),this.direction.copy(r),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,r){return r.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Zs)),this}closestPointToPoint(t,r){r.subVectors(t,this.origin);const i=r.dot(this.direction);return i<0?r.copy(this.origin):r.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const r=Zs.subVectors(t,this.origin).dot(this.direction);return r<0?this.origin.distanceToSquared(t):(Zs.copy(this.origin).addScaledVector(this.direction,r),Zs.distanceToSquared(t))}distanceSqToSegment(t,r,i,a){Qs.copy(t).add(r).multiplyScalar(.5),$s.copy(r).sub(t).normalize(),eo.copy(this.origin).sub(Qs);const o=.5*t.distanceTo(r),l=-this.direction.dot($s),c=eo.dot(this.direction),h=-eo.dot($s),u=eo.lengthSq(),d=Math.abs(1-l*l);let p,m,g,_;if(d>0)if(p=l*h-c,m=l*c-h,_=o*d,p>=0)if(m>=-_)if(m<=_){const t=1/d;p*=t,m*=t,g=p*(p+l*m+2*c)+m*(l*p+m+2*h)+u}else m=o,p=Math.max(0,-(l*m+c)),g=-p*p+m*(m+2*h)+u;else m=-o,p=Math.max(0,-(l*m+c)),g=-p*p+m*(m+2*h)+u;else m<=-_?(p=Math.max(0,-(-l*o+c)),m=p>0?-o:Math.min(Math.max(-o,-h),o),g=-p*p+m*(m+2*h)+u):m<=_?(p=0,m=Math.min(Math.max(-o,-h),o),g=m*(m+2*h)+u):(p=Math.max(0,-(l*o+c)),m=p>0?o:Math.min(Math.max(-o,-h),o),g=-p*p+m*(m+2*h)+u);else m=l>0?-o:o,p=Math.max(0,-(l*m+c)),g=-p*p+m*(m+2*h)+u;return i&&i.copy(this.origin).addScaledVector(this.direction,p),a&&a.copy(Qs).addScaledVector($s,m),g}intersectSphere(t,r){Zs.subVectors(t.center,this.origin);const i=Zs.dot(this.direction),a=Zs.dot(Zs)-i*i,o=t.radius*t.radius;if(a>o)return null;const l=Math.sqrt(o-a),c=i-l,h=i+l;return h<0?null:c<0?this.at(h,r):this.at(c,r)}intersectsSphere(t){return!(t.radius<0)&&this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const r=t.normal.dot(this.direction);if(0===r)return 0===t.distanceToPoint(this.origin)?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/r;return i>=0?i:null}intersectPlane(t,r){const i=this.distanceToPlane(t);return null===i?null:this.at(i,r)}intersectsPlane(t){const r=t.distanceToPoint(this.origin);if(0===r)return!0;return t.normal.dot(this.direction)*r<0}intersectBox(t,r){let i,a,o,l,c,h;const u=1/this.direction.x,d=1/this.direction.y,p=1/this.direction.z,m=this.origin;return u>=0?(i=(t.min.x-m.x)*u,a=(t.max.x-m.x)*u):(i=(t.max.x-m.x)*u,a=(t.min.x-m.x)*u),d>=0?(o=(t.min.y-m.y)*d,l=(t.max.y-m.y)*d):(o=(t.max.y-m.y)*d,l=(t.min.y-m.y)*d),i>l||o>a?null:((o>i||isNaN(i))&&(i=o),(l<a||isNaN(a))&&(a=l),p>=0?(c=(t.min.z-m.z)*p,h=(t.max.z-m.z)*p):(c=(t.max.z-m.z)*p,h=(t.min.z-m.z)*p),i>h||c>a?null:((c>i||i!=i)&&(i=c),(h<a||a!=a)&&(a=h),a<0?null:this.at(i>=0?i:a,r)))}intersectsBox(t){return null!==this.intersectBox(t,Zs)}intersectTriangle(t,r,i,a,o){no.subVectors(r,t),ro.subVectors(i,t),io.crossVectors(no,ro);let l,c=this.direction.dot(io);if(c>0){if(a)return null;l=1}else{if(!(c<0))return null;l=-1,c=-c}eo.subVectors(this.origin,t);const h=l*this.direction.dot(ro.crossVectors(eo,ro));if(h<0)return null;const u=l*this.direction.dot(no.cross(eo));if(u<0)return null;if(h+u>c)return null;const d=-l*eo.dot(io);return d<0?null:this.at(d/c,o)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Matrix4{constructor(t,r,i,a,o,l,c,h,u,d,p,m,g,_,x,y){Matrix4.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==t&&this.set(t,r,i,a,o,l,c,h,u,d,p,m,g,_,x,y)}set(t,r,i,a,o,l,c,h,u,d,p,m,g,_,x,y){const M=this.elements;return M[0]=t,M[4]=r,M[8]=i,M[12]=a,M[1]=o,M[5]=l,M[9]=c,M[13]=h,M[2]=u,M[6]=d,M[10]=p,M[14]=m,M[3]=g,M[7]=_,M[11]=x,M[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Matrix4).fromArray(this.elements)}copy(t){const r=this.elements,i=t.elements;return r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],this}copyPosition(t){const r=this.elements,i=t.elements;return r[12]=i[12],r[13]=i[13],r[14]=i[14],this}setFromMatrix3(t){const r=t.elements;return this.set(r[0],r[3],r[6],0,r[1],r[4],r[7],0,r[2],r[5],r[8],0,0,0,0,1),this}extractBasis(t,r,i){return t.setFromMatrixColumn(this,0),r.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,r,i){return this.set(t.x,r.x,i.x,0,t.y,r.y,i.y,0,t.z,r.z,i.z,0,0,0,0,1),this}extractRotation(t){const r=this.elements,i=t.elements,a=1/ao.setFromMatrixColumn(t,0).length(),o=1/ao.setFromMatrixColumn(t,1).length(),l=1/ao.setFromMatrixColumn(t,2).length();return r[0]=i[0]*a,r[1]=i[1]*a,r[2]=i[2]*a,r[3]=0,r[4]=i[4]*o,r[5]=i[5]*o,r[6]=i[6]*o,r[7]=0,r[8]=i[8]*l,r[9]=i[9]*l,r[10]=i[10]*l,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,this}makeRotationFromEuler(t){const r=this.elements,i=t.x,a=t.y,o=t.z,l=Math.cos(i),c=Math.sin(i),h=Math.cos(a),u=Math.sin(a),d=Math.cos(o),p=Math.sin(o);if("XYZ"===t.order){const t=l*d,i=l*p,a=c*d,o=c*p;r[0]=h*d,r[4]=-h*p,r[8]=u,r[1]=i+a*u,r[5]=t-o*u,r[9]=-c*h,r[2]=o-t*u,r[6]=a+i*u,r[10]=l*h}else if("YXZ"===t.order){const t=h*d,i=h*p,a=u*d,o=u*p;r[0]=t+o*c,r[4]=a*c-i,r[8]=l*u,r[1]=l*p,r[5]=l*d,r[9]=-c,r[2]=i*c-a,r[6]=o+t*c,r[10]=l*h}else if("ZXY"===t.order){const t=h*d,i=h*p,a=u*d,o=u*p;r[0]=t-o*c,r[4]=-l*p,r[8]=a+i*c,r[1]=i+a*c,r[5]=l*d,r[9]=o-t*c,r[2]=-l*u,r[6]=c,r[10]=l*h}else if("ZYX"===t.order){const t=l*d,i=l*p,a=c*d,o=c*p;r[0]=h*d,r[4]=a*u-i,r[8]=t*u+o,r[1]=h*p,r[5]=o*u+t,r[9]=i*u-a,r[2]=-u,r[6]=c*h,r[10]=l*h}else if("YZX"===t.order){const t=l*h,i=l*u,a=c*h,o=c*u;r[0]=h*d,r[4]=o-t*p,r[8]=a*p+i,r[1]=p,r[5]=l*d,r[9]=-c*d,r[2]=-u*d,r[6]=i*p+a,r[10]=t-o*p}else if("XZY"===t.order){const t=l*h,i=l*u,a=c*h,o=c*u;r[0]=h*d,r[4]=-p,r[8]=u*d,r[1]=t*p+o,r[5]=l*d,r[9]=i*p-a,r[2]=a*p-i,r[6]=c*d,r[10]=o*p+t}return r[3]=0,r[7]=0,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,this}makeRotationFromQuaternion(t){return this.compose(oo,t,lo)}lookAt(t,r,i){const a=this.elements;return uo.subVectors(t,r),0===uo.lengthSq()&&(uo.z=1),uo.normalize(),co.crossVectors(i,uo),0===co.lengthSq()&&(1===Math.abs(i.z)?uo.x+=1e-4:uo.z+=1e-4,uo.normalize(),co.crossVectors(i,uo)),co.normalize(),ho.crossVectors(uo,co),a[0]=co.x,a[4]=ho.x,a[8]=uo.x,a[1]=co.y,a[5]=ho.y,a[9]=uo.y,a[2]=co.z,a[6]=ho.z,a[10]=uo.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,r){const i=t.elements,a=r.elements,o=this.elements,l=i[0],c=i[4],h=i[8],u=i[12],d=i[1],p=i[5],m=i[9],g=i[13],_=i[2],x=i[6],y=i[10],M=i[14],S=i[3],b=i[7],T=i[11],E=i[15],w=a[0],C=a[4],A=a[8],R=a[12],P=a[1],L=a[5],U=a[9],D=a[13],I=a[2],N=a[6],O=a[10],z=a[14],B=a[3],V=a[7],k=a[11],G=a[15];return o[0]=l*w+c*P+h*I+u*B,o[4]=l*C+c*L+h*N+u*V,o[8]=l*A+c*U+h*O+u*k,o[12]=l*R+c*D+h*z+u*G,o[1]=d*w+p*P+m*I+g*B,o[5]=d*C+p*L+m*N+g*V,o[9]=d*A+p*U+m*O+g*k,o[13]=d*R+p*D+m*z+g*G,o[2]=_*w+x*P+y*I+M*B,o[6]=_*C+x*L+y*N+M*V,o[10]=_*A+x*U+y*O+M*k,o[14]=_*R+x*D+y*z+M*G,o[3]=S*w+b*P+T*I+E*B,o[7]=S*C+b*L+T*N+E*V,o[11]=S*A+b*U+T*O+E*k,o[15]=S*R+b*D+T*z+E*G,this}multiplyScalar(t){const r=this.elements;return r[0]*=t,r[4]*=t,r[8]*=t,r[12]*=t,r[1]*=t,r[5]*=t,r[9]*=t,r[13]*=t,r[2]*=t,r[6]*=t,r[10]*=t,r[14]*=t,r[3]*=t,r[7]*=t,r[11]*=t,r[15]*=t,this}determinant(){const t=this.elements,r=t[0],i=t[4],a=t[8],o=t[12],l=t[1],c=t[5],h=t[9],u=t[13],d=t[2],p=t[6],m=t[10],g=t[14];return t[3]*(+o*h*p-a*u*p-o*c*m+i*u*m+a*c*g-i*h*g)+t[7]*(+r*h*g-r*u*m+o*l*m-a*l*g+a*u*d-o*h*d)+t[11]*(+r*u*p-r*c*g-o*l*p+i*l*g+o*c*d-i*u*d)+t[15]*(-a*c*d-r*h*p+r*c*m+a*l*p-i*l*m+i*h*d)}transpose(){const t=this.elements;let r;return r=t[1],t[1]=t[4],t[4]=r,r=t[2],t[2]=t[8],t[8]=r,r=t[6],t[6]=t[9],t[9]=r,r=t[3],t[3]=t[12],t[12]=r,r=t[7],t[7]=t[13],t[13]=r,r=t[11],t[11]=t[14],t[14]=r,this}setPosition(t,r,i){const a=this.elements;return t.isVector3?(a[12]=t.x,a[13]=t.y,a[14]=t.z):(a[12]=t,a[13]=r,a[14]=i),this}invert(){const t=this.elements,r=t[0],i=t[1],a=t[2],o=t[3],l=t[4],c=t[5],h=t[6],u=t[7],d=t[8],p=t[9],m=t[10],g=t[11],_=t[12],x=t[13],y=t[14],M=t[15],S=p*y*u-x*m*u+x*h*g-c*y*g-p*h*M+c*m*M,b=_*m*u-d*y*u-_*h*g+l*y*g+d*h*M-l*m*M,T=d*x*u-_*p*u+_*c*g-l*x*g-d*c*M+l*p*M,E=_*p*h-d*x*h-_*c*m+l*x*m+d*c*y-l*p*y,w=r*S+i*b+a*T+o*E;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const C=1/w;return t[0]=S*C,t[1]=(x*m*o-p*y*o-x*a*g+i*y*g+p*a*M-i*m*M)*C,t[2]=(c*y*o-x*h*o+x*a*u-i*y*u-c*a*M+i*h*M)*C,t[3]=(p*h*o-c*m*o-p*a*u+i*m*u+c*a*g-i*h*g)*C,t[4]=b*C,t[5]=(d*y*o-_*m*o+_*a*g-r*y*g-d*a*M+r*m*M)*C,t[6]=(_*h*o-l*y*o-_*a*u+r*y*u+l*a*M-r*h*M)*C,t[7]=(l*m*o-d*h*o+d*a*u-r*m*u-l*a*g+r*h*g)*C,t[8]=T*C,t[9]=(_*p*o-d*x*o-_*i*g+r*x*g+d*i*M-r*p*M)*C,t[10]=(l*x*o-_*c*o+_*i*u-r*x*u-l*i*M+r*c*M)*C,t[11]=(d*c*o-l*p*o-d*i*u+r*p*u+l*i*g-r*c*g)*C,t[12]=E*C,t[13]=(d*x*a-_*p*a+_*i*m-r*x*m-d*i*y+r*p*y)*C,t[14]=(_*c*a-l*x*a-_*i*h+r*x*h+l*i*y-r*c*y)*C,t[15]=(l*p*a-d*c*a+d*i*h-r*p*h-l*i*m+r*c*m)*C,this}scale(t){const r=this.elements,i=t.x,a=t.y,o=t.z;return r[0]*=i,r[4]*=a,r[8]*=o,r[1]*=i,r[5]*=a,r[9]*=o,r[2]*=i,r[6]*=a,r[10]*=o,r[3]*=i,r[7]*=a,r[11]*=o,this}getMaxScaleOnAxis(){const t=this.elements,r=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],a=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(r,i,a))}makeTranslation(t,r,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,r,0,0,1,i,0,0,0,1),this}makeRotationX(t){const r=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,r,-i,0,0,i,r,0,0,0,0,1),this}makeRotationY(t){const r=Math.cos(t),i=Math.sin(t);return this.set(r,0,i,0,0,1,0,0,-i,0,r,0,0,0,0,1),this}makeRotationZ(t){const r=Math.cos(t),i=Math.sin(t);return this.set(r,-i,0,0,i,r,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,r){const i=Math.cos(r),a=Math.sin(r),o=1-i,l=t.x,c=t.y,h=t.z,u=o*l,d=o*c;return this.set(u*l+i,u*c-a*h,u*h+a*c,0,u*c+a*h,d*c+i,d*h-a*l,0,u*h-a*c,d*h+a*l,o*h*h+i,0,0,0,0,1),this}makeScale(t,r,i){return this.set(t,0,0,0,0,r,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,r,i,a,o,l){return this.set(1,i,o,0,t,1,l,0,r,a,1,0,0,0,0,1),this}compose(t,r,i){const a=this.elements,o=r._x,l=r._y,c=r._z,h=r._w,u=o+o,d=l+l,p=c+c,m=o*u,g=o*d,_=o*p,x=l*d,y=l*p,M=c*p,S=h*u,b=h*d,T=h*p,E=i.x,w=i.y,C=i.z;return a[0]=(1-(x+M))*E,a[1]=(g+T)*E,a[2]=(_-b)*E,a[3]=0,a[4]=(g-T)*w,a[5]=(1-(m+M))*w,a[6]=(y+S)*w,a[7]=0,a[8]=(_+b)*C,a[9]=(y-S)*C,a[10]=(1-(m+x))*C,a[11]=0,a[12]=t.x,a[13]=t.y,a[14]=t.z,a[15]=1,this}decompose(t,r,i){const a=this.elements;let o=ao.set(a[0],a[1],a[2]).length();const l=ao.set(a[4],a[5],a[6]).length(),c=ao.set(a[8],a[9],a[10]).length();this.determinant()<0&&(o=-o),t.x=a[12],t.y=a[13],t.z=a[14],so.copy(this);const h=1/o,u=1/l,d=1/c;return so.elements[0]*=h,so.elements[1]*=h,so.elements[2]*=h,so.elements[4]*=u,so.elements[5]*=u,so.elements[6]*=u,so.elements[8]*=d,so.elements[9]*=d,so.elements[10]*=d,r.setFromRotationMatrix(so),i.x=o,i.y=l,i.z=c,this}makePerspective(t,r,i,a,o,l,c=2e3){const h=this.elements,u=2*o/(r-t),d=2*o/(i-a),p=(r+t)/(r-t),m=(i+a)/(i-a);let g,_;if(c===xs)g=-(l+o)/(l-o),_=-2*l*o/(l-o);else{if(c!==ys)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);g=-l/(l-o),_=-l*o/(l-o)}return h[0]=u,h[4]=0,h[8]=p,h[12]=0,h[1]=0,h[5]=d,h[9]=m,h[13]=0,h[2]=0,h[6]=0,h[10]=g,h[14]=_,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,r,i,a,o,l,c=2e3){const h=this.elements,u=1/(r-t),d=1/(i-a),p=1/(l-o),m=(r+t)*u,g=(i+a)*d;let _,x;if(c===xs)_=(l+o)*p,x=-2*p;else{if(c!==ys)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);_=o*p,x=-1*p}return h[0]=2*u,h[4]=0,h[8]=0,h[12]=-m,h[1]=0,h[5]=2*d,h[9]=0,h[13]=-g,h[2]=0,h[6]=0,h[10]=x,h[14]=-_,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const r=this.elements,i=t.elements;for(let t=0;t<16;t++)if(r[t]!==i[t])return!1;return!0}fromArray(t,r=0){for(let i=0;i<16;i++)this.elements[i]=t[i+r];return this}toArray(t=[],r=0){const i=this.elements;return t[r]=i[0],t[r+1]=i[1],t[r+2]=i[2],t[r+3]=i[3],t[r+4]=i[4],t[r+5]=i[5],t[r+6]=i[6],t[r+7]=i[7],t[r+8]=i[8],t[r+9]=i[9],t[r+10]=i[10],t[r+11]=i[11],t[r+12]=i[12],t[r+13]=i[13],t[r+14]=i[14],t[r+15]=i[15],t}}const ao=new Vector3,so=new Matrix4,oo=new Vector3(0,0,0),lo=new Vector3(1,1,1),co=new Vector3,ho=new Vector3,uo=new Vector3,po=new Matrix4,fo=new Quaternion;class Euler{constructor(t=0,r=0,i=0,a=Euler.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=r,this._z=i,this._order=a}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,r,i,a=this._order){return this._x=t,this._y=r,this._z=i,this._order=a,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,r=this._order,i=!0){const a=t.elements,o=a[0],l=a[4],c=a[8],h=a[1],u=a[5],d=a[9],p=a[2],m=a[6],g=a[10];switch(r){case"XYZ":this._y=Math.asin(three_core_clamp(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-d,g),this._z=Math.atan2(-l,o)):(this._x=Math.atan2(m,u),this._z=0);break;case"YXZ":this._x=Math.asin(-three_core_clamp(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(c,g),this._z=Math.atan2(h,u)):(this._y=Math.atan2(-p,o),this._z=0);break;case"ZXY":this._x=Math.asin(three_core_clamp(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,g),this._z=Math.atan2(-l,u)):(this._y=0,this._z=Math.atan2(h,o));break;case"ZYX":this._y=Math.asin(-three_core_clamp(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,g),this._z=Math.atan2(h,o)):(this._x=0,this._z=Math.atan2(-l,u));break;case"YZX":this._z=Math.asin(three_core_clamp(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-d,u),this._y=Math.atan2(-p,o)):(this._x=0,this._y=Math.atan2(c,g));break;case"XZY":this._z=Math.asin(-three_core_clamp(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(m,u),this._y=Math.atan2(c,o)):(this._x=Math.atan2(-d,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+r)}return this._order=r,!0===i&&this._onChangeCallback(),this}setFromQuaternion(t,r,i){return po.makeRotationFromQuaternion(t),this.setFromRotationMatrix(po,r,i)}setFromVector3(t,r=this._order){return this.set(t.x,t.y,t.z,r)}reorder(t){return fo.setFromEuler(this),this.setFromQuaternion(fo,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],r=0){return t[r]=this._x,t[r+1]=this._y,t[r+2]=this._z,t[r+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Euler.DEFAULT_ORDER="XYZ";class Layers{constructor(){this.mask=1}set(t){this.mask=1<<t>>>0}enable(t){this.mask|=1<<t}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t}disable(t){this.mask&=~(1<<t)}disableAll(){this.mask=0}test(t){return 0!==(this.mask&t.mask)}isEnabled(t){return!!(this.mask&1<<t)}}let mo=0;const go=new Vector3,_o=new Quaternion,vo=new Matrix4,xo=new Vector3,yo=new Vector3,Mo=new Vector3,So=new Quaternion,bo=new Vector3(1,0,0),To=new Vector3(0,1,0),Eo=new Vector3(0,0,1),wo={type:"added"},Co={type:"removed"},Ao={type:"childadded",child:null},Ro={type:"childremoved",child:null};class Object3D extends EventDispatcher{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:mo++}),this.uuid=generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Object3D.DEFAULT_UP.clone();const t=new Vector3,r=new Euler,i=new Quaternion,a=new Vector3(1,1,1);r._onChange((function onRotationChange(){i.setFromEuler(r,!1)})),i._onChange((function onQuaternionChange(){r.setFromQuaternion(i,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:r},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:a},modelViewMatrix:{value:new Matrix4},normalMatrix:{value:new Matrix3}}),this.matrix=new Matrix4,this.matrixWorld=new Matrix4,this.matrixAutoUpdate=Object3D.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Layers,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,r){this.quaternion.setFromAxisAngle(t,r)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,r){return _o.setFromAxisAngle(t,r),this.quaternion.multiply(_o),this}rotateOnWorldAxis(t,r){return _o.setFromAxisAngle(t,r),this.quaternion.premultiply(_o),this}rotateX(t){return this.rotateOnAxis(bo,t)}rotateY(t){return this.rotateOnAxis(To,t)}rotateZ(t){return this.rotateOnAxis(Eo,t)}translateOnAxis(t,r){return go.copy(t).applyQuaternion(this.quaternion),this.position.add(go.multiplyScalar(r)),this}translateX(t){return this.translateOnAxis(bo,t)}translateY(t){return this.translateOnAxis(To,t)}translateZ(t){return this.translateOnAxis(Eo,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(vo.copy(this.matrixWorld).invert())}lookAt(t,r,i){t.isVector3?xo.copy(t):xo.set(t,r,i);const a=this.parent;this.updateWorldMatrix(!0,!1),yo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?vo.lookAt(yo,xo,this.up):vo.lookAt(xo,yo,this.up),this.quaternion.setFromRotationMatrix(vo),a&&(vo.extractRotation(a.matrixWorld),_o.setFromRotationMatrix(vo),this.quaternion.premultiply(_o.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(wo),Ao.child=t,this.dispatchEvent(Ao),Ao.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const r=this.children.indexOf(t);return-1!==r&&(t.parent=null,this.children.splice(r,1),t.dispatchEvent(Co),Ro.child=t,this.dispatchEvent(Ro),Ro.child=null),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),vo.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),vo.multiply(t.parent.matrixWorld)),t.applyMatrix4(vo),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(wo),Ao.child=t,this.dispatchEvent(Ao),Ao.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,r){if(this[t]===r)return this;for(let i=0,a=this.children.length;i<a;i++){const a=this.children[i].getObjectByProperty(t,r);if(void 0!==a)return a}}getObjectsByProperty(t,r,i=[]){this[t]===r&&i.push(this);const a=this.children;for(let o=0,l=a.length;o<l;o++)a[o].getObjectsByProperty(t,r,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(yo,t,Mo),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(yo,So,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const r=this.matrixWorld.elements;return t.set(r[8],r[9],r[10]).normalize()}raycast(){}traverse(t){t(this);const r=this.children;for(let i=0,a=r.length;i<a;i++)r[i].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const r=this.children;for(let i=0,a=r.length;i<a;i++)r[i].traverseVisible(t)}traverseAncestors(t){const r=this.parent;null!==r&&(t(r),r.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const r=this.children;for(let i=0,a=r.length;i<a;i++){r[i].updateMatrixWorld(t)}}updateWorldMatrix(t,r){const i=this.parent;if(!0===t&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),!0===r){const t=this.children;for(let r=0,i=t.length;r<i;r++){t[r].updateWorldMatrix(!1,!0)}}}toJSON(t){const r=void 0===t||"string"==typeof t,i={};r&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const a={};function serialize(r,i){return void 0===r[i.uuid]&&(r[i.uuid]=i.toJSON(t)),i.uuid}if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),!0===this.castShadow&&(a.castShadow=!0),!0===this.receiveShadow&&(a.receiveShadow=!0),!1===this.visible&&(a.visible=!1),!1===this.frustumCulled&&(a.frustumCulled=!1),0!==this.renderOrder&&(a.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(a.userData=this.userData),a.layers=this.layers.mask,a.matrix=this.matrix.toArray(),a.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(a.matrixAutoUpdate=!1),this.isInstancedMesh&&(a.type="InstancedMesh",a.count=this.count,a.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(a.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(a.type="BatchedMesh",a.perObjectFrustumCulled=this.perObjectFrustumCulled,a.sortObjects=this.sortObjects,a.drawRanges=this._drawRanges,a.reservedRanges=this._reservedRanges,a.geometryInfo=this._geometryInfo.map((t=>({...t,boundingBox:t.boundingBox?t.boundingBox.toJSON():void 0,boundingSphere:t.boundingSphere?t.boundingSphere.toJSON():void 0}))),a.instanceInfo=this._instanceInfo.map((t=>({...t}))),a.availableInstanceIds=this._availableInstanceIds.slice(),a.availableGeometryIds=this._availableGeometryIds.slice(),a.nextIndexStart=this._nextIndexStart,a.nextVertexStart=this._nextVertexStart,a.geometryCount=this._geometryCount,a.maxInstanceCount=this._maxInstanceCount,a.maxVertexCount=this._maxVertexCount,a.maxIndexCount=this._maxIndexCount,a.geometryInitialized=this._geometryInitialized,a.matricesTexture=this._matricesTexture.toJSON(t),a.indirectTexture=this._indirectTexture.toJSON(t),null!==this._colorsTexture&&(a.colorsTexture=this._colorsTexture.toJSON(t)),null!==this.boundingSphere&&(a.boundingSphere=this.boundingSphere.toJSON()),null!==this.boundingBox&&(a.boundingBox=this.boundingBox.toJSON())),this.isScene)this.background&&(this.background.isColor?a.background=this.background.toJSON():this.background.isTexture&&(a.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(a.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){a.geometry=serialize(t.geometries,this.geometry);const r=this.geometry.parameters;if(void 0!==r&&void 0!==r.shapes){const i=r.shapes;if(Array.isArray(i))for(let r=0,a=i.length;r<a;r++){const a=i[r];serialize(t.shapes,a)}else serialize(t.shapes,i)}}if(this.isSkinnedMesh&&(a.bindMode=this.bindMode,a.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(serialize(t.skeletons,this.skeleton),a.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const r=[];for(let i=0,a=this.material.length;i<a;i++)r.push(serialize(t.materials,this.material[i]));a.material=r}else a.material=serialize(t.materials,this.material);if(this.children.length>0){a.children=[];for(let r=0;r<this.children.length;r++)a.children.push(this.children[r].toJSON(t).object)}if(this.animations.length>0){a.animations=[];for(let r=0;r<this.animations.length;r++){const i=this.animations[r];a.animations.push(serialize(t.animations,i))}}if(r){const r=extractFromCache(t.geometries),a=extractFromCache(t.materials),o=extractFromCache(t.textures),l=extractFromCache(t.images),c=extractFromCache(t.shapes),h=extractFromCache(t.skeletons),u=extractFromCache(t.animations),d=extractFromCache(t.nodes);r.length>0&&(i.geometries=r),a.length>0&&(i.materials=a),o.length>0&&(i.textures=o),l.length>0&&(i.images=l),c.length>0&&(i.shapes=c),h.length>0&&(i.skeletons=h),u.length>0&&(i.animations=u),d.length>0&&(i.nodes=d)}return i.object=a,i;function extractFromCache(t){const r=[];for(const i in t){const a=t[i];delete a.metadata,r.push(a)}return r}}clone(t){return(new this.constructor).copy(this,t)}copy(t,r=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),!0===r)for(let r=0;r<t.children.length;r++){const i=t.children[r];this.add(i.clone())}return this}}Object3D.DEFAULT_UP=new Vector3(0,1,0),Object3D.DEFAULT_MATRIX_AUTO_UPDATE=!0,Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Po=new Vector3,Lo=new Vector3,Uo=new Vector3,Do=new Vector3,Io=new Vector3,No=new Vector3,Oo=new Vector3,Fo=new Vector3,zo=new Vector3,Bo=new Vector3,Vo=new Vector4,ko=new Vector4,Go=new Vector4;class Triangle{constructor(t=new Vector3,r=new Vector3,i=new Vector3){this.a=t,this.b=r,this.c=i}static getNormal(t,r,i,a){a.subVectors(i,r),Po.subVectors(t,r),a.cross(Po);const o=a.lengthSq();return o>0?a.multiplyScalar(1/Math.sqrt(o)):a.set(0,0,0)}static getBarycoord(t,r,i,a,o){Po.subVectors(a,r),Lo.subVectors(i,r),Uo.subVectors(t,r);const l=Po.dot(Po),c=Po.dot(Lo),h=Po.dot(Uo),u=Lo.dot(Lo),d=Lo.dot(Uo),p=l*u-c*c;if(0===p)return o.set(0,0,0),null;const m=1/p,g=(u*h-c*d)*m,_=(l*d-c*h)*m;return o.set(1-g-_,_,g)}static containsPoint(t,r,i,a){return null!==this.getBarycoord(t,r,i,a,Do)&&(Do.x>=0&&Do.y>=0&&Do.x+Do.y<=1)}static getInterpolation(t,r,i,a,o,l,c,h){return null===this.getBarycoord(t,r,i,a,Do)?(h.x=0,h.y=0,"z"in h&&(h.z=0),"w"in h&&(h.w=0),null):(h.setScalar(0),h.addScaledVector(o,Do.x),h.addScaledVector(l,Do.y),h.addScaledVector(c,Do.z),h)}static getInterpolatedAttribute(t,r,i,a,o,l){return Vo.setScalar(0),ko.setScalar(0),Go.setScalar(0),Vo.fromBufferAttribute(t,r),ko.fromBufferAttribute(t,i),Go.fromBufferAttribute(t,a),l.setScalar(0),l.addScaledVector(Vo,o.x),l.addScaledVector(ko,o.y),l.addScaledVector(Go,o.z),l}static isFrontFacing(t,r,i,a){return Po.subVectors(i,r),Lo.subVectors(t,r),Po.cross(Lo).dot(a)<0}set(t,r,i){return this.a.copy(t),this.b.copy(r),this.c.copy(i),this}setFromPointsAndIndices(t,r,i,a){return this.a.copy(t[r]),this.b.copy(t[i]),this.c.copy(t[a]),this}setFromAttributeAndIndices(t,r,i,a){return this.a.fromBufferAttribute(t,r),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,a),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Po.subVectors(this.c,this.b),Lo.subVectors(this.a,this.b),.5*Po.cross(Lo).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Triangle.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,r){return Triangle.getBarycoord(t,this.a,this.b,this.c,r)}getInterpolation(t,r,i,a,o){return Triangle.getInterpolation(t,this.a,this.b,this.c,r,i,a,o)}containsPoint(t){return Triangle.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Triangle.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,r){const i=this.a,a=this.b,o=this.c;let l,c;Io.subVectors(a,i),No.subVectors(o,i),Fo.subVectors(t,i);const h=Io.dot(Fo),u=No.dot(Fo);if(h<=0&&u<=0)return r.copy(i);zo.subVectors(t,a);const d=Io.dot(zo),p=No.dot(zo);if(d>=0&&p<=d)return r.copy(a);const m=h*p-d*u;if(m<=0&&h>=0&&d<=0)return l=h/(h-d),r.copy(i).addScaledVector(Io,l);Bo.subVectors(t,o);const g=Io.dot(Bo),_=No.dot(Bo);if(_>=0&&g<=_)return r.copy(o);const x=g*u-h*_;if(x<=0&&u>=0&&_<=0)return c=u/(u-_),r.copy(i).addScaledVector(No,c);const y=d*_-g*p;if(y<=0&&p-d>=0&&g-_>=0)return Oo.subVectors(o,a),c=(p-d)/(p-d+(g-_)),r.copy(a).addScaledVector(Oo,c);const M=1/(y+x+m);return l=x*M,c=m*M,r.copy(i).addScaledVector(Io,l).addScaledVector(No,c)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const Ho={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Wo={h:0,s:0,l:0},Xo={h:0,s:0,l:0};function hue2rgb(t,r,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(r-t)*i:i<.5?r:i<2/3?t+6*(r-t)*(2/3-i):t}class Color{constructor(t,r,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,r,i)}set(t,r,i){if(void 0===r&&void 0===i){const r=t;r&&r.isColor?this.copy(r):"number"==typeof r?this.setHex(r):"string"==typeof r&&this.setStyle(r)}else this.setRGB(t,r,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,r=is){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,Ps.colorSpaceToWorking(this,r),this}setRGB(t,r,i,a=Ps.workingColorSpace){return this.r=t,this.g=r,this.b=i,Ps.colorSpaceToWorking(this,a),this}setHSL(t,r,i,a=Ps.workingColorSpace){if(t=euclideanModulo(t,1),r=three_core_clamp(r,0,1),i=three_core_clamp(i,0,1),0===r)this.r=this.g=this.b=i;else{const a=i<=.5?i*(1+r):i+r-i*r,o=2*i-a;this.r=hue2rgb(o,a,t+1/3),this.g=hue2rgb(o,a,t),this.b=hue2rgb(o,a,t-1/3)}return Ps.colorSpaceToWorking(this,a),this}setStyle(t,r=is){function handleAlpha(r){void 0!==r&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let a;const o=i[1],l=i[2];switch(o){case"rgb":case"rgba":if(a=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return handleAlpha(a[4]),this.setRGB(Math.min(255,parseInt(a[1],10))/255,Math.min(255,parseInt(a[2],10))/255,Math.min(255,parseInt(a[3],10))/255,r);if(a=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return handleAlpha(a[4]),this.setRGB(Math.min(100,parseInt(a[1],10))/100,Math.min(100,parseInt(a[2],10))/100,Math.min(100,parseInt(a[3],10))/100,r);break;case"hsl":case"hsla":if(a=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return handleAlpha(a[4]),this.setHSL(parseFloat(a[1])/360,parseFloat(a[2])/100,parseFloat(a[3])/100,r);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const a=i[1],o=a.length;if(3===o)return this.setRGB(parseInt(a.charAt(0),16)/15,parseInt(a.charAt(1),16)/15,parseInt(a.charAt(2),16)/15,r);if(6===o)return this.setHex(parseInt(a,16),r);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,r);return this}setColorName(t,r=is){const i=Ho[t.toLowerCase()];return void 0!==i?this.setHex(i,r):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=SRGBToLinear(t.r),this.g=SRGBToLinear(t.g),this.b=SRGBToLinear(t.b),this}copyLinearToSRGB(t){return this.r=LinearToSRGB(t.r),this.g=LinearToSRGB(t.g),this.b=LinearToSRGB(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=is){return Ps.workingToColorSpace(jo.copy(this),t),65536*Math.round(three_core_clamp(255*jo.r,0,255))+256*Math.round(three_core_clamp(255*jo.g,0,255))+Math.round(three_core_clamp(255*jo.b,0,255))}getHexString(t=is){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,r=Ps.workingColorSpace){Ps.workingToColorSpace(jo.copy(this),r);const i=jo.r,a=jo.g,o=jo.b,l=Math.max(i,a,o),c=Math.min(i,a,o);let h,u;const d=(c+l)/2;if(c===l)h=0,u=0;else{const t=l-c;switch(u=d<=.5?t/(l+c):t/(2-l-c),l){case i:h=(a-o)/t+(a<o?6:0);break;case a:h=(o-i)/t+2;break;case o:h=(i-a)/t+4}h/=6}return t.h=h,t.s=u,t.l=d,t}getRGB(t,r=Ps.workingColorSpace){return Ps.workingToColorSpace(jo.copy(this),r),t.r=jo.r,t.g=jo.g,t.b=jo.b,t}getStyle(t=is){Ps.workingToColorSpace(jo.copy(this),t);const r=jo.r,i=jo.g,a=jo.b;return t!==is?`color(${t} ${r.toFixed(3)} ${i.toFixed(3)} ${a.toFixed(3)})`:`rgb(${Math.round(255*r)},${Math.round(255*i)},${Math.round(255*a)})`}offsetHSL(t,r,i){return this.getHSL(Wo),this.setHSL(Wo.h+t,Wo.s+r,Wo.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,r){return this.r=t.r+r.r,this.g=t.g+r.g,this.b=t.b+r.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,r){return this.r+=(t.r-this.r)*r,this.g+=(t.g-this.g)*r,this.b+=(t.b-this.b)*r,this}lerpColors(t,r,i){return this.r=t.r+(r.r-t.r)*i,this.g=t.g+(r.g-t.g)*i,this.b=t.b+(r.b-t.b)*i,this}lerpHSL(t,r){this.getHSL(Wo),t.getHSL(Xo);const i=lerp(Wo.h,Xo.h,r),a=lerp(Wo.s,Xo.s,r),o=lerp(Wo.l,Xo.l,r);return this.setHSL(i,a,o),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const r=this.r,i=this.g,a=this.b,o=t.elements;return this.r=o[0]*r+o[3]*i+o[6]*a,this.g=o[1]*r+o[4]*i+o[7]*a,this.b=o[2]*r+o[5]*i+o[8]*a,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,r=0){return this.r=t[r],this.g=t[r+1],this.b=t[r+2],this}toArray(t=[],r=0){return t[r]=this.r,t[r+1]=this.g,t[r+2]=this.b,t}fromBufferAttribute(t,r){return this.r=t.getX(r),this.g=t.getY(r),this.b=t.getZ(r),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const jo=new Color;Color.NAMES=Ho;let qo=0;class Material extends EventDispatcher{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:qo++}),this.uuid=generateUUID(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=mi,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Color(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ls,this.stencilZFail=ls,this.stencilZPass=ls,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const r in t){const i=t[r];if(void 0===i){console.warn(`THREE.Material: parameter '${r}' has value of undefined.`);continue}const a=this[r];void 0!==a?a&&a.isColor?a.set(i):a&&a.isVector3&&i&&i.isVector3?a.copy(i):this[r]=i:console.warn(`THREE.Material: '${r}' is not a property of THREE.${this.type}.`)}}toJSON(t){const r=void 0===t||"string"==typeof t;r&&(t={textures:{},images:{}});const i={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};function extractFromCache(t){const r=[];for(const i in t){const a=t[i];delete a.metadata,r.push(a)}return r}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),void 0!==this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.dispersion&&(i.dispersion=this.dispersion),void 0!==this.iridescence&&(i.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(i.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),void 0!==this.anisotropy&&(i.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapRotation&&(i.envMapRotation=this.envMapRotation.toArray()),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),0!==this.side&&(i.side=this.side),!0===this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=!0),204!==this.blendSrc&&(i.blendSrc=this.blendSrc),205!==this.blendDst&&(i.blendDst=this.blendDst),this.blendEquation!==mi&&(i.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(i.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(i.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(i.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(i.depthFunc=this.depthFunc),!1===this.depthTest&&(i.depthTest=this.depthTest),!1===this.depthWrite&&(i.depthWrite=this.depthWrite),!1===this.colorWrite&&(i.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(i.stencilWriteMask=this.stencilWriteMask),519!==this.stencilFunc&&(i.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(i.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==ls&&(i.stencilFail=this.stencilFail),this.stencilZFail!==ls&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==ls&&(i.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(i.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaHash&&(i.alphaHash=!0),!0===this.alphaToCoverage&&(i.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=!0),!0===this.forceSinglePass&&(i.forceSinglePass=!0),!0===this.wireframe&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=!0),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),!1===this.fog&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData),r){const r=extractFromCache(t.textures),a=extractFromCache(t.images);r.length>0&&(i.textures=r),a.length>0&&(i.images=a)}return i}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const r=t.clippingPlanes;let i=null;if(null!==r){const t=r.length;i=new Array(t);for(let a=0;a!==t;++a)i[a]=r[a].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}class MeshBasicMaterial extends Material{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Euler,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Yo=new Vector3,Jo=new Vector2;let Ko=0;class BufferAttribute{constructor(t,r,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:Ko++}),this.name="",this.array=t,this.itemSize=r,this.count=void 0!==t?t.length/r:0,this.normalized=i,this.usage=_s,this.updateRanges=[],this.gpuType=oa,this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,r){this.updateRanges.push({start:t,count:r})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,r,i){t*=this.itemSize,i*=r.itemSize;for(let a=0,o=this.itemSize;a<o;a++)this.array[t+a]=r.array[i+a];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(2===this.itemSize)for(let r=0,i=this.count;r<i;r++)Jo.fromBufferAttribute(this,r),Jo.applyMatrix3(t),this.setXY(r,Jo.x,Jo.y);else if(3===this.itemSize)for(let r=0,i=this.count;r<i;r++)Yo.fromBufferAttribute(this,r),Yo.applyMatrix3(t),this.setXYZ(r,Yo.x,Yo.y,Yo.z);return this}applyMatrix4(t){for(let r=0,i=this.count;r<i;r++)Yo.fromBufferAttribute(this,r),Yo.applyMatrix4(t),this.setXYZ(r,Yo.x,Yo.y,Yo.z);return this}applyNormalMatrix(t){for(let r=0,i=this.count;r<i;r++)Yo.fromBufferAttribute(this,r),Yo.applyNormalMatrix(t),this.setXYZ(r,Yo.x,Yo.y,Yo.z);return this}transformDirection(t){for(let r=0,i=this.count;r<i;r++)Yo.fromBufferAttribute(this,r),Yo.transformDirection(t),this.setXYZ(r,Yo.x,Yo.y,Yo.z);return this}set(t,r=0){return this.array.set(t,r),this}getComponent(t,r){let i=this.array[t*this.itemSize+r];return this.normalized&&(i=denormalize(i,this.array)),i}setComponent(t,r,i){return this.normalized&&(i=three_core_normalize(i,this.array)),this.array[t*this.itemSize+r]=i,this}getX(t){let r=this.array[t*this.itemSize];return this.normalized&&(r=denormalize(r,this.array)),r}setX(t,r){return this.normalized&&(r=three_core_normalize(r,this.array)),this.array[t*this.itemSize]=r,this}getY(t){let r=this.array[t*this.itemSize+1];return this.normalized&&(r=denormalize(r,this.array)),r}setY(t,r){return this.normalized&&(r=three_core_normalize(r,this.array)),this.array[t*this.itemSize+1]=r,this}getZ(t){let r=this.array[t*this.itemSize+2];return this.normalized&&(r=denormalize(r,this.array)),r}setZ(t,r){return this.normalized&&(r=three_core_normalize(r,this.array)),this.array[t*this.itemSize+2]=r,this}getW(t){let r=this.array[t*this.itemSize+3];return this.normalized&&(r=denormalize(r,this.array)),r}setW(t,r){return this.normalized&&(r=three_core_normalize(r,this.array)),this.array[t*this.itemSize+3]=r,this}setXY(t,r,i){return t*=this.itemSize,this.normalized&&(r=three_core_normalize(r,this.array),i=three_core_normalize(i,this.array)),this.array[t+0]=r,this.array[t+1]=i,this}setXYZ(t,r,i,a){return t*=this.itemSize,this.normalized&&(r=three_core_normalize(r,this.array),i=three_core_normalize(i,this.array),a=three_core_normalize(a,this.array)),this.array[t+0]=r,this.array[t+1]=i,this.array[t+2]=a,this}setXYZW(t,r,i,a,o){return t*=this.itemSize,this.normalized&&(r=three_core_normalize(r,this.array),i=three_core_normalize(i,this.array),a=three_core_normalize(a,this.array),o=three_core_normalize(o,this.array)),this.array[t+0]=r,this.array[t+1]=i,this.array[t+2]=a,this.array[t+3]=o,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==_s&&(t.usage=this.usage),t}}class Uint16BufferAttribute extends BufferAttribute{constructor(t,r,i){super(new Uint16Array(t),r,i)}}class Uint32BufferAttribute extends BufferAttribute{constructor(t,r,i){super(new Uint32Array(t),r,i)}}class Float32BufferAttribute extends BufferAttribute{constructor(t,r,i){super(new Float32Array(t),r,i)}}let Zo=0;const Qo=new Matrix4,$o=new Object3D,tl=new Vector3,el=new Box3,nl=new Box3,rl=new Vector3;class BufferGeometry extends EventDispatcher{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Zo++}),this.uuid=generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(arrayNeedsUint32(t)?Uint32BufferAttribute:Uint16BufferAttribute)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,r){return this.attributes[t]=r,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,r,i=0){this.groups.push({start:t,count:r,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,r){this.drawRange.start=t,this.drawRange.count=r}applyMatrix4(t){const r=this.attributes.position;void 0!==r&&(r.applyMatrix4(t),r.needsUpdate=!0);const i=this.attributes.normal;if(void 0!==i){const r=(new Matrix3).getNormalMatrix(t);i.applyNormalMatrix(r),i.needsUpdate=!0}const a=this.attributes.tangent;return void 0!==a&&(a.transformDirection(t),a.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return Qo.makeRotationFromQuaternion(t),this.applyMatrix4(Qo),this}rotateX(t){return Qo.makeRotationX(t),this.applyMatrix4(Qo),this}rotateY(t){return Qo.makeRotationY(t),this.applyMatrix4(Qo),this}rotateZ(t){return Qo.makeRotationZ(t),this.applyMatrix4(Qo),this}translate(t,r,i){return Qo.makeTranslation(t,r,i),this.applyMatrix4(Qo),this}scale(t,r,i){return Qo.makeScale(t,r,i),this.applyMatrix4(Qo),this}lookAt(t){return $o.lookAt(t),$o.updateMatrix(),this.applyMatrix4($o.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(tl).negate(),this.translate(tl.x,tl.y,tl.z),this}setFromPoints(t){const r=this.getAttribute("position");if(void 0===r){const r=[];for(let i=0,a=t.length;i<a;i++){const a=t[i];r.push(a.x,a.y,a.z||0)}this.setAttribute("position",new Float32BufferAttribute(r,3))}else{const i=Math.min(t.length,r.count);for(let a=0;a<i;a++){const i=t[a];r.setXYZ(a,i.x,i.y,i.z||0)}t.length>r.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),r.needsUpdate=!0}return this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Box3);const t=this.attributes.position,r=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),void this.boundingBox.set(new Vector3(-1/0,-1/0,-1/0),new Vector3(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),r)for(let t=0,i=r.length;t<i;t++){const i=r[t];el.setFromBufferAttribute(i),this.morphTargetsRelative?(rl.addVectors(this.boundingBox.min,el.min),this.boundingBox.expandByPoint(rl),rl.addVectors(this.boundingBox.max,el.max),this.boundingBox.expandByPoint(rl)):(this.boundingBox.expandByPoint(el.min),this.boundingBox.expandByPoint(el.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Sphere);const t=this.attributes.position,r=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),void this.boundingSphere.set(new Vector3,1/0);if(t){const i=this.boundingSphere.center;if(el.setFromBufferAttribute(t),r)for(let t=0,i=r.length;t<i;t++){const i=r[t];nl.setFromBufferAttribute(i),this.morphTargetsRelative?(rl.addVectors(el.min,nl.min),el.expandByPoint(rl),rl.addVectors(el.max,nl.max),el.expandByPoint(rl)):(el.expandByPoint(nl.min),el.expandByPoint(nl.max))}el.getCenter(i);let a=0;for(let r=0,o=t.count;r<o;r++)rl.fromBufferAttribute(t,r),a=Math.max(a,i.distanceToSquared(rl));if(r)for(let o=0,l=r.length;o<l;o++){const l=r[o],c=this.morphTargetsRelative;for(let r=0,o=l.count;r<o;r++)rl.fromBufferAttribute(l,r),c&&(tl.fromBufferAttribute(t,r),rl.add(tl)),a=Math.max(a,i.distanceToSquared(rl))}this.boundingSphere.radius=Math.sqrt(a),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,r=this.attributes;if(null===t||void 0===r.position||void 0===r.normal||void 0===r.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const i=r.position,a=r.normal,o=r.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new BufferAttribute(new Float32Array(4*i.count),4));const l=this.getAttribute("tangent"),c=[],h=[];for(let t=0;t<i.count;t++)c[t]=new Vector3,h[t]=new Vector3;const u=new Vector3,d=new Vector3,p=new Vector3,m=new Vector2,g=new Vector2,_=new Vector2,x=new Vector3,y=new Vector3;function handleTriangle(t,r,a){u.fromBufferAttribute(i,t),d.fromBufferAttribute(i,r),p.fromBufferAttribute(i,a),m.fromBufferAttribute(o,t),g.fromBufferAttribute(o,r),_.fromBufferAttribute(o,a),d.sub(u),p.sub(u),g.sub(m),_.sub(m);const l=1/(g.x*_.y-_.x*g.y);isFinite(l)&&(x.copy(d).multiplyScalar(_.y).addScaledVector(p,-g.y).multiplyScalar(l),y.copy(p).multiplyScalar(g.x).addScaledVector(d,-_.x).multiplyScalar(l),c[t].add(x),c[r].add(x),c[a].add(x),h[t].add(y),h[r].add(y),h[a].add(y))}let M=this.groups;0===M.length&&(M=[{start:0,count:t.count}]);for(let r=0,i=M.length;r<i;++r){const i=M[r],a=i.start;for(let r=a,o=a+i.count;r<o;r+=3)handleTriangle(t.getX(r+0),t.getX(r+1),t.getX(r+2))}const S=new Vector3,b=new Vector3,T=new Vector3,E=new Vector3;function handleVertex(t){T.fromBufferAttribute(a,t),E.copy(T);const r=c[t];S.copy(r),S.sub(T.multiplyScalar(T.dot(r))).normalize(),b.crossVectors(E,r);const i=b.dot(h[t])<0?-1:1;l.setXYZW(t,S.x,S.y,S.z,i)}for(let r=0,i=M.length;r<i;++r){const i=M[r],a=i.start;for(let r=a,o=a+i.count;r<o;r+=3)handleVertex(t.getX(r+0)),handleVertex(t.getX(r+1)),handleVertex(t.getX(r+2))}}computeVertexNormals(){const t=this.index,r=this.getAttribute("position");if(void 0!==r){let i=this.getAttribute("normal");if(void 0===i)i=new BufferAttribute(new Float32Array(3*r.count),3),this.setAttribute("normal",i);else for(let t=0,r=i.count;t<r;t++)i.setXYZ(t,0,0,0);const a=new Vector3,o=new Vector3,l=new Vector3,c=new Vector3,h=new Vector3,u=new Vector3,d=new Vector3,p=new Vector3;if(t)for(let m=0,g=t.count;m<g;m+=3){const g=t.getX(m+0),_=t.getX(m+1),x=t.getX(m+2);a.fromBufferAttribute(r,g),o.fromBufferAttribute(r,_),l.fromBufferAttribute(r,x),d.subVectors(l,o),p.subVectors(a,o),d.cross(p),c.fromBufferAttribute(i,g),h.fromBufferAttribute(i,_),u.fromBufferAttribute(i,x),c.add(d),h.add(d),u.add(d),i.setXYZ(g,c.x,c.y,c.z),i.setXYZ(_,h.x,h.y,h.z),i.setXYZ(x,u.x,u.y,u.z)}else for(let t=0,c=r.count;t<c;t+=3)a.fromBufferAttribute(r,t+0),o.fromBufferAttribute(r,t+1),l.fromBufferAttribute(r,t+2),d.subVectors(l,o),p.subVectors(a,o),d.cross(p),i.setXYZ(t+0,d.x,d.y,d.z),i.setXYZ(t+1,d.x,d.y,d.z),i.setXYZ(t+2,d.x,d.y,d.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let r=0,i=t.count;r<i;r++)rl.fromBufferAttribute(t,r),rl.normalize(),t.setXYZ(r,rl.x,rl.y,rl.z)}toNonIndexed(){function convertBufferAttribute(t,r){const i=t.array,a=t.itemSize,o=t.normalized,l=new i.constructor(r.length*a);let c=0,h=0;for(let o=0,u=r.length;o<u;o++){c=t.isInterleavedBufferAttribute?r[o]*t.data.stride+t.offset:r[o]*a;for(let t=0;t<a;t++)l[h++]=i[c++]}return new BufferAttribute(l,a,o)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new BufferGeometry,r=this.index.array,i=this.attributes;for(const a in i){const o=convertBufferAttribute(i[a],r);t.setAttribute(a,o)}const a=this.morphAttributes;for(const i in a){const o=[],l=a[i];for(let t=0,i=l.length;t<i;t++){const i=convertBufferAttribute(l[t],r);o.push(i)}t.morphAttributes[i]=o}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let r=0,i=o.length;r<i;r++){const i=o[r];t.addGroup(i.start,i.count,i.materialIndex)}return t}toJSON(){const t={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const r=this.parameters;for(const i in r)void 0!==r[i]&&(t[i]=r[i]);return t}t.data={attributes:{}};const r=this.index;null!==r&&(t.data.index={type:r.array.constructor.name,array:Array.prototype.slice.call(r.array)});const i=this.attributes;for(const r in i){const a=i[r];t.data.attributes[r]=a.toJSON(t.data)}const a={};let o=!1;for(const r in this.morphAttributes){const i=this.morphAttributes[r],l=[];for(let r=0,a=i.length;r<a;r++){const a=i[r];l.push(a.toJSON(t.data))}l.length>0&&(a[r]=l,o=!0)}o&&(t.data.morphAttributes=a,t.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(t.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return null!==c&&(t.data.boundingSphere=c.toJSON()),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const r={};this.name=t.name;const i=t.index;null!==i&&this.setIndex(i.clone());const a=t.attributes;for(const t in a){const i=a[t];this.setAttribute(t,i.clone(r))}const o=t.morphAttributes;for(const t in o){const i=[],a=o[t];for(let t=0,o=a.length;t<o;t++)i.push(a[t].clone(r));this.morphAttributes[t]=i}this.morphTargetsRelative=t.morphTargetsRelative;const l=t.groups;for(let t=0,r=l.length;t<r;t++){const r=l[t];this.addGroup(r.start,r.count,r.materialIndex)}const c=t.boundingBox;null!==c&&(this.boundingBox=c.clone());const h=t.boundingSphere;return null!==h&&(this.boundingSphere=h.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const il=new Matrix4,al=new Ray,sl=new Sphere,ol=new Vector3,ll=new Vector3,cl=new Vector3,hl=new Vector3,ul=new Vector3,dl=new Vector3,pl=new Vector3,fl=new Vector3;class Mesh extends Object3D{constructor(t=new BufferGeometry,r=new MeshBasicMaterial){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=r,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(t,r){return super.copy(t,r),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,r=Object.keys(t);if(r.length>0){const i=t[r[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,r=i.length;t<r;t++){const r=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}}}getVertexPosition(t,r){const i=this.geometry,a=i.attributes.position,o=i.morphAttributes.position,l=i.morphTargetsRelative;r.fromBufferAttribute(a,t);const c=this.morphTargetInfluences;if(o&&c){dl.set(0,0,0);for(let i=0,a=o.length;i<a;i++){const a=c[i],h=o[i];0!==a&&(ul.fromBufferAttribute(h,t),l?dl.addScaledVector(ul,a):dl.addScaledVector(ul.sub(r),a))}r.add(dl)}return r}raycast(t,r){const i=this.geometry,a=this.material,o=this.matrixWorld;if(void 0!==a){if(null===i.boundingSphere&&i.computeBoundingSphere(),sl.copy(i.boundingSphere),sl.applyMatrix4(o),al.copy(t.ray).recast(t.near),!1===sl.containsPoint(al.origin)){if(null===al.intersectSphere(sl,ol))return;if(al.origin.distanceToSquared(ol)>(t.far-t.near)**2)return}il.copy(o).invert(),al.copy(t.ray).applyMatrix4(il),null!==i.boundingBox&&!1===al.intersectsBox(i.boundingBox)||this._computeIntersections(t,r,al)}}_computeIntersections(t,r,i){let a;const o=this.geometry,l=this.material,c=o.index,h=o.attributes.position,u=o.attributes.uv,d=o.attributes.uv1,p=o.attributes.normal,m=o.groups,g=o.drawRange;if(null!==c)if(Array.isArray(l))for(let o=0,h=m.length;o<h;o++){const h=m[o],_=l[h.materialIndex];for(let o=Math.max(h.start,g.start),l=Math.min(c.count,Math.min(h.start+h.count,g.start+g.count));o<l;o+=3){a=checkGeometryIntersection(this,_,t,i,u,d,p,c.getX(o),c.getX(o+1),c.getX(o+2)),a&&(a.faceIndex=Math.floor(o/3),a.face.materialIndex=h.materialIndex,r.push(a))}}else{for(let o=Math.max(0,g.start),h=Math.min(c.count,g.start+g.count);o<h;o+=3){a=checkGeometryIntersection(this,l,t,i,u,d,p,c.getX(o),c.getX(o+1),c.getX(o+2)),a&&(a.faceIndex=Math.floor(o/3),r.push(a))}}else if(void 0!==h)if(Array.isArray(l))for(let o=0,c=m.length;o<c;o++){const c=m[o],_=l[c.materialIndex];for(let o=Math.max(c.start,g.start),l=Math.min(h.count,Math.min(c.start+c.count,g.start+g.count));o<l;o+=3){a=checkGeometryIntersection(this,_,t,i,u,d,p,o,o+1,o+2),a&&(a.faceIndex=Math.floor(o/3),a.face.materialIndex=c.materialIndex,r.push(a))}}else{for(let o=Math.max(0,g.start),c=Math.min(h.count,g.start+g.count);o<c;o+=3){a=checkGeometryIntersection(this,l,t,i,u,d,p,o,o+1,o+2),a&&(a.faceIndex=Math.floor(o/3),r.push(a))}}}}function checkGeometryIntersection(t,r,i,a,o,l,c,h,u,d){t.getVertexPosition(h,ll),t.getVertexPosition(u,cl),t.getVertexPosition(d,hl);const p=function checkIntersection$1(t,r,i,a,o,l,c,h){let u;if(u=1===r.side?a.intersectTriangle(c,l,o,!0,h):a.intersectTriangle(o,l,c,0===r.side,h),null===u)return null;fl.copy(h),fl.applyMatrix4(t.matrixWorld);const d=i.ray.origin.distanceTo(fl);return d<i.near||d>i.far?null:{distance:d,point:fl.clone(),object:t}}(t,r,i,a,ll,cl,hl,pl);if(p){const t=new Vector3;Triangle.getBarycoord(pl,ll,cl,hl,t),o&&(p.uv=Triangle.getInterpolatedAttribute(o,h,u,d,t,new Vector2)),l&&(p.uv1=Triangle.getInterpolatedAttribute(l,h,u,d,t,new Vector2)),c&&(p.normal=Triangle.getInterpolatedAttribute(c,h,u,d,t,new Vector3),p.normal.dot(a.direction)>0&&p.normal.multiplyScalar(-1));const r={a:h,b:u,c:d,normal:new Vector3,materialIndex:0};Triangle.getNormal(ll,cl,hl,r.normal),p.face=r,p.barycoord=t}return p}class BoxGeometry extends BufferGeometry{constructor(t=1,r=1,i=1,a=1,o=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:r,depth:i,widthSegments:a,heightSegments:o,depthSegments:l};const c=this;a=Math.floor(a),o=Math.floor(o),l=Math.floor(l);const h=[],u=[],d=[],p=[];let m=0,g=0;function buildPlane(t,r,i,a,o,l,_,x,y,M,S){const b=l/y,T=_/M,E=l/2,w=_/2,C=x/2,A=y+1,R=M+1;let P=0,L=0;const U=new Vector3;for(let l=0;l<R;l++){const c=l*T-w;for(let h=0;h<A;h++){const m=h*b-E;U[t]=m*a,U[r]=c*o,U[i]=C,u.push(U.x,U.y,U.z),U[t]=0,U[r]=0,U[i]=x>0?1:-1,d.push(U.x,U.y,U.z),p.push(h/y),p.push(1-l/M),P+=1}}for(let t=0;t<M;t++)for(let r=0;r<y;r++){const i=m+r+A*t,a=m+r+A*(t+1),o=m+(r+1)+A*(t+1),l=m+(r+1)+A*t;h.push(i,a,l),h.push(a,o,l),L+=6}c.addGroup(g,L,S),g+=L,m+=P}buildPlane("z","y","x",-1,-1,i,r,t,l,o,0),buildPlane("z","y","x",1,-1,i,r,-t,l,o,1),buildPlane("x","z","y",1,1,t,i,r,a,l,2),buildPlane("x","z","y",1,-1,t,i,-r,a,l,3),buildPlane("x","y","z",1,-1,t,r,i,a,o,4),buildPlane("x","y","z",-1,-1,t,r,-i,a,o,5),this.setIndex(h),this.setAttribute("position",new Float32BufferAttribute(u,3)),this.setAttribute("normal",new Float32BufferAttribute(d,3)),this.setAttribute("uv",new Float32BufferAttribute(p,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new BoxGeometry(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function cloneUniforms(t){const r={};for(const i in t){r[i]={};for(const a in t[i]){const o=t[i][a];o&&(o.isColor||o.isMatrix3||o.isMatrix4||o.isVector2||o.isVector3||o.isVector4||o.isTexture||o.isQuaternion)?o.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),r[i][a]=null):r[i][a]=o.clone():Array.isArray(o)?r[i][a]=o.slice():r[i][a]=o}}return r}function mergeUniforms(t){const r={};for(let i=0;i<t.length;i++){const a=cloneUniforms(t[i]);for(const t in a)r[t]=a[t]}return r}function getUnlitUniformColorSpace(t){const r=t.getRenderTarget();return null===r?t.outputColorSpace:!0===r.isXRRenderTarget?r.texture.colorSpace:Ps.workingColorSpace}const ml={clone:cloneUniforms,merge:mergeUniforms};class ShaderMaterial extends Material{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=cloneUniforms(t.uniforms),this.uniformsGroups=function cloneUniformsGroups(t){const r=[];for(let i=0;i<t.length;i++)r.push(t[i].clone());return r}(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const r=super.toJSON(t);r.glslVersion=this.glslVersion,r.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?r.uniforms[i]={type:"t",value:a.toJSON(t).uuid}:a&&a.isColor?r.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?r.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?r.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?r.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?r.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?r.uniforms[i]={type:"m4",value:a.toArray()}:r.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(r.defines=this.defines),r.vertexShader=this.vertexShader,r.fragmentShader=this.fragmentShader,r.lights=this.lights,r.clipping=this.clipping;const i={};for(const t in this.extensions)!0===this.extensions[t]&&(i[t]=!0);return Object.keys(i).length>0&&(r.extensions=i),r}}class Camera extends Object3D{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Matrix4,this.projectionMatrix=new Matrix4,this.projectionMatrixInverse=new Matrix4,this.coordinateSystem=xs}copy(t,r){return super.copy(t,r),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,r){super.updateWorldMatrix(t,r),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}const gl=new Vector3,_l=new Vector2,vl=new Vector2;class PerspectiveCamera extends Camera{constructor(t=50,r=1,i=.1,a=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=i,this.far=a,this.focus=10,this.aspect=r,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,r){return super.copy(t,r),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const r=.5*this.getFilmHeight()/t;this.fov=2*bs*Math.atan(r),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*Ss*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*bs*Math.atan(Math.tan(.5*Ss*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,r,i){gl.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),r.set(gl.x,gl.y).multiplyScalar(-t/gl.z),gl.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(gl.x,gl.y).multiplyScalar(-t/gl.z)}getViewSize(t,r){return this.getViewBounds(t,_l,vl),r.subVectors(vl,_l)}setViewOffset(t,r,i,a,o,l){this.aspect=t/r,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=r,this.view.offsetX=i,this.view.offsetY=a,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let r=t*Math.tan(.5*Ss*this.fov)/this.zoom,i=2*r,a=this.aspect*i,o=-.5*a;const l=this.view;if(null!==this.view&&this.view.enabled){const t=l.fullWidth,c=l.fullHeight;o+=l.offsetX*a/t,r-=l.offsetY*i/c,a*=l.width/t,i*=l.height/c}const c=this.filmOffset;0!==c&&(o+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+a,r,r-i,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const r=super.toJSON(t);return r.object.fov=this.fov,r.object.zoom=this.zoom,r.object.near=this.near,r.object.far=this.far,r.object.focus=this.focus,r.object.aspect=this.aspect,null!==this.view&&(r.object.view=Object.assign({},this.view)),r.object.filmGauge=this.filmGauge,r.object.filmOffset=this.filmOffset,r}}const xl=-90;class CubeCamera extends Object3D{constructor(t,r,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const a=new PerspectiveCamera(xl,1,t,r);a.layers=this.layers,this.add(a);const o=new PerspectiveCamera(xl,1,t,r);o.layers=this.layers,this.add(o);const l=new PerspectiveCamera(xl,1,t,r);l.layers=this.layers,this.add(l);const c=new PerspectiveCamera(xl,1,t,r);c.layers=this.layers,this.add(c);const h=new PerspectiveCamera(xl,1,t,r);h.layers=this.layers,this.add(h);const u=new PerspectiveCamera(xl,1,t,r);u.layers=this.layers,this.add(u)}updateCoordinateSystem(){const t=this.coordinateSystem,r=this.children.concat(),[i,a,o,l,c,h]=r;for(const t of r)this.remove(t);if(t===xs)i.up.set(0,1,0),i.lookAt(1,0,0),a.up.set(0,1,0),a.lookAt(-1,0,0),o.up.set(0,0,-1),o.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),h.up.set(0,1,0),h.lookAt(0,0,-1);else{if(t!==ys)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);i.up.set(0,-1,0),i.lookAt(-1,0,0),a.up.set(0,-1,0),a.lookAt(1,0,0),o.up.set(0,0,1),o.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),h.up.set(0,-1,0),h.lookAt(0,0,-1)}for(const t of r)this.add(t),t.updateMatrixWorld()}update(t,r){null===this.parent&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:a}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[o,l,c,h,u,d]=this.children,p=t.getRenderTarget(),m=t.getActiveCubeFace(),g=t.getActiveMipmapLevel(),_=t.xr.enabled;t.xr.enabled=!1;const x=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,t.setRenderTarget(i,0,a),t.render(r,o),t.setRenderTarget(i,1,a),t.render(r,l),t.setRenderTarget(i,2,a),t.render(r,c),t.setRenderTarget(i,3,a),t.render(r,h),t.setRenderTarget(i,4,a),t.render(r,u),i.texture.generateMipmaps=x,t.setRenderTarget(i,5,a),t.render(r,d),t.setRenderTarget(p,m,g),t.xr.enabled=_,i.texture.needsPMREMUpdate=!0}}class CubeTexture extends Texture{constructor(t=[],r=301,i,a,o,l,c,h,u,d){super(t,r,i,a,o,l,c,h,u,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class WebGLCubeRenderTarget extends WebGLRenderTarget{constructor(t=1,r={}){super(t,t,r),this.isWebGLCubeRenderTarget=!0;const i={width:t,height:t,depth:1},a=[i,i,i,i,i,i];this.texture=new CubeTexture(a),this._setTextureOptions(r),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(t,r){this.texture.type=r.type,this.texture.colorSpace=r.colorSpace,this.texture.generateMipmaps=r.generateMipmaps,this.texture.minFilter=r.minFilter,this.texture.magFilter=r.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},a=new BoxGeometry(5,5,5),o=new ShaderMaterial({name:"CubemapFromEquirect",uniforms:cloneUniforms(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:1,blending:0});o.uniforms.tEquirect.value=r;const l=new Mesh(a,o),c=r.minFilter;r.minFilter===ta&&(r.minFilter=Qi);return new CubeCamera(1,10,this).update(t,l),r.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(t,r=!0,i=!0,a=!0){const o=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(r,i,a);t.setRenderTarget(o)}}class Group extends Object3D{constructor(){super(),this.isGroup=!0,this.type="Group"}}const yl={type:"move"};class WebXRController{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Group,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Group,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Vector3,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Vector3),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Group,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Vector3,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Vector3),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const r=this._hand;if(r)for(const i of t.hand.values())this._getHandJoint(r,i)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,r,i){let a=null,o=null,l=null;const c=this._targetRay,h=this._grip,u=this._hand;if(t&&"visible-blurred"!==r.session.visibilityState){if(u&&t.hand){l=!0;for(const a of t.hand.values()){const t=r.getJointPose(a,i),o=this._getHandJoint(u,a);null!==t&&(o.matrix.fromArray(t.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,o.jointRadius=t.radius),o.visible=null!==t}const a=u.joints["index-finger-tip"],o=u.joints["thumb-tip"],c=a.position.distanceTo(o.position),h=.02,d=.005;u.inputState.pinching&&c>h+d?(u.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!u.inputState.pinching&&c<=h-d&&(u.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==h&&t.gripSpace&&(o=r.getPose(t.gripSpace,i),null!==o&&(h.matrix.fromArray(o.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.matrixWorldNeedsUpdate=!0,o.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(o.linearVelocity)):h.hasLinearVelocity=!1,o.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(o.angularVelocity)):h.hasAngularVelocity=!1));null!==c&&(a=r.getPose(t.targetRaySpace,i),null===a&&null!==o&&(a=o),null!==a&&(c.matrix.fromArray(a.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,a.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(a.linearVelocity)):c.hasLinearVelocity=!1,a.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(a.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(yl)))}return null!==c&&(c.visible=null!==a),null!==h&&(h.visible=null!==o),null!==u&&(u.visible=null!==l),this}_getHandJoint(t,r){if(void 0===t.joints[r.jointName]){const i=new Group;i.matrixAutoUpdate=!1,i.visible=!1,t.joints[r.jointName]=i,t.add(i)}return t.joints[r.jointName]}}class Scene extends Object3D{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Euler,this.environmentIntensity=1,this.environmentRotation=new Euler,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,r){return super.copy(t,r),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const r=super.toJSON(t);return null!==this.fog&&(r.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(r.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(r.object.backgroundIntensity=this.backgroundIntensity),r.object.backgroundRotation=this.backgroundRotation.toArray(),1!==this.environmentIntensity&&(r.object.environmentIntensity=this.environmentIntensity),r.object.environmentRotation=this.environmentRotation.toArray(),r}}const Ml=new Vector3,Sl=new Vector3,bl=new Matrix3;class Plane{constructor(t=new Vector3(1,0,0),r=0){this.isPlane=!0,this.normal=t,this.constant=r}set(t,r){return this.normal.copy(t),this.constant=r,this}setComponents(t,r,i,a){return this.normal.set(t,r,i),this.constant=a,this}setFromNormalAndCoplanarPoint(t,r){return this.normal.copy(t),this.constant=-r.dot(this.normal),this}setFromCoplanarPoints(t,r,i){const a=Ml.subVectors(i,r).cross(Sl.subVectors(t,r)).normalize();return this.setFromNormalAndCoplanarPoint(a,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,r){return r.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,r){const i=t.delta(Ml),a=this.normal.dot(i);if(0===a)return 0===this.distanceToPoint(t.start)?r.copy(t.start):null;const o=-(t.start.dot(this.normal)+this.constant)/a;return o<0||o>1?null:r.copy(t.start).addScaledVector(i,o)}intersectsLine(t){const r=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return r<0&&i>0||i<0&&r>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,r){const i=r||bl.getNormalMatrix(t),a=this.coplanarPoint(Ml).applyMatrix4(t),o=this.normal.applyMatrix3(i).normalize();return this.constant=-a.dot(o),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const Tl=new Sphere,El=new Vector3;class Frustum{constructor(t=new Plane,r=new Plane,i=new Plane,a=new Plane,o=new Plane,l=new Plane){this.planes=[t,r,i,a,o,l]}set(t,r,i,a,o,l){const c=this.planes;return c[0].copy(t),c[1].copy(r),c[2].copy(i),c[3].copy(a),c[4].copy(o),c[5].copy(l),this}copy(t){const r=this.planes;for(let i=0;i<6;i++)r[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t,r=2e3){const i=this.planes,a=t.elements,o=a[0],l=a[1],c=a[2],h=a[3],u=a[4],d=a[5],p=a[6],m=a[7],g=a[8],_=a[9],x=a[10],y=a[11],M=a[12],S=a[13],b=a[14],T=a[15];if(i[0].setComponents(h-o,m-u,y-g,T-M).normalize(),i[1].setComponents(h+o,m+u,y+g,T+M).normalize(),i[2].setComponents(h+l,m+d,y+_,T+S).normalize(),i[3].setComponents(h-l,m-d,y-_,T-S).normalize(),i[4].setComponents(h-c,m-p,y-x,T-b).normalize(),r===xs)i[5].setComponents(h+c,m+p,y+x,T+b).normalize();else{if(r!==ys)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+r);i[5].setComponents(c,p,x,b).normalize()}return this}intersectsObject(t){if(void 0!==t.boundingSphere)null===t.boundingSphere&&t.computeBoundingSphere(),Tl.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const r=t.geometry;null===r.boundingSphere&&r.computeBoundingSphere(),Tl.copy(r.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Tl)}intersectsSprite(t){return Tl.center.set(0,0,0),Tl.radius=.7071067811865476,Tl.applyMatrix4(t.matrixWorld),this.intersectsSphere(Tl)}intersectsSphere(t){const r=this.planes,i=t.center,a=-t.radius;for(let t=0;t<6;t++){if(r[t].distanceToPoint(i)<a)return!1}return!0}intersectsBox(t){const r=this.planes;for(let i=0;i<6;i++){const a=r[i];if(El.x=a.normal.x>0?t.max.x:t.min.x,El.y=a.normal.y>0?t.max.y:t.min.y,El.z=a.normal.z>0?t.max.z:t.min.z,a.distanceToPoint(El)<0)return!1}return!0}containsPoint(t){const r=this.planes;for(let i=0;i<6;i++)if(r[i].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}class LineBasicMaterial extends Material{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Color(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const wl=new Vector3,Cl=new Vector3,Al=new Matrix4,Rl=new Ray,Pl=new Sphere,Ll=new Vector3,Ul=new Vector3;class Line extends Object3D{constructor(t=new BufferGeometry,r=new LineBasicMaterial){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=r,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,r){return super.copy(t,r),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(null===t.index){const r=t.attributes.position,i=[0];for(let t=1,a=r.count;t<a;t++)wl.fromBufferAttribute(r,t-1),Cl.fromBufferAttribute(r,t),i[t]=i[t-1],i[t]+=wl.distanceTo(Cl);t.setAttribute("lineDistance",new Float32BufferAttribute(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,r){const i=this.geometry,a=this.matrixWorld,o=t.params.Line.threshold,l=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),Pl.copy(i.boundingSphere),Pl.applyMatrix4(a),Pl.radius+=o,!1===t.ray.intersectsSphere(Pl))return;Al.copy(a).invert(),Rl.copy(t.ray).applyMatrix4(Al);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,u=this.isLineSegments?2:1,d=i.index,p=i.attributes.position;if(null!==d){const i=Math.max(0,l.start),a=Math.min(d.count,l.start+l.count);for(let o=i,l=a-1;o<l;o+=u){const i=d.getX(o),a=d.getX(o+1),l=checkIntersection(this,t,Rl,h,i,a,o);l&&r.push(l)}if(this.isLineLoop){const o=d.getX(a-1),l=d.getX(i),c=checkIntersection(this,t,Rl,h,o,l,a-1);c&&r.push(c)}}else{const i=Math.max(0,l.start),a=Math.min(p.count,l.start+l.count);for(let o=i,l=a-1;o<l;o+=u){const i=checkIntersection(this,t,Rl,h,o,o+1,o);i&&r.push(i)}if(this.isLineLoop){const o=checkIntersection(this,t,Rl,h,a-1,i,a-1);o&&r.push(o)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,r=Object.keys(t);if(r.length>0){const i=t[r[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,r=i.length;t<r;t++){const r=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}}}}function checkIntersection(t,r,i,a,o,l,c){const h=t.geometry.attributes.position;wl.fromBufferAttribute(h,o),Cl.fromBufferAttribute(h,l);if(i.distanceSqToSegment(wl,Cl,Ll,Ul)>a)return;Ll.applyMatrix4(t.matrixWorld);const u=r.ray.origin.distanceTo(Ll);return u<r.near||u>r.far?void 0:{distance:u,point:Ul.clone().applyMatrix4(t.matrixWorld),index:c,face:null,faceIndex:null,barycoord:null,object:t}}const Dl=new Vector3,Il=new Vector3;class LineSegments extends Line{constructor(t,r){super(t,r),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(null===t.index){const r=t.attributes.position,i=[];for(let t=0,a=r.count;t<a;t+=2)Dl.fromBufferAttribute(r,t),Il.fromBufferAttribute(r,t+1),i[t]=0===t?0:i[t-1],i[t+1]=i[t]+Dl.distanceTo(Il);t.setAttribute("lineDistance",new Float32BufferAttribute(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class DepthTexture extends Texture{constructor(t,r,i=1014,a,o,l,c=1003,h=1003,u,d=1026,p=1){if(d!==fa&&d!==ma)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super({width:t,height:r,depth:p},a,o,l,c,h,d,i,u),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.source=new Source(Object.assign({},t.image)),this.compareFunction=t.compareFunction,this}toJSON(t){const r=super.toJSON(t);return null!==this.compareFunction&&(r.compareFunction=this.compareFunction),r}}class CylinderGeometry extends BufferGeometry{constructor(t=1,r=1,i=1,a=32,o=1,l=!1,c=0,h=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:r,height:i,radialSegments:a,heightSegments:o,openEnded:l,thetaStart:c,thetaLength:h};const u=this;a=Math.floor(a),o=Math.floor(o);const d=[],p=[],m=[],g=[];let _=0;const x=[],y=i/2;let M=0;function generateCap(i){const o=_,l=new Vector2,x=new Vector3;let S=0;const b=!0===i?t:r,T=!0===i?1:-1;for(let t=1;t<=a;t++)p.push(0,y*T,0),m.push(0,T,0),g.push(.5,.5),_++;const E=_;for(let t=0;t<=a;t++){const r=t/a*h+c,i=Math.cos(r),o=Math.sin(r);x.x=b*o,x.y=y*T,x.z=b*i,p.push(x.x,x.y,x.z),m.push(0,T,0),l.x=.5*i+.5,l.y=.5*o*T+.5,g.push(l.x,l.y),_++}for(let t=0;t<a;t++){const r=o+t,a=E+t;!0===i?d.push(a,a+1,r):d.push(a+1,a,r),S+=3}u.addGroup(M,S,!0===i?1:2),M+=S}!function generateTorso(){const l=new Vector3,S=new Vector3;let b=0;const T=(r-t)/i;for(let u=0;u<=o;u++){const d=[],M=u/o,b=M*(r-t)+t;for(let t=0;t<=a;t++){const r=t/a,o=r*h+c,u=Math.sin(o),x=Math.cos(o);S.x=b*u,S.y=-M*i+y,S.z=b*x,p.push(S.x,S.y,S.z),l.set(u,T,x).normalize(),m.push(l.x,l.y,l.z),g.push(r,1-M),d.push(_++)}x.push(d)}for(let i=0;i<a;i++)for(let a=0;a<o;a++){const l=x[a][i],c=x[a+1][i],h=x[a+1][i+1],u=x[a][i+1];(t>0||0!==a)&&(d.push(l,c,u),b+=3),(r>0||a!==o-1)&&(d.push(c,h,u),b+=3)}u.addGroup(M,b,0),M+=b}(),!1===l&&(t>0&&generateCap(!0),r>0&&generateCap(!1)),this.setIndex(d),this.setAttribute("position",new Float32BufferAttribute(p,3)),this.setAttribute("normal",new Float32BufferAttribute(m,3)),this.setAttribute("uv",new Float32BufferAttribute(g,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new CylinderGeometry(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}const Nl=new Vector3,Ol=new Vector3,Fl=new Vector3,zl=new Triangle;class EdgesGeometry extends BufferGeometry{constructor(t=null,r=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:r},null!==t){const i=4,a=Math.pow(10,i),o=Math.cos(Ss*r),l=t.getIndex(),c=t.getAttribute("position"),h=l?l.count:c.count,u=[0,0,0],d=["a","b","c"],p=new Array(3),m={},g=[];for(let t=0;t<h;t+=3){l?(u[0]=l.getX(t),u[1]=l.getX(t+1),u[2]=l.getX(t+2)):(u[0]=t,u[1]=t+1,u[2]=t+2);const{a:r,b:i,c:h}=zl;if(r.fromBufferAttribute(c,u[0]),i.fromBufferAttribute(c,u[1]),h.fromBufferAttribute(c,u[2]),zl.getNormal(Fl),p[0]=`${Math.round(r.x*a)},${Math.round(r.y*a)},${Math.round(r.z*a)}`,p[1]=`${Math.round(i.x*a)},${Math.round(i.y*a)},${Math.round(i.z*a)}`,p[2]=`${Math.round(h.x*a)},${Math.round(h.y*a)},${Math.round(h.z*a)}`,p[0]!==p[1]&&p[1]!==p[2]&&p[2]!==p[0])for(let t=0;t<3;t++){const r=(t+1)%3,i=p[t],a=p[r],l=zl[d[t]],c=zl[d[r]],h=`${i}_${a}`,_=`${a}_${i}`;_ in m&&m[_]?(Fl.dot(m[_].normal)<=o&&(g.push(l.x,l.y,l.z),g.push(c.x,c.y,c.z)),m[_]=null):h in m||(m[h]={index0:u[t],index1:u[r],normal:Fl.clone()})}}for(const t in m)if(m[t]){const{index0:r,index1:i}=m[t];Nl.fromBufferAttribute(c,r),Ol.fromBufferAttribute(c,i),g.push(Nl.x,Nl.y,Nl.z),g.push(Ol.x,Ol.y,Ol.z)}this.setAttribute("position",new Float32BufferAttribute(g,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class Curve{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(t,r){const i=this.getUtoTmapping(t);return this.getPoint(i,r)}getPoints(t=5){const r=[];for(let i=0;i<=t;i++)r.push(this.getPoint(i/t));return r}getSpacedPoints(t=5){const r=[];for(let i=0;i<=t;i++)r.push(this.getPointAt(i/t));return r}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const r=[];let i,a=this.getPoint(0),o=0;r.push(0);for(let l=1;l<=t;l++)i=this.getPoint(l/t),o+=i.distanceTo(a),r.push(o),a=i;return this.cacheArcLengths=r,r}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,r=null){const i=this.getLengths();let a=0;const o=i.length;let l;l=r||t*i[o-1];let c,h=0,u=o-1;for(;h<=u;)if(a=Math.floor(h+(u-h)/2),c=i[a]-l,c<0)h=a+1;else{if(!(c>0)){u=a;break}u=a-1}if(a=u,i[a]===l)return a/(o-1);const d=i[a];return(a+(l-d)/(i[a+1]-d))/(o-1)}getTangent(t,r){const i=1e-4;let a=t-i,o=t+i;a<0&&(a=0),o>1&&(o=1);const l=this.getPoint(a),c=this.getPoint(o),h=r||(l.isVector2?new Vector2:new Vector3);return h.copy(c).sub(l).normalize(),h}getTangentAt(t,r){const i=this.getUtoTmapping(t);return this.getTangent(i,r)}computeFrenetFrames(t,r=!1){const i=new Vector3,a=[],o=[],l=[],c=new Vector3,h=new Matrix4;for(let r=0;r<=t;r++){const i=r/t;a[r]=this.getTangentAt(i,new Vector3)}o[0]=new Vector3,l[0]=new Vector3;let u=Number.MAX_VALUE;const d=Math.abs(a[0].x),p=Math.abs(a[0].y),m=Math.abs(a[0].z);d<=u&&(u=d,i.set(1,0,0)),p<=u&&(u=p,i.set(0,1,0)),m<=u&&i.set(0,0,1),c.crossVectors(a[0],i).normalize(),o[0].crossVectors(a[0],c),l[0].crossVectors(a[0],o[0]);for(let r=1;r<=t;r++){if(o[r]=o[r-1].clone(),l[r]=l[r-1].clone(),c.crossVectors(a[r-1],a[r]),c.length()>Number.EPSILON){c.normalize();const t=Math.acos(three_core_clamp(a[r-1].dot(a[r]),-1,1));o[r].applyMatrix4(h.makeRotationAxis(c,t))}l[r].crossVectors(a[r],o[r])}if(!0===r){let r=Math.acos(three_core_clamp(o[0].dot(o[t]),-1,1));r/=t,a[0].dot(c.crossVectors(o[0],o[t]))>0&&(r=-r);for(let i=1;i<=t;i++)o[i].applyMatrix4(h.makeRotationAxis(a[i],r*i)),l[i].crossVectors(a[i],o[i])}return{tangents:a,normals:o,binormals:l}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class EllipseCurve extends Curve{constructor(t=0,r=0,i=1,a=1,o=0,l=2*Math.PI,c=!1,h=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=r,this.xRadius=i,this.yRadius=a,this.aStartAngle=o,this.aEndAngle=l,this.aClockwise=c,this.aRotation=h}getPoint(t,r=new Vector2){const i=r,a=2*Math.PI;let o=this.aEndAngle-this.aStartAngle;const l=Math.abs(o)<Number.EPSILON;for(;o<0;)o+=a;for(;o>a;)o-=a;o<Number.EPSILON&&(o=l?0:a),!0!==this.aClockwise||l||(o===a?o=-a:o-=a);const c=this.aStartAngle+t*o;let h=this.aX+this.xRadius*Math.cos(c),u=this.aY+this.yRadius*Math.sin(c);if(0!==this.aRotation){const t=Math.cos(this.aRotation),r=Math.sin(this.aRotation),i=h-this.aX,a=u-this.aY;h=i*t-a*r+this.aX,u=i*r+a*t+this.aY}return i.set(h,u)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}function CubicPoly(){let t=0,r=0,i=0,a=0;function init(o,l,c,h){t=o,r=c,i=-3*o+3*l-2*c-h,a=2*o-2*l+c+h}return{initCatmullRom:function(t,r,i,a,o){init(r,i,o*(i-t),o*(a-r))},initNonuniformCatmullRom:function(t,r,i,a,o,l,c){let h=(r-t)/o-(i-t)/(o+l)+(i-r)/l,u=(i-r)/l-(a-r)/(l+c)+(a-i)/c;h*=l,u*=l,init(r,i,h,u)},calc:function(o){const l=o*o;return t+r*o+i*l+a*(l*o)}}}const Bl=new Vector3,Vl=new CubicPoly,kl=new CubicPoly,Gl=new CubicPoly;function CatmullRom(t,r,i,a,o){const l=.5*(a-r),c=.5*(o-i),h=t*t;return(2*i-2*a+l+c)*(t*h)+(-3*i+3*a-2*l-c)*h+l*t+i}function QuadraticBezier(t,r,i,a){return function QuadraticBezierP0(t,r){const i=1-t;return i*i*r}(t,r)+function QuadraticBezierP1(t,r){return 2*(1-t)*t*r}(t,i)+function QuadraticBezierP2(t,r){return t*t*r}(t,a)}function CubicBezier(t,r,i,a,o){return function CubicBezierP0(t,r){const i=1-t;return i*i*i*r}(t,r)+function CubicBezierP1(t,r){const i=1-t;return 3*i*i*t*r}(t,i)+function CubicBezierP2(t,r){return 3*(1-t)*t*t*r}(t,a)+function CubicBezierP3(t,r){return t*t*t*r}(t,o)}class CubicBezierCurve extends Curve{constructor(t=new Vector2,r=new Vector2,i=new Vector2,a=new Vector2){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=r,this.v2=i,this.v3=a}getPoint(t,r=new Vector2){const i=r,a=this.v0,o=this.v1,l=this.v2,c=this.v3;return i.set(CubicBezier(t,a.x,o.x,l.x,c.x),CubicBezier(t,a.y,o.y,l.y,c.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class LineCurve extends Curve{constructor(t=new Vector2,r=new Vector2){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=r}getPoint(t,r=new Vector2){const i=r;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,r){return this.getPoint(t,r)}getTangent(t,r=new Vector2){return r.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,r){return this.getTangent(t,r)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class QuadraticBezierCurve extends Curve{constructor(t=new Vector2,r=new Vector2,i=new Vector2){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=r,this.v2=i}getPoint(t,r=new Vector2){const i=r,a=this.v0,o=this.v1,l=this.v2;return i.set(QuadraticBezier(t,a.x,o.x,l.x),QuadraticBezier(t,a.y,o.y,l.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class QuadraticBezierCurve3 extends Curve{constructor(t=new Vector3,r=new Vector3,i=new Vector3){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=r,this.v2=i}getPoint(t,r=new Vector3){const i=r,a=this.v0,o=this.v1,l=this.v2;return i.set(QuadraticBezier(t,a.x,o.x,l.x),QuadraticBezier(t,a.y,o.y,l.y),QuadraticBezier(t,a.z,o.z,l.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class SplineCurve extends Curve{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,r=new Vector2){const i=r,a=this.points,o=(a.length-1)*t,l=Math.floor(o),c=o-l,h=a[0===l?l:l-1],u=a[l],d=a[l>a.length-2?a.length-1:l+1],p=a[l>a.length-3?a.length-1:l+2];return i.set(CatmullRom(c,h.x,u.x,d.x,p.x),CatmullRom(c,h.y,u.y,d.y,p.y)),i}copy(t){super.copy(t),this.points=[];for(let r=0,i=t.points.length;r<i;r++){const i=t.points[r];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let r=0,i=this.points.length;r<i;r++){const i=this.points[r];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let r=0,i=t.points.length;r<i;r++){const i=t.points[r];this.points.push((new Vector2).fromArray(i))}return this}}var Hl=Object.freeze({__proto__:null,ArcCurve:class ArcCurve extends EllipseCurve{constructor(t,r,i,a,o,l){super(t,r,i,i,a,o,l),this.isArcCurve=!0,this.type="ArcCurve"}},CatmullRomCurve3:class CatmullRomCurve3 extends Curve{constructor(t=[],r=!1,i="centripetal",a=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=r,this.curveType=i,this.tension=a}getPoint(t,r=new Vector3){const i=r,a=this.points,o=a.length,l=(o-(this.closed?0:1))*t;let c,h,u=Math.floor(l),d=l-u;this.closed?u+=u>0?0:(Math.floor(Math.abs(u)/o)+1)*o:0===d&&u===o-1&&(u=o-2,d=1),this.closed||u>0?c=a[(u-1)%o]:(Bl.subVectors(a[0],a[1]).add(a[0]),c=Bl);const p=a[u%o],m=a[(u+1)%o];if(this.closed||u+2<o?h=a[(u+2)%o]:(Bl.subVectors(a[o-1],a[o-2]).add(a[o-1]),h=Bl),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let r=Math.pow(c.distanceToSquared(p),t),i=Math.pow(p.distanceToSquared(m),t),a=Math.pow(m.distanceToSquared(h),t);i<1e-4&&(i=1),r<1e-4&&(r=i),a<1e-4&&(a=i),Vl.initNonuniformCatmullRom(c.x,p.x,m.x,h.x,r,i,a),kl.initNonuniformCatmullRom(c.y,p.y,m.y,h.y,r,i,a),Gl.initNonuniformCatmullRom(c.z,p.z,m.z,h.z,r,i,a)}else"catmullrom"===this.curveType&&(Vl.initCatmullRom(c.x,p.x,m.x,h.x,this.tension),kl.initCatmullRom(c.y,p.y,m.y,h.y,this.tension),Gl.initCatmullRom(c.z,p.z,m.z,h.z,this.tension));return i.set(Vl.calc(d),kl.calc(d),Gl.calc(d)),i}copy(t){super.copy(t),this.points=[];for(let r=0,i=t.points.length;r<i;r++){const i=t.points[r];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let r=0,i=this.points.length;r<i;r++){const i=this.points[r];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let r=0,i=t.points.length;r<i;r++){const i=t.points[r];this.points.push((new Vector3).fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}},CubicBezierCurve,CubicBezierCurve3:class CubicBezierCurve3 extends Curve{constructor(t=new Vector3,r=new Vector3,i=new Vector3,a=new Vector3){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=r,this.v2=i,this.v3=a}getPoint(t,r=new Vector3){const i=r,a=this.v0,o=this.v1,l=this.v2,c=this.v3;return i.set(CubicBezier(t,a.x,o.x,l.x,c.x),CubicBezier(t,a.y,o.y,l.y,c.y),CubicBezier(t,a.z,o.z,l.z,c.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}},EllipseCurve,LineCurve,LineCurve3:class LineCurve3 extends Curve{constructor(t=new Vector3,r=new Vector3){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=r}getPoint(t,r=new Vector3){const i=r;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,r){return this.getPoint(t,r)}getTangent(t,r=new Vector3){return r.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,r){return this.getTangent(t,r)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},QuadraticBezierCurve,QuadraticBezierCurve3,SplineCurve});class CurvePath extends Curve{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),r=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(r)){const i=!0===t.isVector2?"LineCurve":"LineCurve3";this.curves.push(new Hl[i](r,t))}return this}getPoint(t,r){const i=t*this.getLength(),a=this.getCurveLengths();let o=0;for(;o<a.length;){if(a[o]>=i){const t=a[o]-i,l=this.curves[o],c=l.getLength(),h=0===c?0:1-t/c;return l.getPointAt(h,r)}o++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let r=0;for(let i=0,a=this.curves.length;i<a;i++)r+=this.curves[i].getLength(),t.push(r);return this.cacheLengths=t,t}getSpacedPoints(t=40){const r=[];for(let i=0;i<=t;i++)r.push(this.getPoint(i/t));return this.autoClose&&r.push(r[0]),r}getPoints(t=12){const r=[];let i;for(let a=0,o=this.curves;a<o.length;a++){const l=o[a],c=l.isEllipseCurve?2*t:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?t*l.points.length:t,h=l.getPoints(c);for(let t=0;t<h.length;t++){const a=h[t];i&&i.equals(a)||(r.push(a),i=a)}}return this.autoClose&&r.length>1&&!r[r.length-1].equals(r[0])&&r.push(r[0]),r}copy(t){super.copy(t),this.curves=[];for(let r=0,i=t.curves.length;r<i;r++){const i=t.curves[r];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let r=0,i=this.curves.length;r<i;r++){const i=this.curves[r];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let r=0,i=t.curves.length;r<i;r++){const i=t.curves[r];this.curves.push((new Hl[i.type]).fromJSON(i))}return this}}class Path extends CurvePath{constructor(t){super(),this.type="Path",this.currentPoint=new Vector2,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let r=1,i=t.length;r<i;r++)this.lineTo(t[r].x,t[r].y);return this}moveTo(t,r){return this.currentPoint.set(t,r),this}lineTo(t,r){const i=new LineCurve(this.currentPoint.clone(),new Vector2(t,r));return this.curves.push(i),this.currentPoint.set(t,r),this}quadraticCurveTo(t,r,i,a){const o=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(t,r),new Vector2(i,a));return this.curves.push(o),this.currentPoint.set(i,a),this}bezierCurveTo(t,r,i,a,o,l){const c=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(t,r),new Vector2(i,a),new Vector2(o,l));return this.curves.push(c),this.currentPoint.set(o,l),this}splineThru(t){const r=[this.currentPoint.clone()].concat(t),i=new SplineCurve(r);return this.curves.push(i),this.currentPoint.copy(t[t.length-1]),this}arc(t,r,i,a,o,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(t+c,r+h,i,a,o,l),this}absarc(t,r,i,a,o,l){return this.absellipse(t,r,i,i,a,o,l),this}ellipse(t,r,i,a,o,l,c,h){const u=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(t+u,r+d,i,a,o,l,c,h),this}absellipse(t,r,i,a,o,l,c,h){const u=new EllipseCurve(t,r,i,a,o,l,c,h);if(this.curves.length>0){const t=u.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(u);const d=u.getPoint(1);return this.currentPoint.copy(d),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Shape extends Path{constructor(t){super(t),this.uuid=generateUUID(),this.type="Shape",this.holes=[]}getPointsHoles(t){const r=[];for(let i=0,a=this.holes.length;i<a;i++)r[i]=this.holes[i].getPoints(t);return r}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let r=0,i=t.holes.length;r<i;r++){const i=t.holes[r];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let r=0,i=this.holes.length;r<i;r++){const i=this.holes[r];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let r=0,i=t.holes.length;r<i;r++){const i=t.holes[r];this.holes.push((new Path).fromJSON(i))}return this}}function earcut(t,r,i=2){const a=r&&r.length,o=a?r[0]*i:t.length;let l=linkedList(t,0,o,i,!0);const c=[];if(!l||l.next===l.prev)return c;let h,u,d;if(a&&(l=function eliminateHoles(t,r,i,a){const o=[];for(let i=0,l=r.length;i<l;i++){const c=linkedList(t,r[i]*a,i<l-1?r[i+1]*a:t.length,a,!1);c===c.next&&(c.steiner=!0),o.push(getLeftmost(c))}o.sort(compareXYSlope);for(let t=0;t<o.length;t++)i=eliminateHole(o[t],i);return i}(t,r,l,i)),t.length>80*i){h=1/0,u=1/0;let r=-1/0,a=-1/0;for(let l=i;l<o;l+=i){const i=t[l],o=t[l+1];i<h&&(h=i),o<u&&(u=o),i>r&&(r=i),o>a&&(a=o)}d=Math.max(r-h,a-u),d=0!==d?32767/d:0}return earcutLinked(l,c,i,h,u,d,0),c}function linkedList(t,r,i,a,o){let l;if(o===function signedArea(t,r,i,a){let o=0;for(let l=r,c=i-a;l<i;l+=a)o+=(t[c]-t[l])*(t[l+1]+t[c+1]),c=l;return o}(t,r,i,a)>0)for(let o=r;o<i;o+=a)l=insertNode(o/a|0,t[o],t[o+1],l);else for(let o=i-a;o>=r;o-=a)l=insertNode(o/a|0,t[o],t[o+1],l);return l&&equals(l,l.next)&&(removeNode(l),l=l.next),l}function filterPoints(t,r){if(!t)return t;r||(r=t);let i,a=t;do{if(i=!1,a.steiner||!equals(a,a.next)&&0!==three_core_area(a.prev,a,a.next))a=a.next;else{if(removeNode(a),a=r=a.prev,a===a.next)break;i=!0}}while(i||a!==r);return r}function earcutLinked(t,r,i,a,o,l,c){if(!t)return;!c&&l&&function indexCurve(t,r,i,a){let o=t;do{0===o.z&&(o.z=zOrder(o.x,o.y,r,i,a)),o.prevZ=o.prev,o.nextZ=o.next,o=o.next}while(o!==t);o.prevZ.nextZ=null,o.prevZ=null,function sortLinked(t){let r,i=1;do{let a,o=t;t=null;let l=null;for(r=0;o;){r++;let c=o,h=0;for(let t=0;t<i&&(h++,c=c.nextZ,c);t++);let u=i;for(;h>0||u>0&&c;)0!==h&&(0===u||!c||o.z<=c.z)?(a=o,o=o.nextZ,h--):(a=c,c=c.nextZ,u--),l?l.nextZ=a:t=a,a.prevZ=l,l=a;o=c}l.nextZ=null,i*=2}while(r>1);return t}(o)}(t,a,o,l);let h=t;for(;t.prev!==t.next;){const u=t.prev,d=t.next;if(l?isEarHashed(t,a,o,l):isEar(t))r.push(u.i,t.i,d.i),removeNode(t),t=d.next,h=d.next;else if((t=d)===h){c?1===c?earcutLinked(t=cureLocalIntersections(filterPoints(t),r),r,i,a,o,l,2):2===c&&splitEarcut(t,r,i,a,o,l):earcutLinked(filterPoints(t),r,i,a,o,l,1);break}}}function isEar(t){const r=t.prev,i=t,a=t.next;if(three_core_area(r,i,a)>=0)return!1;const o=r.x,l=i.x,c=a.x,h=r.y,u=i.y,d=a.y,p=Math.min(o,l,c),m=Math.min(h,u,d),g=Math.max(o,l,c),_=Math.max(h,u,d);let x=a.next;for(;x!==r;){if(x.x>=p&&x.x<=g&&x.y>=m&&x.y<=_&&pointInTriangleExceptFirst(o,h,l,u,c,d,x.x,x.y)&&three_core_area(x.prev,x,x.next)>=0)return!1;x=x.next}return!0}function isEarHashed(t,r,i,a){const o=t.prev,l=t,c=t.next;if(three_core_area(o,l,c)>=0)return!1;const h=o.x,u=l.x,d=c.x,p=o.y,m=l.y,g=c.y,_=Math.min(h,u,d),x=Math.min(p,m,g),y=Math.max(h,u,d),M=Math.max(p,m,g),S=zOrder(_,x,r,i,a),b=zOrder(y,M,r,i,a);let T=t.prevZ,E=t.nextZ;for(;T&&T.z>=S&&E&&E.z<=b;){if(T.x>=_&&T.x<=y&&T.y>=x&&T.y<=M&&T!==o&&T!==c&&pointInTriangleExceptFirst(h,p,u,m,d,g,T.x,T.y)&&three_core_area(T.prev,T,T.next)>=0)return!1;if(T=T.prevZ,E.x>=_&&E.x<=y&&E.y>=x&&E.y<=M&&E!==o&&E!==c&&pointInTriangleExceptFirst(h,p,u,m,d,g,E.x,E.y)&&three_core_area(E.prev,E,E.next)>=0)return!1;E=E.nextZ}for(;T&&T.z>=S;){if(T.x>=_&&T.x<=y&&T.y>=x&&T.y<=M&&T!==o&&T!==c&&pointInTriangleExceptFirst(h,p,u,m,d,g,T.x,T.y)&&three_core_area(T.prev,T,T.next)>=0)return!1;T=T.prevZ}for(;E&&E.z<=b;){if(E.x>=_&&E.x<=y&&E.y>=x&&E.y<=M&&E!==o&&E!==c&&pointInTriangleExceptFirst(h,p,u,m,d,g,E.x,E.y)&&three_core_area(E.prev,E,E.next)>=0)return!1;E=E.nextZ}return!0}function cureLocalIntersections(t,r){let i=t;do{const a=i.prev,o=i.next.next;!equals(a,o)&&intersects(a,i,i.next,o)&&locallyInside(a,o)&&locallyInside(o,a)&&(r.push(a.i,i.i,o.i),removeNode(i),removeNode(i.next),i=t=o),i=i.next}while(i!==t);return filterPoints(i)}function splitEarcut(t,r,i,a,o,l){let c=t;do{let t=c.next.next;for(;t!==c.prev;){if(c.i!==t.i&&isValidDiagonal(c,t)){let h=splitPolygon(c,t);return c=filterPoints(c,c.next),h=filterPoints(h,h.next),earcutLinked(c,r,i,a,o,l,0),void earcutLinked(h,r,i,a,o,l,0)}t=t.next}c=c.next}while(c!==t)}function compareXYSlope(t,r){let i=t.x-r.x;if(0===i&&(i=t.y-r.y,0===i)){i=(t.next.y-t.y)/(t.next.x-t.x)-(r.next.y-r.y)/(r.next.x-r.x)}return i}function eliminateHole(t,r){const i=function findHoleBridge(t,r){let i=r;const a=t.x,o=t.y;let l,c=-1/0;if(equals(t,i))return i;do{if(equals(t,i.next))return i.next;if(o<=i.y&&o>=i.next.y&&i.next.y!==i.y){const t=i.x+(o-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(t<=a&&t>c&&(c=t,l=i.x<i.next.x?i:i.next,t===a))return l}i=i.next}while(i!==r);if(!l)return null;const h=l,u=l.x,d=l.y;let p=1/0;i=l;do{if(a>=i.x&&i.x>=u&&a!==i.x&&pointInTriangle(o<d?a:c,o,u,d,o<d?c:a,o,i.x,i.y)){const r=Math.abs(o-i.y)/(a-i.x);locallyInside(i,t)&&(r<p||r===p&&(i.x>l.x||i.x===l.x&&sectorContainsSector(l,i)))&&(l=i,p=r)}i=i.next}while(i!==h);return l}(t,r);if(!i)return r;const a=splitPolygon(i,t);return filterPoints(a,a.next),filterPoints(i,i.next)}function sectorContainsSector(t,r){return three_core_area(t.prev,t,r.prev)<0&&three_core_area(r.next,t,t.next)<0}function zOrder(t,r,i,a,o){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-i)*o|0)|t<<8))|t<<4))|t<<2))|t<<1))|(r=1431655765&((r=858993459&((r=252645135&((r=16711935&((r=(r-a)*o|0)|r<<8))|r<<4))|r<<2))|r<<1))<<1}function getLeftmost(t){let r=t,i=t;do{(r.x<i.x||r.x===i.x&&r.y<i.y)&&(i=r),r=r.next}while(r!==t);return i}function pointInTriangle(t,r,i,a,o,l,c,h){return(o-c)*(r-h)>=(t-c)*(l-h)&&(t-c)*(a-h)>=(i-c)*(r-h)&&(i-c)*(l-h)>=(o-c)*(a-h)}function pointInTriangleExceptFirst(t,r,i,a,o,l,c,h){return!(t===c&&r===h)&&pointInTriangle(t,r,i,a,o,l,c,h)}function isValidDiagonal(t,r){return t.next.i!==r.i&&t.prev.i!==r.i&&!function intersectsPolygon(t,r){let i=t;do{if(i.i!==t.i&&i.next.i!==t.i&&i.i!==r.i&&i.next.i!==r.i&&intersects(i,i.next,t,r))return!0;i=i.next}while(i!==t);return!1}(t,r)&&(locallyInside(t,r)&&locallyInside(r,t)&&function middleInside(t,r){let i=t,a=!1;const o=(t.x+r.x)/2,l=(t.y+r.y)/2;do{i.y>l!=i.next.y>l&&i.next.y!==i.y&&o<(i.next.x-i.x)*(l-i.y)/(i.next.y-i.y)+i.x&&(a=!a),i=i.next}while(i!==t);return a}(t,r)&&(three_core_area(t.prev,t,r.prev)||three_core_area(t,r.prev,r))||equals(t,r)&&three_core_area(t.prev,t,t.next)>0&&three_core_area(r.prev,r,r.next)>0)}function three_core_area(t,r,i){return(r.y-t.y)*(i.x-r.x)-(r.x-t.x)*(i.y-r.y)}function equals(t,r){return t.x===r.x&&t.y===r.y}function intersects(t,r,i,a){const o=sign(three_core_area(t,r,i)),l=sign(three_core_area(t,r,a)),c=sign(three_core_area(i,a,t)),h=sign(three_core_area(i,a,r));return o!==l&&c!==h||(!(0!==o||!onSegment(t,i,r))||(!(0!==l||!onSegment(t,a,r))||(!(0!==c||!onSegment(i,t,a))||!(0!==h||!onSegment(i,r,a)))))}function onSegment(t,r,i){return r.x<=Math.max(t.x,i.x)&&r.x>=Math.min(t.x,i.x)&&r.y<=Math.max(t.y,i.y)&&r.y>=Math.min(t.y,i.y)}function sign(t){return t>0?1:t<0?-1:0}function locallyInside(t,r){return three_core_area(t.prev,t,t.next)<0?three_core_area(t,r,t.next)>=0&&three_core_area(t,t.prev,r)>=0:three_core_area(t,r,t.prev)<0||three_core_area(t,t.next,r)<0}function splitPolygon(t,r){const i=createNode(t.i,t.x,t.y),a=createNode(r.i,r.x,r.y),o=t.next,l=r.prev;return t.next=r,r.prev=t,i.next=o,o.prev=i,a.next=i,i.prev=a,l.next=a,a.prev=l,a}function insertNode(t,r,i,a){const o=createNode(t,r,i);return a?(o.next=a.next,o.prev=a,a.next.prev=o,a.next=o):(o.prev=o,o.next=o),o}function removeNode(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function createNode(t,r,i){return{i:t,x:r,y:i,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}class Earcut{static triangulate(t,r,i=2){return earcut(t,r,i)}}class ShapeUtils{static area(t){const r=t.length;let i=0;for(let a=r-1,o=0;o<r;a=o++)i+=t[a].x*t[o].y-t[o].x*t[a].y;return.5*i}static isClockWise(t){return ShapeUtils.area(t)<0}static triangulateShape(t,r){const i=[],a=[],o=[];removeDupEndPts(t),addContour(i,t);let l=t.length;r.forEach(removeDupEndPts);for(let t=0;t<r.length;t++)a.push(l),l+=r[t].length,addContour(i,r[t]);const c=Earcut.triangulate(i,a);for(let t=0;t<c.length;t+=3)o.push(c.slice(t,t+3));return o}}function removeDupEndPts(t){const r=t.length;r>2&&t[r-1].equals(t[0])&&t.pop()}function addContour(t,r){for(let i=0;i<r.length;i++)t.push(r[i].x),t.push(r[i].y)}class ExtrudeGeometry extends BufferGeometry{constructor(t=new Shape([new Vector2(.5,.5),new Vector2(-.5,.5),new Vector2(-.5,-.5),new Vector2(.5,-.5)]),r={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:r},t=Array.isArray(t)?t:[t];const i=this,a=[],o=[];for(let r=0,i=t.length;r<i;r++){addShape(t[r])}function addShape(t){const l=[],c=void 0!==r.curveSegments?r.curveSegments:12,h=void 0!==r.steps?r.steps:1,u=void 0!==r.depth?r.depth:1;let d=void 0===r.bevelEnabled||r.bevelEnabled,p=void 0!==r.bevelThickness?r.bevelThickness:.2,m=void 0!==r.bevelSize?r.bevelSize:p-.1,g=void 0!==r.bevelOffset?r.bevelOffset:0,_=void 0!==r.bevelSegments?r.bevelSegments:3;const x=r.extrudePath,y=void 0!==r.UVGenerator?r.UVGenerator:Wl;let M,S,b,T,E,w=!1;x&&(M=x.getSpacedPoints(h),w=!0,d=!1,S=x.computeFrenetFrames(h,!1),b=new Vector3,T=new Vector3,E=new Vector3),d||(_=0,p=0,m=0,g=0);const C=t.extractPoints(c);let A=C.shape;const R=C.holes;if(!ShapeUtils.isClockWise(A)){A=A.reverse();for(let t=0,r=R.length;t<r;t++){const r=R[t];ShapeUtils.isClockWise(r)&&(R[t]=r.reverse())}}function mergeOverlappingPoints(t){const r=1e-10*1e-10;let i=t[0];for(let a=1;a<=t.length;a++){const o=a%t.length,l=t[o],c=l.x-i.x,h=l.y-i.y,u=c*c+h*h,d=Math.max(Math.abs(l.x),Math.abs(l.y),Math.abs(i.x),Math.abs(i.y));u<=r*d*d?(t.splice(o,1),a--):i=l}}mergeOverlappingPoints(A),R.forEach(mergeOverlappingPoints);const P=R.length,L=A;for(let t=0;t<P;t++){const r=R[t];A=A.concat(r)}function scalePt2(t,r,i){return r||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().addScaledVector(r,i)}const U=A.length;function getBevelVec(t,r,i){let a,o,l;const c=t.x-r.x,h=t.y-r.y,u=i.x-t.x,d=i.y-t.y,p=c*c+h*h,m=c*d-h*u;if(Math.abs(m)>Number.EPSILON){const m=Math.sqrt(p),g=Math.sqrt(u*u+d*d),_=r.x-h/m,x=r.y+c/m,y=((i.x-d/g-_)*d-(i.y+u/g-x)*u)/(c*d-h*u);a=_+c*y-t.x,o=x+h*y-t.y;const M=a*a+o*o;if(M<=2)return new Vector2(a,o);l=Math.sqrt(M/2)}else{let t=!1;c>Number.EPSILON?u>Number.EPSILON&&(t=!0):c<-Number.EPSILON?u<-Number.EPSILON&&(t=!0):Math.sign(h)===Math.sign(d)&&(t=!0),t?(a=-h,o=c,l=Math.sqrt(p)):(a=c,o=h,l=Math.sqrt(p/2))}return new Vector2(a/l,o/l)}const D=[];for(let t=0,r=L.length,i=r-1,a=t+1;t<r;t++,i++,a++)i===r&&(i=0),a===r&&(a=0),D[t]=getBevelVec(L[t],L[i],L[a]);const I=[];let N,O,z=D.concat();for(let t=0,r=P;t<r;t++){const r=R[t];N=[];for(let t=0,i=r.length,a=i-1,o=t+1;t<i;t++,a++,o++)a===i&&(a=0),o===i&&(o=0),N[t]=getBevelVec(r[t],r[a],r[o]);I.push(N),z=z.concat(N)}if(0===_)O=ShapeUtils.triangulateShape(L,R);else{const t=[],r=[];for(let i=0;i<_;i++){const a=i/_,o=p*Math.cos(a*Math.PI/2),l=m*Math.sin(a*Math.PI/2)+g;for(let r=0,i=L.length;r<i;r++){const i=scalePt2(L[r],D[r],l);v(i.x,i.y,-o),0===a&&t.push(i)}for(let t=0,i=P;t<i;t++){const i=R[t];N=I[t];const c=[];for(let t=0,r=i.length;t<r;t++){const r=scalePt2(i[t],N[t],l);v(r.x,r.y,-o),0===a&&c.push(r)}0===a&&r.push(c)}}O=ShapeUtils.triangulateShape(t,r)}const B=O.length,V=m+g;for(let t=0;t<U;t++){const r=d?scalePt2(A[t],z[t],V):A[t];w?(T.copy(S.normals[0]).multiplyScalar(r.x),b.copy(S.binormals[0]).multiplyScalar(r.y),E.copy(M[0]).add(T).add(b),v(E.x,E.y,E.z)):v(r.x,r.y,0)}for(let t=1;t<=h;t++)for(let r=0;r<U;r++){const i=d?scalePt2(A[r],z[r],V):A[r];w?(T.copy(S.normals[t]).multiplyScalar(i.x),b.copy(S.binormals[t]).multiplyScalar(i.y),E.copy(M[t]).add(T).add(b),v(E.x,E.y,E.z)):v(i.x,i.y,u/h*t)}for(let t=_-1;t>=0;t--){const r=t/_,i=p*Math.cos(r*Math.PI/2),a=m*Math.sin(r*Math.PI/2)+g;for(let t=0,r=L.length;t<r;t++){const r=scalePt2(L[t],D[t],a);v(r.x,r.y,u+i)}for(let t=0,r=R.length;t<r;t++){const r=R[t];N=I[t];for(let t=0,o=r.length;t<o;t++){const o=scalePt2(r[t],N[t],a);w?v(o.x,o.y+M[h-1].y,M[h-1].x+i):v(o.x,o.y,u+i)}}}function sidewalls(t,r){let i=t.length;for(;--i>=0;){const a=i;let o=i-1;o<0&&(o=t.length-1);for(let t=0,i=h+2*_;t<i;t++){const i=U*t,l=U*(t+1);f4(r+a+i,r+o+i,r+o+l,r+a+l)}}}function v(t,r,i){l.push(t),l.push(r),l.push(i)}function f3(t,r,o){addVertex(t),addVertex(r),addVertex(o);const l=a.length/3,c=y.generateTopUV(i,a,l-3,l-2,l-1);addUV(c[0]),addUV(c[1]),addUV(c[2])}function f4(t,r,o,l){addVertex(t),addVertex(r),addVertex(l),addVertex(r),addVertex(o),addVertex(l);const c=a.length/3,h=y.generateSideWallUV(i,a,c-6,c-3,c-2,c-1);addUV(h[0]),addUV(h[1]),addUV(h[3]),addUV(h[1]),addUV(h[2]),addUV(h[3])}function addVertex(t){a.push(l[3*t+0]),a.push(l[3*t+1]),a.push(l[3*t+2])}function addUV(t){o.push(t.x),o.push(t.y)}!function buildLidFaces(){const t=a.length/3;if(d){let t=0,r=U*t;for(let t=0;t<B;t++){const i=O[t];f3(i[2]+r,i[1]+r,i[0]+r)}t=h+2*_,r=U*t;for(let t=0;t<B;t++){const i=O[t];f3(i[0]+r,i[1]+r,i[2]+r)}}else{for(let t=0;t<B;t++){const r=O[t];f3(r[2],r[1],r[0])}for(let t=0;t<B;t++){const r=O[t];f3(r[0]+U*h,r[1]+U*h,r[2]+U*h)}}i.addGroup(t,a.length/3-t,0)}(),function buildSideFaces(){const t=a.length/3;let r=0;sidewalls(L,r),r+=L.length;for(let t=0,i=R.length;t<i;t++){const i=R[t];sidewalls(i,r),r+=i.length}i.addGroup(t,a.length/3-t,1)}()}this.setAttribute("position",new Float32BufferAttribute(a,3)),this.setAttribute("uv",new Float32BufferAttribute(o,2)),this.computeVertexNormals()}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return function toJSON$1(t,r,i){if(i.shapes=[],Array.isArray(t))for(let r=0,a=t.length;r<a;r++){const a=t[r];i.shapes.push(a.uuid)}else i.shapes.push(t.uuid);i.options=Object.assign({},r),void 0!==r.extrudePath&&(i.options.extrudePath=r.extrudePath.toJSON());return i}(this.parameters.shapes,this.parameters.options,t)}static fromJSON(t,r){const i=[];for(let a=0,o=t.shapes.length;a<o;a++){const o=r[t.shapes[a]];i.push(o)}const a=t.options.extrudePath;return void 0!==a&&(t.options.extrudePath=(new Hl[a.type]).fromJSON(a)),new ExtrudeGeometry(i,t.options)}}const Wl={generateTopUV:function(t,r,i,a,o){const l=r[3*i],c=r[3*i+1],h=r[3*a],u=r[3*a+1],d=r[3*o],p=r[3*o+1];return[new Vector2(l,c),new Vector2(h,u),new Vector2(d,p)]},generateSideWallUV:function(t,r,i,a,o,l){const c=r[3*i],h=r[3*i+1],u=r[3*i+2],d=r[3*a],p=r[3*a+1],m=r[3*a+2],g=r[3*o],_=r[3*o+1],x=r[3*o+2],y=r[3*l],M=r[3*l+1],S=r[3*l+2];return Math.abs(h-p)<Math.abs(c-d)?[new Vector2(c,1-u),new Vector2(d,1-m),new Vector2(g,1-x),new Vector2(y,1-S)]:[new Vector2(h,1-u),new Vector2(p,1-m),new Vector2(_,1-x),new Vector2(M,1-S)]}};class PlaneGeometry extends BufferGeometry{constructor(t=1,r=1,i=1,a=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:r,widthSegments:i,heightSegments:a};const o=t/2,l=r/2,c=Math.floor(i),h=Math.floor(a),u=c+1,d=h+1,p=t/c,m=r/h,g=[],_=[],x=[],y=[];for(let t=0;t<d;t++){const r=t*m-l;for(let i=0;i<u;i++){const a=i*p-o;_.push(a,-r,0),x.push(0,0,1),y.push(i/c),y.push(1-t/h)}}for(let t=0;t<h;t++)for(let r=0;r<c;r++){const i=r+u*t,a=r+u*(t+1),o=r+1+u*(t+1),l=r+1+u*t;g.push(i,a,l),g.push(a,o,l)}this.setIndex(g),this.setAttribute("position",new Float32BufferAttribute(_,3)),this.setAttribute("normal",new Float32BufferAttribute(x,3)),this.setAttribute("uv",new Float32BufferAttribute(y,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new PlaneGeometry(t.width,t.height,t.widthSegments,t.heightSegments)}}class MeshStandardMaterial extends Material{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Color(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Euler,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class MeshDepthMaterial extends Material{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class MeshDistanceMaterial extends Material{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function convertArray(t,r){return t&&t.constructor!==r?"number"==typeof r.BYTES_PER_ELEMENT?new r(t):Array.prototype.slice.call(t):t}function isTypedArray(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}class Interpolant{constructor(t,r,i,a){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==a?a:new r.constructor(i),this.sampleValues=r,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(t){const r=this.parameterPositions;let i=this._cachedIndex,a=r[i],o=r[i-1];t:{e:{let l;n:{r:if(!(t<a)){for(let l=i+2;;){if(void 0===a){if(t<o)break r;return i=r.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===l)break;if(o=a,a=r[++i],t<a)break e}l=r.length;break n}if(t>=o)break t;{const c=r[1];t<c&&(i=2,o=c);for(let l=i-2;;){if(void 0===o)return this._cachedIndex=0,this.copySampleValue_(0);if(i===l)break;if(a=o,o=r[--i-1],t>=o)break e}l=i,i=0}}for(;i<l;){const a=i+l>>>1;t<r[a]?l=a:i=a+1}if(a=r[i],o=r[i-1],void 0===o)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===a)return i=r.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,o,a)}return this.interpolate_(i,o,t,a)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const r=this.resultBuffer,i=this.sampleValues,a=this.valueSize,o=t*a;for(let t=0;t!==a;++t)r[t]=i[o+t];return r}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class CubicInterpolant extends Interpolant{constructor(t,r,i,a){super(t,r,i,a),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ts,endingEnd:ts}}intervalChanged_(t,r,i){const a=this.parameterPositions;let o=t-2,l=t+1,c=a[o],h=a[l];if(void 0===c)switch(this.getSettings_().endingStart){case es:o=t,c=2*r-i;break;case ns:o=a.length-2,c=r+a[o]-a[o+1];break;default:o=t,c=i}if(void 0===h)switch(this.getSettings_().endingEnd){case es:l=t,h=2*i-r;break;case ns:l=1,h=i+a[1]-a[0];break;default:l=t-1,h=r}const u=.5*(i-r),d=this.valueSize;this._weightPrev=u/(r-c),this._weightNext=u/(h-i),this._offsetPrev=o*d,this._offsetNext=l*d}interpolate_(t,r,i,a){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,u=h-c,d=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,g=this._weightNext,_=(i-r)/(a-r),x=_*_,y=x*_,M=-m*y+2*m*x-m*_,S=(1+m)*y+(-1.5-2*m)*x+(-.5+m)*_+1,b=(-1-g)*y+(1.5+g)*x+.5*_,T=g*y-g*x;for(let t=0;t!==c;++t)o[t]=M*l[d+t]+S*l[u+t]+b*l[h+t]+T*l[p+t];return o}}class LinearInterpolant extends Interpolant{constructor(t,r,i,a){super(t,r,i,a)}interpolate_(t,r,i,a){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,u=h-c,d=(i-r)/(a-r),p=1-d;for(let t=0;t!==c;++t)o[t]=l[u+t]*p+l[h+t]*d;return o}}class DiscreteInterpolant extends Interpolant{constructor(t,r,i,a){super(t,r,i,a)}interpolate_(t){return this.copySampleValue_(t-1)}}class KeyframeTrack{constructor(t,r,i,a){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===r||0===r.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=convertArray(r,this.TimeBufferType),this.values=convertArray(i,this.ValueBufferType),this.setInterpolation(a||this.DefaultInterpolation)}static toJSON(t){const r=t.constructor;let i;if(r.toJSON!==this.toJSON)i=r.toJSON(t);else{i={name:t.name,times:convertArray(t.times,Array),values:convertArray(t.values,Array)};const r=t.getInterpolation();r!==t.DefaultInterpolation&&(i.interpolation=r)}return i.type=t.ValueTypeName,i}InterpolantFactoryMethodDiscrete(t){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new LinearInterpolant(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new CubicInterpolant(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let r;switch(t){case Za:r=this.InterpolantFactoryMethodDiscrete;break;case Qa:r=this.InterpolantFactoryMethodLinear;break;case $a:r=this.InterpolantFactoryMethodSmooth}if(void 0===r){const r="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(r);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",r),this}return this.createInterpolant=r,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Za;case this.InterpolantFactoryMethodLinear:return Qa;case this.InterpolantFactoryMethodSmooth:return $a}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const r=this.times;for(let i=0,a=r.length;i!==a;++i)r[i]+=t}return this}scale(t){if(1!==t){const r=this.times;for(let i=0,a=r.length;i!==a;++i)r[i]*=t}return this}trim(t,r){const i=this.times,a=i.length;let o=0,l=a-1;for(;o!==a&&i[o]<t;)++o;for(;-1!==l&&i[l]>r;)--l;if(++l,0!==o||l!==a){o>=l&&(l=Math.max(l,1),o=l-1);const t=this.getValueSize();this.times=i.slice(o,l),this.values=this.values.slice(o*t,l*t)}return this}validate(){let t=!0;const r=this.getValueSize();r-Math.floor(r)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const i=this.times,a=this.values,o=i.length;0===o&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let l=null;for(let r=0;r!==o;r++){const a=i[r];if("number"==typeof a&&isNaN(a)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,r,a),t=!1;break}if(null!==l&&l>a){console.error("THREE.KeyframeTrack: Out of order keys.",this,r,a,l),t=!1;break}l=a}if(void 0!==a&&isTypedArray(a))for(let r=0,i=a.length;r!==i;++r){const i=a[r];if(isNaN(i)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,r,i),t=!1;break}}return t}optimize(){const t=this.times.slice(),r=this.values.slice(),i=this.getValueSize(),a=this.getInterpolation()===$a,o=t.length-1;let l=1;for(let c=1;c<o;++c){let o=!1;const h=t[c];if(h!==t[c+1]&&(1!==c||h!==t[0]))if(a)o=!0;else{const t=c*i,a=t-i,l=t+i;for(let c=0;c!==i;++c){const i=r[t+c];if(i!==r[a+c]||i!==r[l+c]){o=!0;break}}}if(o){if(c!==l){t[l]=t[c];const a=c*i,o=l*i;for(let t=0;t!==i;++t)r[o+t]=r[a+t]}++l}}if(o>0){t[l]=t[o];for(let t=o*i,a=l*i,c=0;c!==i;++c)r[a+c]=r[t+c];++l}return l!==t.length?(this.times=t.slice(0,l),this.values=r.slice(0,l*i)):(this.times=t,this.values=r),this}clone(){const t=this.times.slice(),r=this.values.slice(),i=new(0,this.constructor)(this.name,t,r);return i.createInterpolant=this.createInterpolant,i}}KeyframeTrack.prototype.ValueTypeName="",KeyframeTrack.prototype.TimeBufferType=Float32Array,KeyframeTrack.prototype.ValueBufferType=Float32Array,KeyframeTrack.prototype.DefaultInterpolation=Qa;class BooleanKeyframeTrack extends KeyframeTrack{constructor(t,r,i){super(t,r,i)}}BooleanKeyframeTrack.prototype.ValueTypeName="bool",BooleanKeyframeTrack.prototype.ValueBufferType=Array,BooleanKeyframeTrack.prototype.DefaultInterpolation=Za,BooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear=void 0,BooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=void 0;class ColorKeyframeTrack extends KeyframeTrack{constructor(t,r,i,a){super(t,r,i,a)}}ColorKeyframeTrack.prototype.ValueTypeName="color";class NumberKeyframeTrack extends KeyframeTrack{constructor(t,r,i,a){super(t,r,i,a)}}NumberKeyframeTrack.prototype.ValueTypeName="number";class QuaternionLinearInterpolant extends Interpolant{constructor(t,r,i,a){super(t,r,i,a)}interpolate_(t,r,i,a){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=(i-r)/(a-r);let u=t*c;for(let t=u+c;u!==t;u+=4)Quaternion.slerpFlat(o,0,l,u-c,l,u,h);return o}}class QuaternionKeyframeTrack extends KeyframeTrack{constructor(t,r,i,a){super(t,r,i,a)}InterpolantFactoryMethodLinear(t){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),t)}}QuaternionKeyframeTrack.prototype.ValueTypeName="quaternion",QuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=void 0;class StringKeyframeTrack extends KeyframeTrack{constructor(t,r,i){super(t,r,i)}}StringKeyframeTrack.prototype.ValueTypeName="string",StringKeyframeTrack.prototype.ValueBufferType=Array,StringKeyframeTrack.prototype.DefaultInterpolation=Za,StringKeyframeTrack.prototype.InterpolantFactoryMethodLinear=void 0,StringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=void 0;class VectorKeyframeTrack extends KeyframeTrack{constructor(t,r,i,a){super(t,r,i,a)}}VectorKeyframeTrack.prototype.ValueTypeName="vector";const Xl={enabled:!1,files:{},add:function(t,r){!1!==this.enabled&&(this.files[t]=r)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class LoadingManager{constructor(t,r,i){const a=this;let o,l=!1,c=0,h=0;const u=[];this.onStart=void 0,this.onLoad=t,this.onProgress=r,this.onError=i,this.itemStart=function(t){h++,!1===l&&void 0!==a.onStart&&a.onStart(t,c,h),l=!0},this.itemEnd=function(t){c++,void 0!==a.onProgress&&a.onProgress(t,c,h),c===h&&(l=!1,void 0!==a.onLoad&&a.onLoad())},this.itemError=function(t){void 0!==a.onError&&a.onError(t)},this.resolveURL=function(t){return o?o(t):t},this.setURLModifier=function(t){return o=t,this},this.addHandler=function(t,r){return u.push(t,r),this},this.removeHandler=function(t){const r=u.indexOf(t);return-1!==r&&u.splice(r,2),this},this.getHandler=function(t){for(let r=0,i=u.length;r<i;r+=2){const i=u[r],a=u[r+1];if(i.global&&(i.lastIndex=0),i.test(t))return a}return null}}}const jl=new LoadingManager;class Loader{constructor(t){this.manager=void 0!==t?t:jl,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,r){const i=this;return new Promise((function(a,o){i.load(t,a,r,o)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}Loader.DEFAULT_MATERIAL_NAME="__DEFAULT";const ql={};class HttpError extends Error{constructor(t,r){super(t),this.response=r}}class FileLoader extends Loader{constructor(t){super(t),this.mimeType="",this.responseType=""}load(t,r,i,a){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const o=Xl.get(t);if(void 0!==o)return this.manager.itemStart(t),setTimeout((()=>{r&&r(o),this.manager.itemEnd(t)}),0),o;if(void 0!==ql[t])return void ql[t].push({onLoad:r,onProgress:i,onError:a});ql[t]=[],ql[t].push({onLoad:r,onProgress:i,onError:a});const l=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,h=this.responseType;fetch(l).then((r=>{if(200===r.status||0===r.status){if(0===r.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===r.body||void 0===r.body.getReader)return r;const i=ql[t],a=r.body.getReader(),o=r.headers.get("X-File-Size")||r.headers.get("Content-Length"),l=o?parseInt(o):0,c=0!==l;let h=0;const u=new ReadableStream({start(t){!function readData(){a.read().then((({done:r,value:a})=>{if(r)t.close();else{h+=a.byteLength;const r=new ProgressEvent("progress",{lengthComputable:c,loaded:h,total:l});for(let t=0,a=i.length;t<a;t++){const a=i[t];a.onProgress&&a.onProgress(r)}t.enqueue(a),readData()}}),(r=>{t.error(r)}))}()}});return new Response(u)}throw new HttpError(`fetch for "${r.url}" responded with ${r.status}: ${r.statusText}`,r)})).then((t=>{switch(h){case"arraybuffer":return t.arrayBuffer();case"blob":return t.blob();case"document":return t.text().then((t=>(new DOMParser).parseFromString(t,c)));case"json":return t.json();default:if(""===c)return t.text();{const r=/charset="?([^;"\s]*)"?/i.exec(c),i=r&&r[1]?r[1].toLowerCase():void 0,a=new TextDecoder(i);return t.arrayBuffer().then((t=>a.decode(t)))}}})).then((r=>{Xl.add(t,r);const i=ql[t];delete ql[t];for(let t=0,a=i.length;t<a;t++){const a=i[t];a.onLoad&&a.onLoad(r)}})).catch((r=>{const i=ql[t];if(void 0===i)throw this.manager.itemError(t),r;delete ql[t];for(let t=0,a=i.length;t<a;t++){const a=i[t];a.onError&&a.onError(r)}this.manager.itemError(t)})).finally((()=>{this.manager.itemEnd(t)})),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class Light extends Object3D{constructor(t,r=1){super(),this.isLight=!0,this.type="Light",this.color=new Color(t),this.intensity=r}dispose(){}copy(t,r){return super.copy(t,r),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const r=super.toJSON(t);return r.object.color=this.color.getHex(),r.object.intensity=this.intensity,void 0!==this.groundColor&&(r.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(r.object.distance=this.distance),void 0!==this.angle&&(r.object.angle=this.angle),void 0!==this.decay&&(r.object.decay=this.decay),void 0!==this.penumbra&&(r.object.penumbra=this.penumbra),void 0!==this.shadow&&(r.object.shadow=this.shadow.toJSON()),void 0!==this.target&&(r.object.target=this.target.uuid),r}}const Yl=new Matrix4,Jl=new Vector3,Kl=new Vector3;class LightShadow{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Vector2(512,512),this.mapType=ea,this.map=null,this.mapPass=null,this.matrix=new Matrix4,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Frustum,this._frameExtents=new Vector2(1,1),this._viewportCount=1,this._viewports=[new Vector4(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const r=this.camera,i=this.matrix;Jl.setFromMatrixPosition(t.matrixWorld),r.position.copy(Jl),Kl.setFromMatrixPosition(t.target.matrixWorld),r.lookAt(Kl),r.updateMatrixWorld(),Yl.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Yl),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(Yl)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.autoUpdate=t.autoUpdate,this.needsUpdate=t.needsUpdate,this.normalBias=t.normalBias,this.blurSamples=t.blurSamples,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 1!==this.intensity&&(t.intensity=this.intensity),0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class OrthographicCamera extends Camera{constructor(t=-1,r=1,i=1,a=-1,o=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=r,this.top=i,this.bottom=a,this.near=o,this.far=l,this.updateProjectionMatrix()}copy(t,r){return super.copy(t,r),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,r,i,a,o,l){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=r,this.view.offsetX=i,this.view.offsetY=a,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),r=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,a=(this.top+this.bottom)/2;let o=i-t,l=i+t,c=a+r,h=a-r;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,r=(this.top-this.bottom)/this.view.fullHeight/this.zoom;o+=t*this.view.offsetX,l=o+t*this.view.width,c-=r*this.view.offsetY,h=c-r*this.view.height}this.projectionMatrix.makeOrthographic(o,l,c,h,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const r=super.toJSON(t);return r.object.zoom=this.zoom,r.object.left=this.left,r.object.right=this.right,r.object.top=this.top,r.object.bottom=this.bottom,r.object.near=this.near,r.object.far=this.far,null!==this.view&&(r.object.view=Object.assign({},this.view)),r}}class DirectionalLightShadow extends LightShadow{constructor(){super(new OrthographicCamera(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class DirectionalLight extends Light{constructor(t,r){super(t,r),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Object3D.DEFAULT_UP),this.updateMatrix(),this.target=new Object3D,this.shadow=new DirectionalLightShadow}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class AmbientLight extends Light{constructor(t,r){super(t,r),this.isAmbientLight=!0,this.type="AmbientLight"}}new WeakMap;class ArrayCamera extends PerspectiveCamera{constructor(t=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=t}}const Zl="\\[\\]\\.:\\/",Ql=new RegExp("["+Zl+"]","g"),$l="[^"+Zl+"]",tc="[^"+Zl.replace("\\.","")+"]",ec=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",$l)+/(WCOD+)?/.source.replace("WCOD",tc)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",$l)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",$l)+"$"),nc=["material","materials","bones","map"];class PropertyBinding{constructor(t,r,i){this.path=r,this.parsedPath=i||PropertyBinding.parseTrackName(r),this.node=PropertyBinding.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,r,i){return t&&t.isAnimationObjectGroup?new PropertyBinding.Composite(t,r,i):new PropertyBinding(t,r,i)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(Ql,"")}static parseTrackName(t){const r=ec.exec(t);if(null===r)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const i={nodeName:r[2],objectName:r[3],objectIndex:r[4],propertyName:r[5],propertyIndex:r[6]},a=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==a&&-1!==a){const t=i.nodeName.substring(a+1);-1!==nc.indexOf(t)&&(i.nodeName=i.nodeName.substring(0,a),i.objectName=t)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i}static findNode(t,r){if(void 0===r||""===r||"."===r||-1===r||r===t.name||r===t.uuid)return t;if(t.skeleton){const i=t.skeleton.getBoneByName(r);if(void 0!==i)return i}if(t.children){const searchNodeSubtree=function(t){for(let i=0;i<t.length;i++){const a=t[i];if(a.name===r||a.uuid===r)return a;const o=searchNodeSubtree(a.children);if(o)return o}return null},i=searchNodeSubtree(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,r){t[r]=this.targetObject[this.propertyName]}_getValue_array(t,r){const i=this.resolvedProperty;for(let a=0,o=i.length;a!==o;++a)t[r++]=i[a]}_getValue_arrayElement(t,r){t[r]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,r){this.resolvedProperty.toArray(t,r)}_setValue_direct(t,r){this.targetObject[this.propertyName]=t[r]}_setValue_direct_setNeedsUpdate(t,r){this.targetObject[this.propertyName]=t[r],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,r){this.targetObject[this.propertyName]=t[r],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,r){const i=this.resolvedProperty;for(let a=0,o=i.length;a!==o;++a)i[a]=t[r++]}_setValue_array_setNeedsUpdate(t,r){const i=this.resolvedProperty;for(let a=0,o=i.length;a!==o;++a)i[a]=t[r++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,r){const i=this.resolvedProperty;for(let a=0,o=i.length;a!==o;++a)i[a]=t[r++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,r){this.resolvedProperty[this.propertyIndex]=t[r]}_setValue_arrayElement_setNeedsUpdate(t,r){this.resolvedProperty[this.propertyIndex]=t[r],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,r){this.resolvedProperty[this.propertyIndex]=t[r],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,r){this.resolvedProperty.fromArray(t,r)}_setValue_fromArray_setNeedsUpdate(t,r){this.resolvedProperty.fromArray(t,r),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,r){this.resolvedProperty.fromArray(t,r),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,r){this.bind(),this.getValue(t,r)}_setValue_unbound(t,r){this.bind(),this.setValue(t,r)}bind(){let t=this.node;const r=this.parsedPath,i=r.objectName,a=r.propertyName;let o=r.propertyIndex;if(t||(t=PropertyBinding.findNode(this.rootNode,r.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");if(i){let a=r.objectIndex;switch(i){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let r=0;r<t.length;r++)if(t[r].name===a){a=r;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);t=t.material.map;break;default:if(void 0===t[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[i]}if(void 0!==a){if(void 0===t[a])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[a]}}const l=t[a];if(void 0===l){const i=r.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+i+"."+a+" but it wasn't found.",t)}let c=this.Versioning.None;this.targetObject=t,!0===t.isMaterial?c=this.Versioning.NeedsUpdate:!0===t.isObject3D&&(c=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(void 0!==o){if("morphTargetInfluences"===a){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[o]&&(o=t.morphTargetDictionary[o])}h=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=o}else void 0!==l.fromArray&&void 0!==l.toArray?(h=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(h=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=a;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}PropertyBinding.Composite=class Composite{constructor(t,r,i){const a=i||PropertyBinding.parseTrackName(r);this._targetGroup=t,this._bindings=t.subscribe_(r,a)}getValue(t,r){this.bind();const i=this._targetGroup.nCachedObjects_,a=this._bindings[i];void 0!==a&&a.getValue(t,r)}setValue(t,r){const i=this._bindings;for(let a=this._targetGroup.nCachedObjects_,o=i.length;a!==o;++a)i[a].setValue(t,r)}bind(){const t=this._bindings;for(let r=this._targetGroup.nCachedObjects_,i=t.length;r!==i;++r)t[r].bind()}unbind(){const t=this._bindings;for(let r=this._targetGroup.nCachedObjects_,i=t.length;r!==i;++r)t[r].unbind()}},PropertyBinding.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},PropertyBinding.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},PropertyBinding.prototype.GetterByBindingType=[PropertyBinding.prototype._getValue_direct,PropertyBinding.prototype._getValue_array,PropertyBinding.prototype._getValue_arrayElement,PropertyBinding.prototype._getValue_toArray],PropertyBinding.prototype.SetterByBindingTypeAndVersioning=[[PropertyBinding.prototype._setValue_direct,PropertyBinding.prototype._setValue_direct_setNeedsUpdate,PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[PropertyBinding.prototype._setValue_array,PropertyBinding.prototype._setValue_array_setNeedsUpdate,PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate],[PropertyBinding.prototype._setValue_arrayElement,PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[PropertyBinding.prototype._setValue_fromArray,PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];new Float32Array(1);const rc=new Matrix4;class Raycaster{constructor(t,r,i=0,a=1/0){this.ray=new Ray(t,r),this.near=i,this.far=a,this.camera=null,this.layers=new Layers,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,r){this.ray.set(t,r)}setFromCamera(t,r){r.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(r.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(r).sub(this.ray.origin).normalize(),this.camera=r):r.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(r.near+r.far)/(r.near-r.far)).unproject(r),this.ray.direction.set(0,0,-1).transformDirection(r.matrixWorld),this.camera=r):console.error("THREE.Raycaster: Unsupported camera type: "+r.type)}setFromXRController(t){return rc.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(rc),this}intersectObject(t,r=!0,i=[]){return intersect(t,this,i,r),i.sort(ascSort),i}intersectObjects(t,r=!0,i=[]){for(let a=0,o=t.length;a<o;a++)intersect(t[a],this,i,r);return i.sort(ascSort),i}}function ascSort(t,r){return t.distance-r.distance}function intersect(t,r,i,a){let o=!0;if(t.layers.test(r.layers)){!1===t.raycast(r,i)&&(o=!1)}if(!0===o&&!0===a){const a=t.children;for(let t=0,o=a.length;t<o;t++)intersect(a[t],r,i,!0)}}class ShapePath{constructor(){this.type="ShapePath",this.color=new Color,this.subPaths=[],this.currentPath=null}moveTo(t,r){return this.currentPath=new Path,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,r),this}lineTo(t,r){return this.currentPath.lineTo(t,r),this}quadraticCurveTo(t,r,i,a){return this.currentPath.quadraticCurveTo(t,r,i,a),this}bezierCurveTo(t,r,i,a,o,l){return this.currentPath.bezierCurveTo(t,r,i,a,o,l),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function isPointInsidePolygon(t,r){const i=r.length;let a=!1;for(let o=i-1,l=0;l<i;o=l++){let i=r[o],c=r[l],h=c.x-i.x,u=c.y-i.y;if(Math.abs(u)>Number.EPSILON){if(u<0&&(i=r[l],h=-h,c=r[o],u=-u),t.y<i.y||t.y>c.y)continue;if(t.y===i.y){if(t.x===i.x)return!0}else{const r=u*(t.x-i.x)-h*(t.y-i.y);if(0===r)return!0;if(r<0)continue;a=!a}}else{if(t.y!==i.y)continue;if(c.x<=t.x&&t.x<=i.x||i.x<=t.x&&t.x<=c.x)return!0}}return a}const r=ShapeUtils.isClockWise,i=this.subPaths;if(0===i.length)return[];let a,o,l;const c=[];if(1===i.length)return o=i[0],l=new Shape,l.curves=o.curves,c.push(l),c;let h=!r(i[0].getPoints());h=t?!h:h;const u=[],d=[];let p,m,g=[],_=0;d[_]=void 0,g[_]=[];for(let l=0,c=i.length;l<c;l++)o=i[l],p=o.getPoints(),a=r(p),a=t?!a:a,a?(!h&&d[_]&&_++,d[_]={s:new Shape,p},d[_].s.curves=o.curves,h&&_++,g[_]=[]):g[_].push({h:o,p:p[0]});if(!d[0])return function toShapesNoHoles(t){const r=[];for(let i=0,a=t.length;i<a;i++){const a=t[i],o=new Shape;o.curves=a.curves,r.push(o)}return r}(i);if(d.length>1){let t=!1,r=0;for(let t=0,r=d.length;t<r;t++)u[t]=[];for(let i=0,a=d.length;i<a;i++){const a=g[i];for(let o=0;o<a.length;o++){const l=a[o];let c=!0;for(let a=0;a<d.length;a++)isPointInsidePolygon(l.p,d[a].p)&&(i!==a&&r++,c?(c=!1,u[a].push(l)):t=!0);c&&u[i].push(l)}}r>0&&!1===t&&(g=u)}for(let t=0,r=d.length;t<r;t++){l=d[t].s,c.push(l),m=g[t];for(let t=0,r=m.length;t<r;t++)l.holes.push(m[t].h)}return c}}function getByteLength(t,r,i,a){const o=function getTextureTypeByteLength(t){switch(t){case ea:case na:return{byteLength:1,components:1};case ia:case ra:case la:return{byteLength:2,components:1};case ca:case ha:return{byteLength:2,components:4};case sa:case aa:case oa:return{byteLength:4,components:1};case da:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${t}.`)}(a);switch(i){case 1021:return t*r;case ga:case _a:return t*r/o.components*o.byteLength;case 1030:case va:return t*r*2/o.components*o.byteLength;case 1022:return t*r*3/o.components*o.byteLength;case pa:case xa:return t*r*4/o.components*o.byteLength;case ya:case Ma:return Math.floor((t+3)/4)*Math.floor((r+3)/4)*8;case Sa:case ba:return Math.floor((t+3)/4)*Math.floor((r+3)/4)*16;case Ea:case Ca:return Math.max(t,16)*Math.max(r,8)/4;case Ta:case wa:return Math.max(t,8)*Math.max(r,8)/2;case Aa:case Ra:return Math.floor((t+3)/4)*Math.floor((r+3)/4)*8;case Pa:case La:return Math.floor((t+3)/4)*Math.floor((r+3)/4)*16;case Ua:return Math.floor((t+4)/5)*Math.floor((r+3)/4)*16;case Da:return Math.floor((t+4)/5)*Math.floor((r+4)/5)*16;case Ia:return Math.floor((t+5)/6)*Math.floor((r+4)/5)*16;case Na:return Math.floor((t+5)/6)*Math.floor((r+5)/6)*16;case Oa:return Math.floor((t+7)/8)*Math.floor((r+4)/5)*16;case Fa:return Math.floor((t+7)/8)*Math.floor((r+5)/6)*16;case za:return Math.floor((t+7)/8)*Math.floor((r+7)/8)*16;case Ba:return Math.floor((t+9)/10)*Math.floor((r+4)/5)*16;case Va:return Math.floor((t+9)/10)*Math.floor((r+5)/6)*16;case ka:return Math.floor((t+9)/10)*Math.floor((r+7)/8)*16;case Ga:return Math.floor((t+9)/10)*Math.floor((r+9)/10)*16;case Ha:return Math.floor((t+11)/12)*Math.floor((r+9)/10)*16;case Wa:return Math.floor((t+11)/12)*Math.floor((r+11)/12)*16;case Xa:case ja:case qa:return Math.ceil(t/4)*Math.ceil(r/4)*16;case 36283:case Ya:return Math.ceil(t/4)*Math.ceil(r/4)*8;case Ja:case Ka:return Math.ceil(t/4)*Math.ceil(r/4)*16}throw new Error(`Unable to determine texture byte length for ${i} format.`)}function WebGLAnimation(){let t=null,r=!1,i=null,a=null;function onAnimationFrame(r,o){i(r,o),a=t.requestAnimationFrame(onAnimationFrame)}return{start:function(){!0!==r&&null!==i&&(a=t.requestAnimationFrame(onAnimationFrame),r=!0)},stop:function(){t.cancelAnimationFrame(a),r=!1},setAnimationLoop:function(t){i=t},setContext:function(r){t=r}}}function WebGLAttributes(t){const r=new WeakMap;return{get:function get(t){return t.isInterleavedBufferAttribute&&(t=t.data),r.get(t)},remove:function remove(i){i.isInterleavedBufferAttribute&&(i=i.data);const a=r.get(i);a&&(t.deleteBuffer(a.buffer),r.delete(i))},update:function update(i,a){if(i.isInterleavedBufferAttribute&&(i=i.data),i.isGLBufferAttribute){const t=r.get(i);return void((!t||t.version<i.version)&&r.set(i,{buffer:i.buffer,type:i.type,bytesPerElement:i.elementSize,version:i.version}))}const o=r.get(i);if(void 0===o)r.set(i,function createBuffer(r,i){const a=r.array,o=r.usage,l=a.byteLength,c=t.createBuffer();let h;if(t.bindBuffer(i,c),t.bufferData(i,a,o),r.onUploadCallback(),a instanceof Float32Array)h=t.FLOAT;else if(a instanceof Uint16Array)h=r.isFloat16BufferAttribute?t.HALF_FLOAT:t.UNSIGNED_SHORT;else if(a instanceof Int16Array)h=t.SHORT;else if(a instanceof Uint32Array)h=t.UNSIGNED_INT;else if(a instanceof Int32Array)h=t.INT;else if(a instanceof Int8Array)h=t.BYTE;else if(a instanceof Uint8Array)h=t.UNSIGNED_BYTE;else{if(!(a instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+a);h=t.UNSIGNED_BYTE}return{buffer:c,type:h,bytesPerElement:a.BYTES_PER_ELEMENT,version:r.version,size:l}}(i,a));else if(o.version<i.version){if(o.size!==i.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");!function updateBuffer(r,i,a){const o=i.array,l=i.updateRanges;if(t.bindBuffer(a,r),0===l.length)t.bufferSubData(a,0,o);else{l.sort(((t,r)=>t.start-r.start));let r=0;for(let t=1;t<l.length;t++){const i=l[r],a=l[t];a.start<=i.start+i.count+1?i.count=Math.max(i.count,a.start+a.count-i.start):(++r,l[r]=a)}l.length=r+1;for(let r=0,i=l.length;r<i;r++){const i=l[r];t.bufferSubData(a,i.start*o.BYTES_PER_ELEMENT,o,i.start,i.count)}i.clearUpdateRanges()}i.onUploadCallback()}(o.buffer,i,a),o.version=i.version}}}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ui}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ui);const ic={alphahash_fragment:"#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE = 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv = max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales = vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha = vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases = vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\t#ifdef ALPHA_TO_COVERAGE\n\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\tif ( diffuseColor.a < alphaTest ) discard;\n\t#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_CLEARCOAT ) \n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_SHEEN ) \n\t\tsheenSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n\t#if ! defined( GL_ANGLE_multi_draw )\n\t#define gl_DrawID _gl_DrawID\n\tuniform int _gl_DrawID;\n\t#endif\n\tuniform highp sampler2D batchingTexture;\n\tuniform highp usampler2D batchingIdTexture;\n\tmat4 getBatchingMatrix( const in float i ) {\n\t\tint size = textureSize( batchingTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n\tfloat getIndirectIndex( const in int i ) {\n\t\tint size = textureSize( batchingIdTexture, 0 ).x;\n\t\tint x = i % size;\n\t\tint y = i / size;\n\t\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\n\t}\n#endif\n#ifdef USE_BATCHING_COLOR\n\tuniform sampler2D batchingColorTexture;\n\tvec3 getBatchingColor( const in float i ) {\n\t\tint size = textureSize( batchingColorTexture, 0 ).x;\n\t\tint j = int( i );\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\n\t}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\treturn vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#ifdef ALPHA_TO_COVERAGE\n\t\tfloat distanceToPlane, distanceGradient;\n\t\tfloat clipOpacity = 1.0;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\tif ( clipOpacity == 0.0 ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tfloat unionClipOpacity = 1.0;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\t\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tclipOpacity *= 1.0 - unionClipOpacity;\n\t\t#endif\n\t\tdiffuseColor.a *= clipOpacity;\n\t\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tbool clipped = true;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tif ( clipped ) discard;\n\t\t#endif\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif\n#ifdef USE_BATCHING_COLOR\n\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\n\tvColor.xyz *= batchingColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n\tmat3 bm = mat3( batchingMatrix );\n\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n\ttransformedNormal = bm * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = bm * transformedTangent;\n\t#endif\n#endif\n#ifdef USE_INSTANCING\n\tmat3 im = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n\ttransformedNormal = im * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = im * transformedTangent;\n\t#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE\n\t\temissiveColor = sRGBTransferEOTF( emissiveColor );\n\t#endif\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"vec4 LinearTransferOETF( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBTransferEOTF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform mat3 envMapRotation;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n\tuniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif ( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_DISPERSION\n\tmaterial.dispersion = dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tif( material.anisotropy == 0.0 ) {\n\t\tanisotropyV = vec2( 1.0, 0.0 );\n\t} else {\n\t\tanisotropyV /= material.anisotropy;\n\t\tmaterial.anisotropy = saturate( material.anisotropy );\n\t}\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\tfloat dispersion;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometryNormal;\n\t\tvec3 viewDir = geometryViewDir;\n\t\tvec3 position = geometryPosition;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n\tgeometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if defined( USE_LIGHT_PROBES )\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvFragDepth = 1.0 + gl_Position.w;\n\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphinstance_vertex:"#ifdef USE_INSTANCING_MORPH\n\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n\t}\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_INSTANCING_MORPH\n\t\tuniform float morphTargetBaseInfluence;\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t#endif\n\tuniform sampler2DArray morphTargetsTexture;\n\tuniform ivec2 morphTargetsTextureSize;\n\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t}\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\nconst float Inv255 = 1. / 255.;\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\nvec4 packDepthToRGBA( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec4( 0., 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec4( 1., 1., 1., 1. );\n\tfloat vuf;\n\tfloat af = modf( v * PackFactors.a, vuf );\n\tfloat bf = modf( vuf * ShiftRight8, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\n}\nvec3 packDepthToRGB( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec3( 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec3( 1., 1., 1. );\n\tfloat vuf;\n\tfloat bf = modf( v * PackFactors.b, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\n}\nvec2 packDepthToRG( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec2( 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec2( 1., 1. );\n\tfloat vuf;\n\tfloat gf = modf( v * 256., vuf );\n\treturn vec2( vuf * Inv255, gf );\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors4 );\n}\nfloat unpackRGBToDepth( const in vec3 v ) {\n\treturn dot( v, UnpackFactors3 );\n}\nfloat unpackRGToDepth( const in vec2 v ) {\n\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\n}\nvec4 pack2HalfToRGBA( const in vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( const in vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n\tmvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tfloat shadow = 1.0;\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\t\n\t\tfloat lightToPositionLength = length( lightToPosition );\n\t\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\n\t\t\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\t\tdp += shadowBias;\n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\t\tshadow = (\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t\t) * ( 1.0 / 9.0 );\n\t\t\t#else\n\t\t\t\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tint size = textureSize( boneTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 CineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.6605, - 0.1246, - 0.0182 ),\n\tvec3( - 0.5876, 1.1329, - 0.1006 ),\n\tvec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n\tvec3( 0.6274, 0.0691, 0.0164 ),\n\tvec3( 0.3293, 0.9195, 0.0880 ),\n\tvec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n\tvec3 x2 = x * x;\n\tvec3 x4 = x2 * x2;\n\treturn + 15.5 * x4 * x2\n\t\t- 40.14 * x4 * x\n\t\t+ 31.96 * x4\n\t\t- 6.868 * x2 * x\n\t\t+ 0.4298 * x2\n\t\t+ 0.1191 * x\n\t\t- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n\tconst mat3 AgXInsetMatrix = mat3(\n\t\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n\t\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n\t\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n\t);\n\tconst mat3 AgXOutsetMatrix = mat3(\n\t\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n\t\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n\t\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n\t);\n\tconst float AgxMinEv = - 12.47393;\tconst float AgxMaxEv = 4.026069;\n\tcolor *= toneMappingExposure;\n\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n\tcolor = AgXInsetMatrix * color;\n\tcolor = max( color, 1e-10 );\tcolor = log2( color );\n\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n\tcolor = clamp( color, 0.0, 1.0 );\n\tcolor = agxDefaultContrastApprox( color );\n\tcolor = AgXOutsetMatrix * color;\n\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n\tcolor = clamp( color, 0.0, 1.0 );\n\treturn color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n\tconst float StartCompression = 0.8 - 0.04;\n\tconst float Desaturation = 0.15;\n\tcolor *= toneMappingExposure;\n\tfloat x = min( color.r, min( color.g, color.b ) );\n\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n\tcolor -= offset;\n\tfloat peak = max( color.r, max( color.g, color.b ) );\n\tif ( peak < StartCompression ) return color;\n\tfloat d = 1. - StartCompression;\n\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\n\tcolor *= newPeak / peak;\n\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\n\treturn mix( color, vec3( newPeak ), g );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec4 transmittedLight;\n\t\tvec3 transmittance;\n\t\t#ifdef USE_DISPERSION\n\t\t\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\n\t\t\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\n\t\t\tfor ( int i = 0; i < 3; i ++ ) {\n\t\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\n\t\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\t\trefractionCoords += 1.0;\n\t\t\t\trefractionCoords /= 2.0;\n\t\t\t\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\n\t\t\t\ttransmittedLight[ i ] = transmissionSample[ i ];\n\t\t\t\ttransmittedLight.a += transmissionSample.a;\n\t\t\t\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\n\t\t\t}\n\t\t\ttransmittedLight.a /= 3.0;\n\t\t#else\n\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\trefractionCoords += 1.0;\n\t\t\trefractionCoords /= 2.0;\n\t\t\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\t\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\t#endif\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_BATCHING\n\t\tworldPosition = batchingMatrix * worldPosition;\n\t#endif\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#elif DEPTH_PACKING == 3202\n\t\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\n\t#elif DEPTH_PACKING == 3203\n\t\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n\tuniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n\t#endif\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix[ 3 ];\n\tvec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}"},ac={common:{diffuse:{value:new Color(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Matrix3},alphaMap:{value:null},alphaMapTransform:{value:new Matrix3},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Matrix3}},envmap:{envMap:{value:null},envMapRotation:{value:new Matrix3},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Matrix3}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Matrix3}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Matrix3},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Matrix3},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Matrix3},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Matrix3}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Matrix3}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Matrix3}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Color(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Color(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Matrix3},alphaTest:{value:0},uvTransform:{value:new Matrix3}},sprite:{diffuse:{value:new Color(16777215)},opacity:{value:1},center:{value:new Vector2(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Matrix3},alphaMap:{value:null},alphaMapTransform:{value:new Matrix3},alphaTest:{value:0}}},sc={basic:{uniforms:mergeUniforms([ac.common,ac.specularmap,ac.envmap,ac.aomap,ac.lightmap,ac.fog]),vertexShader:ic.meshbasic_vert,fragmentShader:ic.meshbasic_frag},lambert:{uniforms:mergeUniforms([ac.common,ac.specularmap,ac.envmap,ac.aomap,ac.lightmap,ac.emissivemap,ac.bumpmap,ac.normalmap,ac.displacementmap,ac.fog,ac.lights,{emissive:{value:new Color(0)}}]),vertexShader:ic.meshlambert_vert,fragmentShader:ic.meshlambert_frag},phong:{uniforms:mergeUniforms([ac.common,ac.specularmap,ac.envmap,ac.aomap,ac.lightmap,ac.emissivemap,ac.bumpmap,ac.normalmap,ac.displacementmap,ac.fog,ac.lights,{emissive:{value:new Color(0)},specular:{value:new Color(1118481)},shininess:{value:30}}]),vertexShader:ic.meshphong_vert,fragmentShader:ic.meshphong_frag},standard:{uniforms:mergeUniforms([ac.common,ac.envmap,ac.aomap,ac.lightmap,ac.emissivemap,ac.bumpmap,ac.normalmap,ac.displacementmap,ac.roughnessmap,ac.metalnessmap,ac.fog,ac.lights,{emissive:{value:new Color(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ic.meshphysical_vert,fragmentShader:ic.meshphysical_frag},toon:{uniforms:mergeUniforms([ac.common,ac.aomap,ac.lightmap,ac.emissivemap,ac.bumpmap,ac.normalmap,ac.displacementmap,ac.gradientmap,ac.fog,ac.lights,{emissive:{value:new Color(0)}}]),vertexShader:ic.meshtoon_vert,fragmentShader:ic.meshtoon_frag},matcap:{uniforms:mergeUniforms([ac.common,ac.bumpmap,ac.normalmap,ac.displacementmap,ac.fog,{matcap:{value:null}}]),vertexShader:ic.meshmatcap_vert,fragmentShader:ic.meshmatcap_frag},points:{uniforms:mergeUniforms([ac.points,ac.fog]),vertexShader:ic.points_vert,fragmentShader:ic.points_frag},dashed:{uniforms:mergeUniforms([ac.common,ac.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ic.linedashed_vert,fragmentShader:ic.linedashed_frag},depth:{uniforms:mergeUniforms([ac.common,ac.displacementmap]),vertexShader:ic.depth_vert,fragmentShader:ic.depth_frag},normal:{uniforms:mergeUniforms([ac.common,ac.bumpmap,ac.normalmap,ac.displacementmap,{opacity:{value:1}}]),vertexShader:ic.meshnormal_vert,fragmentShader:ic.meshnormal_frag},sprite:{uniforms:mergeUniforms([ac.sprite,ac.fog]),vertexShader:ic.sprite_vert,fragmentShader:ic.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ic.background_vert,fragmentShader:ic.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Matrix3}},vertexShader:ic.backgroundCube_vert,fragmentShader:ic.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ic.cube_vert,fragmentShader:ic.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ic.equirect_vert,fragmentShader:ic.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([ac.common,ac.displacementmap,{referencePosition:{value:new Vector3},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ic.distanceRGBA_vert,fragmentShader:ic.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([ac.lights,ac.fog,{color:{value:new Color(0)},opacity:{value:1}}]),vertexShader:ic.shadow_vert,fragmentShader:ic.shadow_frag}};sc.physical={uniforms:mergeUniforms([sc.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Matrix3},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Matrix3},clearcoatNormalScale:{value:new Vector2(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Matrix3},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Matrix3},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Matrix3},sheen:{value:0},sheenColor:{value:new Color(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Matrix3},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Matrix3},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Matrix3},transmissionSamplerSize:{value:new Vector2},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Matrix3},attenuationDistance:{value:0},attenuationColor:{value:new Color(0)},specularColor:{value:new Color(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Matrix3},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Matrix3},anisotropyVector:{value:new Vector2},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Matrix3}}]),vertexShader:ic.meshphysical_vert,fragmentShader:ic.meshphysical_frag};const oc={r:0,b:0,g:0},lc=new Euler,cc=new Matrix4;function WebGLBackground(t,r,i,a,o,l,c){const h=new Color(0);let u,d,p=!0===l?0:1,m=null,g=0,_=null;function getBackground(t){let a=!0===t.isScene?t.background:null;if(a&&a.isTexture){a=(t.backgroundBlurriness>0?i:r).get(a)}return a}function setClear(r,i){r.getRGB(oc,getUnlitUniformColorSpace(t)),a.buffers.color.setClear(oc.r,oc.g,oc.b,i,c)}return{getClearColor:function(){return h},setClearColor:function(t,r=1){h.set(t),p=r,setClear(h,p)},getClearAlpha:function(){return p},setClearAlpha:function(t){p=t,setClear(h,p)},render:function render(r){let i=!1;const o=getBackground(r);null===o?setClear(h,p):o&&o.isColor&&(setClear(o,1),i=!0);const l=t.xr.getEnvironmentBlendMode();"additive"===l?a.buffers.color.setClear(0,0,0,1,c):"alpha-blend"===l&&a.buffers.color.setClear(0,0,0,0,c),(t.autoClear||i)&&(a.buffers.depth.setTest(!0),a.buffers.depth.setMask(!0),a.buffers.color.setMask(!0),t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil))},addToRenderList:function addToRenderList(r,i){const a=getBackground(i);a&&(a.isCubeTexture||a.mapping===Xi)?(void 0===d&&(d=new Mesh(new BoxGeometry(1,1,1),new ShaderMaterial({name:"BackgroundCubeMaterial",uniforms:cloneUniforms(sc.backgroundCube.uniforms),vertexShader:sc.backgroundCube.vertexShader,fragmentShader:sc.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(t,r,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),o.update(d)),lc.copy(i.backgroundRotation),lc.x*=-1,lc.y*=-1,lc.z*=-1,a.isCubeTexture&&!1===a.isRenderTargetTexture&&(lc.y*=-1,lc.z*=-1),d.material.uniforms.envMap.value=a,d.material.uniforms.flipEnvMap.value=a.isCubeTexture&&!1===a.isRenderTargetTexture?-1:1,d.material.uniforms.backgroundBlurriness.value=i.backgroundBlurriness,d.material.uniforms.backgroundIntensity.value=i.backgroundIntensity,d.material.uniforms.backgroundRotation.value.setFromMatrix4(cc.makeRotationFromEuler(lc)),d.material.toneMapped=Ps.getTransfer(a.colorSpace)!==os,m===a&&g===a.version&&_===t.toneMapping||(d.material.needsUpdate=!0,m=a,g=a.version,_=t.toneMapping),d.layers.enableAll(),r.unshift(d,d.geometry,d.material,0,0,null)):a&&a.isTexture&&(void 0===u&&(u=new Mesh(new PlaneGeometry(2,2),new ShaderMaterial({name:"BackgroundMaterial",uniforms:cloneUniforms(sc.background.uniforms),vertexShader:sc.background.vertexShader,fragmentShader:sc.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),o.update(u)),u.material.uniforms.t2D.value=a,u.material.uniforms.backgroundIntensity.value=i.backgroundIntensity,u.material.toneMapped=Ps.getTransfer(a.colorSpace)!==os,!0===a.matrixAutoUpdate&&a.updateMatrix(),u.material.uniforms.uvTransform.value.copy(a.matrix),m===a&&g===a.version&&_===t.toneMapping||(u.material.needsUpdate=!0,m=a,g=a.version,_=t.toneMapping),u.layers.enableAll(),r.unshift(u,u.geometry,u.material,0,0,null))},dispose:function dispose(){void 0!==d&&(d.geometry.dispose(),d.material.dispose(),d=void 0),void 0!==u&&(u.geometry.dispose(),u.material.dispose(),u=void 0)}}}function WebGLBindingStates(t,r){const i=t.getParameter(t.MAX_VERTEX_ATTRIBS),a={},o=createBindingState(null);let l=o,c=!1;function bindVertexArrayObject(r){return t.bindVertexArray(r)}function deleteVertexArrayObject(r){return t.deleteVertexArray(r)}function createBindingState(t){const r=[],a=[],o=[];for(let t=0;t<i;t++)r[t]=0,a[t]=0,o[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:r,enabledAttributes:a,attributeDivisors:o,object:t,attributes:{},index:null}}function initAttributes(){const t=l.newAttributes;for(let r=0,i=t.length;r<i;r++)t[r]=0}function enableAttribute(t){enableAttributeAndDivisor(t,0)}function enableAttributeAndDivisor(r,i){const a=l.newAttributes,o=l.enabledAttributes,c=l.attributeDivisors;a[r]=1,0===o[r]&&(t.enableVertexAttribArray(r),o[r]=1),c[r]!==i&&(t.vertexAttribDivisor(r,i),c[r]=i)}function disableUnusedAttributes(){const r=l.newAttributes,i=l.enabledAttributes;for(let a=0,o=i.length;a<o;a++)i[a]!==r[a]&&(t.disableVertexAttribArray(a),i[a]=0)}function vertexAttribPointer(r,i,a,o,l,c,h){!0===h?t.vertexAttribIPointer(r,i,a,l,c):t.vertexAttribPointer(r,i,a,o,l,c)}function reset(){resetDefaultState(),c=!0,l!==o&&(l=o,bindVertexArrayObject(l.object))}function resetDefaultState(){o.geometry=null,o.program=null,o.wireframe=!1}return{setup:function setup(i,o,h,u,d){let p=!1;const m=function getBindingState(r,i,o){const l=!0===o.wireframe;let c=a[r.id];void 0===c&&(c={},a[r.id]=c);let h=c[i.id];void 0===h&&(h={},c[i.id]=h);let u=h[l];void 0===u&&(u=createBindingState(function createVertexArrayObject(){return t.createVertexArray()}()),h[l]=u);return u}(u,h,o);l!==m&&(l=m,bindVertexArrayObject(l.object)),p=function needsUpdate(t,r,i,a){const o=l.attributes,c=r.attributes;let h=0;const u=i.getAttributes();for(const r in u){if(u[r].location>=0){const i=o[r];let a=c[r];if(void 0===a&&("instanceMatrix"===r&&t.instanceMatrix&&(a=t.instanceMatrix),"instanceColor"===r&&t.instanceColor&&(a=t.instanceColor)),void 0===i)return!0;if(i.attribute!==a)return!0;if(a&&i.data!==a.data)return!0;h++}}return l.attributesNum!==h||l.index!==a}(i,u,h,d),p&&function saveCache(t,r,i,a){const o={},c=r.attributes;let h=0;const u=i.getAttributes();for(const r in u){if(u[r].location>=0){let i=c[r];void 0===i&&("instanceMatrix"===r&&t.instanceMatrix&&(i=t.instanceMatrix),"instanceColor"===r&&t.instanceColor&&(i=t.instanceColor));const a={};a.attribute=i,i&&i.data&&(a.data=i.data),o[r]=a,h++}}l.attributes=o,l.attributesNum=h,l.index=a}(i,u,h,d),null!==d&&r.update(d,t.ELEMENT_ARRAY_BUFFER),(p||c)&&(c=!1,function setupVertexAttributes(i,a,o,l){initAttributes();const c=l.attributes,h=o.getAttributes(),u=a.defaultAttributeValues;for(const a in h){const o=h[a];if(o.location>=0){let h=c[a];if(void 0===h&&("instanceMatrix"===a&&i.instanceMatrix&&(h=i.instanceMatrix),"instanceColor"===a&&i.instanceColor&&(h=i.instanceColor)),void 0!==h){const a=h.normalized,c=h.itemSize,u=r.get(h);if(void 0===u)continue;const d=u.buffer,p=u.type,m=u.bytesPerElement,g=p===t.INT||p===t.UNSIGNED_INT||h.gpuType===aa;if(h.isInterleavedBufferAttribute){const r=h.data,u=r.stride,_=h.offset;if(r.isInstancedInterleavedBuffer){for(let t=0;t<o.locationSize;t++)enableAttributeAndDivisor(o.location+t,r.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===l._maxInstanceCount&&(l._maxInstanceCount=r.meshPerAttribute*r.count)}else for(let t=0;t<o.locationSize;t++)enableAttribute(o.location+t);t.bindBuffer(t.ARRAY_BUFFER,d);for(let t=0;t<o.locationSize;t++)vertexAttribPointer(o.location+t,c/o.locationSize,p,a,u*m,(_+c/o.locationSize*t)*m,g)}else{if(h.isInstancedBufferAttribute){for(let t=0;t<o.locationSize;t++)enableAttributeAndDivisor(o.location+t,h.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===l._maxInstanceCount&&(l._maxInstanceCount=h.meshPerAttribute*h.count)}else for(let t=0;t<o.locationSize;t++)enableAttribute(o.location+t);t.bindBuffer(t.ARRAY_BUFFER,d);for(let t=0;t<o.locationSize;t++)vertexAttribPointer(o.location+t,c/o.locationSize,p,a,c*m,c/o.locationSize*t*m,g)}}else if(void 0!==u){const r=u[a];if(void 0!==r)switch(r.length){case 2:t.vertexAttrib2fv(o.location,r);break;case 3:t.vertexAttrib3fv(o.location,r);break;case 4:t.vertexAttrib4fv(o.location,r);break;default:t.vertexAttrib1fv(o.location,r)}}}}disableUnusedAttributes()}(i,o,h,u),null!==d&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,r.get(d).buffer))},reset,resetDefaultState,dispose:function dispose(){reset();for(const t in a){const r=a[t];for(const t in r){const i=r[t];for(const t in i)deleteVertexArrayObject(i[t].object),delete i[t];delete r[t]}delete a[t]}},releaseStatesOfGeometry:function releaseStatesOfGeometry(t){if(void 0===a[t.id])return;const r=a[t.id];for(const t in r){const i=r[t];for(const t in i)deleteVertexArrayObject(i[t].object),delete i[t];delete r[t]}delete a[t.id]},releaseStatesOfProgram:function releaseStatesOfProgram(t){for(const r in a){const i=a[r];if(void 0===i[t.id])continue;const o=i[t.id];for(const t in o)deleteVertexArrayObject(o[t].object),delete o[t];delete i[t.id]}},initAttributes,enableAttribute,disableUnusedAttributes}}function WebGLBufferRenderer(t,r,i){let a;function renderInstances(r,o,l){0!==l&&(t.drawArraysInstanced(a,r,o,l),i.update(o,a,l))}this.setMode=function setMode(t){a=t},this.render=function render(r,o){t.drawArrays(a,r,o),i.update(o,a,1)},this.renderInstances=renderInstances,this.renderMultiDraw=function renderMultiDraw(t,o,l){if(0===l)return;r.get("WEBGL_multi_draw").multiDrawArraysWEBGL(a,t,0,o,0,l);let c=0;for(let t=0;t<l;t++)c+=o[t];i.update(c,a,1)},this.renderMultiDrawInstances=function renderMultiDrawInstances(t,o,l,c){if(0===l)return;const h=r.get("WEBGL_multi_draw");if(null===h)for(let r=0;r<t.length;r++)renderInstances(t[r],o[r],c[r]);else{h.multiDrawArraysInstancedWEBGL(a,t,0,o,0,c,0,l);let r=0;for(let t=0;t<l;t++)r+=o[t]*c[t];i.update(r,a,1)}}}function WebGLCapabilities(t,r,i,a){let o;function getMaxPrecision(r){if("highp"===r){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";r="mediump"}return"mediump"===r&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let l=void 0!==i.precision?i.precision:"highp";const c=getMaxPrecision(l);c!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",c,"instead."),l=c);const h=!0===i.logarithmicDepthBuffer,u=!0===i.reverseDepthBuffer&&r.has("EXT_clip_control"),d=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),p=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS);return{isWebGL2:!0,getMaxAnisotropy:function getMaxAnisotropy(){if(void 0!==o)return o;if(!0===r.has("EXT_texture_filter_anisotropic")){const i=r.get("EXT_texture_filter_anisotropic");o=t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else o=0;return o},getMaxPrecision,textureFormatReadable:function textureFormatReadable(r){return r===pa||a.convert(r)===t.getParameter(t.IMPLEMENTATION_COLOR_READ_FORMAT)},textureTypeReadable:function textureTypeReadable(i){const o=i===la&&(r.has("EXT_color_buffer_half_float")||r.has("EXT_color_buffer_float"));return!(i!==ea&&a.convert(i)!==t.getParameter(t.IMPLEMENTATION_COLOR_READ_TYPE)&&i!==oa&&!o)},precision:l,logarithmicDepthBuffer:h,reverseDepthBuffer:u,maxTextures:d,maxVertexTextures:p,maxTextureSize:t.getParameter(t.MAX_TEXTURE_SIZE),maxCubemapSize:t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),maxAttributes:t.getParameter(t.MAX_VERTEX_ATTRIBS),maxVertexUniforms:t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),maxVaryings:t.getParameter(t.MAX_VARYING_VECTORS),maxFragmentUniforms:t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),vertexTextures:p>0,maxSamples:t.getParameter(t.MAX_SAMPLES)}}function WebGLClipping(t){const r=this;let i=null,a=0,o=!1,l=!1;const c=new Plane,h=new Matrix3,u={value:null,needsUpdate:!1};function projectPlanes(t,i,a,o){const l=null!==t?t.length:0;let d=null;if(0!==l){if(d=u.value,!0!==o||null===d){const r=a+4*l,o=i.matrixWorldInverse;h.getNormalMatrix(o),(null===d||d.length<r)&&(d=new Float32Array(r));for(let r=0,i=a;r!==l;++r,i+=4)c.copy(t[r]).applyMatrix4(o,h),c.normal.toArray(d,i),d[i+3]=c.constant}u.value=d,u.needsUpdate=!0}return r.numPlanes=l,r.numIntersection=0,d}this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(t,r){const i=0!==t.length||r||0!==a||o;return o=r,a=t.length,i},this.beginShadows=function(){l=!0,projectPlanes(null)},this.endShadows=function(){l=!1},this.setGlobalState=function(t,r){i=projectPlanes(t,r,0)},this.setState=function(c,h,d){const p=c.clippingPlanes,m=c.clipIntersection,g=c.clipShadows,_=t.get(c);if(!o||null===p||0===p.length||l&&!g)l?projectPlanes(null):function resetGlobalState(){u.value!==i&&(u.value=i,u.needsUpdate=a>0);r.numPlanes=a,r.numIntersection=0}();else{const t=l?0:a,r=4*t;let o=_.clippingState||null;u.value=o,o=projectPlanes(p,h,r,d);for(let t=0;t!==r;++t)o[t]=i[t];_.clippingState=o,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=t}}}function WebGLCubeMaps(t){let r=new WeakMap;function mapTextureMapping(t,r){return r===Hi?t.mapping=ki:r===Wi&&(t.mapping=Gi),t}function onTextureDispose(t){const i=t.target;i.removeEventListener("dispose",onTextureDispose);const a=r.get(i);void 0!==a&&(r.delete(i),a.dispose())}return{get:function get(i){if(i&&i.isTexture){const a=i.mapping;if(a===Hi||a===Wi){if(r.has(i)){return mapTextureMapping(r.get(i).texture,i.mapping)}{const a=i.image;if(a&&a.height>0){const o=new WebGLCubeRenderTarget(a.height);return o.fromEquirectangularTexture(t,i),r.set(i,o),i.addEventListener("dispose",onTextureDispose),mapTextureMapping(o.texture,i.mapping)}return null}}}return i},dispose:function dispose(){r=new WeakMap}}}const hc=[.125,.215,.35,.446,.526,.582],uc=20,dc=new OrthographicCamera,pc=new Color;let fc=null,mc=0,gc=0,_c=!1;const vc=(1+Math.sqrt(5))/2,xc=1/vc,yc=[new Vector3(-vc,xc,0),new Vector3(vc,xc,0),new Vector3(-xc,0,vc),new Vector3(xc,0,vc),new Vector3(0,vc,-xc),new Vector3(0,vc,xc),new Vector3(-1,1,-1),new Vector3(1,1,-1),new Vector3(-1,1,1),new Vector3(1,1,1)],Mc=new Vector3;class PMREMGenerator{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,r=0,i=.1,a=100,o={}){const{size:l=256,position:c=Mc}=o;fc=this._renderer.getRenderTarget(),mc=this._renderer.getActiveCubeFace(),gc=this._renderer.getActiveMipmapLevel(),_c=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(l);const h=this._allocateTargets();return h.depthBuffer=!0,this._sceneToCubeUV(t,i,a,h,c),r>0&&this._blur(h,0,0,r),this._applyPMREM(h),this._cleanup(h),h}fromEquirectangular(t,r=null){return this._fromTexture(t,r)}fromCubemap(t,r=null){return this._fromTexture(t,r)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=_getCubemapMaterial(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=_getEquirectMaterial(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(fc,mc,gc),this._renderer.xr.enabled=_c,t.scissorTest=!1,_setViewport(t,0,0,t.width,t.height)}_fromTexture(t,r){t.mapping===ki||t.mapping===Gi?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),fc=this._renderer.getRenderTarget(),mc=this._renderer.getActiveCubeFace(),gc=this._renderer.getActiveMipmapLevel(),_c=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=r||this._allocateTargets();return this._textureToCubeUV(t,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),r=4*this._cubeSize,i={magFilter:Qi,minFilter:Qi,generateMipmaps:!1,type:la,format:pa,colorSpace:as,depthBuffer:!1},a=_createRenderTarget(t,r,i);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==r){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=_createRenderTarget(t,r,i);const{_lodMax:a}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function _createPlanes(t){const r=[],i=[],a=[];let o=t;const l=t-4+1+hc.length;for(let c=0;c<l;c++){const l=Math.pow(2,o);i.push(l);let h=1/l;c>t-4?h=hc[c-t+4-1]:0===c&&(h=0),a.push(h);const u=1/(l-2),d=-u,p=1+u,m=[d,d,p,d,p,p,d,d,p,p,d,p],g=6,_=6,x=3,y=2,M=1,S=new Float32Array(x*_*g),b=new Float32Array(y*_*g),T=new Float32Array(M*_*g);for(let t=0;t<g;t++){const r=t%3*2/3-1,i=t>2?0:-1,a=[r,i,0,r+2/3,i,0,r+2/3,i+1,0,r,i,0,r+2/3,i+1,0,r,i+1,0];S.set(a,x*_*t),b.set(m,y*_*t);const o=[t,t,t,t,t,t];T.set(o,M*_*t)}const E=new BufferGeometry;E.setAttribute("position",new BufferAttribute(S,x)),E.setAttribute("uv",new BufferAttribute(b,y)),E.setAttribute("faceIndex",new BufferAttribute(T,M)),r.push(E),o>4&&o--}return{lodPlanes:r,sizeLods:i,sigmas:a}}(a)),this._blurMaterial=function _getBlurShader(t,r,i){const a=new Float32Array(uc),o=new Vector3(0,1,0),l=new ShaderMaterial({name:"SphericalGaussianBlur",defines:{n:uc,CUBEUV_TEXEL_WIDTH:1/r,CUBEUV_TEXEL_HEIGHT:1/i,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:a},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:o}},vertexShader:_getCommonVertexShader(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1});return l}(a,t,r)}return a}_compileMaterial(t){const r=new Mesh(this._lodPlanes[0],t);this._renderer.compile(r,dc)}_sceneToCubeUV(t,r,i,a,o){const l=new PerspectiveCamera(90,1,r,i),c=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],u=this._renderer,d=u.autoClear,p=u.toneMapping;u.getClearColor(pc),u.toneMapping=0,u.autoClear=!1;const m=new MeshBasicMaterial({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),g=new Mesh(new BoxGeometry,m);let _=!1;const x=t.background;x?x.isColor&&(m.color.copy(x),t.background=null,_=!0):(m.color.copy(pc),_=!0);for(let r=0;r<6;r++){const i=r%3;0===i?(l.up.set(0,c[r],0),l.position.set(o.x,o.y,o.z),l.lookAt(o.x+h[r],o.y,o.z)):1===i?(l.up.set(0,0,c[r]),l.position.set(o.x,o.y,o.z),l.lookAt(o.x,o.y+h[r],o.z)):(l.up.set(0,c[r],0),l.position.set(o.x,o.y,o.z),l.lookAt(o.x,o.y,o.z+h[r]));const d=this._cubeSize;_setViewport(a,i*d,r>2?d:0,d,d),u.setRenderTarget(a),_&&u.render(g,l),u.render(t,l)}g.geometry.dispose(),g.material.dispose(),u.toneMapping=p,u.autoClear=d,t.background=x}_textureToCubeUV(t,r){const i=this._renderer,a=t.mapping===ki||t.mapping===Gi;a?(null===this._cubemapMaterial&&(this._cubemapMaterial=_getCubemapMaterial()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=_getEquirectMaterial());const o=a?this._cubemapMaterial:this._equirectMaterial,l=new Mesh(this._lodPlanes[0],o);o.uniforms.envMap.value=t;const c=this._cubeSize;_setViewport(r,0,0,3*c,2*c),i.setRenderTarget(r),i.render(l,dc)}_applyPMREM(t){const r=this._renderer,i=r.autoClear;r.autoClear=!1;const a=this._lodPlanes.length;for(let r=1;r<a;r++){const i=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),o=yc[(a-r-1)%yc.length];this._blur(t,r-1,r,i,o)}r.autoClear=i}_blur(t,r,i,a,o){const l=this._pingPongRenderTarget;this._halfBlur(t,l,r,i,a,"latitudinal",o),this._halfBlur(l,t,i,i,a,"longitudinal",o)}_halfBlur(t,r,i,a,o,l,c){const h=this._renderer,u=this._blurMaterial;"latitudinal"!==l&&"longitudinal"!==l&&console.error("blur direction must be either latitudinal or longitudinal!");const d=new Mesh(this._lodPlanes[a],u),p=u.uniforms,m=this._sizeLods[i]-1,g=isFinite(o)?Math.PI/(2*m):2*Math.PI/39,_=o/g,x=isFinite(o)?1+Math.floor(3*_):uc;x>uc&&console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${x} samples when the maximum is set to 20`);const y=[];let M=0;for(let t=0;t<uc;++t){const r=t/_,i=Math.exp(-r*r/2);y.push(i),0===t?M+=i:t<x&&(M+=2*i)}for(let t=0;t<y.length;t++)y[t]=y[t]/M;p.envMap.value=t.texture,p.samples.value=x,p.weights.value=y,p.latitudinal.value="latitudinal"===l,c&&(p.poleAxis.value=c);const{_lodMax:S}=this;p.dTheta.value=g,p.mipInt.value=S-i;const b=this._sizeLods[a];_setViewport(r,3*b*(a>S-4?a-S+4:0),4*(this._cubeSize-b),3*b,2*b),h.setRenderTarget(r),h.render(d,dc)}}function _createRenderTarget(t,r,i){const a=new WebGLRenderTarget(t,r,i);return a.texture.mapping=Xi,a.texture.name="PMREM.cubeUv",a.scissorTest=!0,a}function _setViewport(t,r,i,a,o){t.viewport.set(r,i,a,o),t.scissor.set(r,i,a,o)}function _getEquirectMaterial(){return new ShaderMaterial({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:_getCommonVertexShader(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function _getCubemapMaterial(){return new ShaderMaterial({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:_getCommonVertexShader(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function _getCommonVertexShader(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function WebGLCubeUVMaps(t){let r=new WeakMap,i=null;function onTextureDispose(t){const i=t.target;i.removeEventListener("dispose",onTextureDispose);const a=r.get(i);void 0!==a&&(r.delete(i),a.dispose())}return{get:function get(a){if(a&&a.isTexture){const o=a.mapping,l=o===Hi||o===Wi,c=o===ki||o===Gi;if(l||c){let o=r.get(a);const h=void 0!==o?o.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==h)return null===i&&(i=new PMREMGenerator(t)),o=l?i.fromEquirectangular(a,o):i.fromCubemap(a,o),o.texture.pmremVersion=a.pmremVersion,r.set(a,o),o.texture;if(void 0!==o)return o.texture;{const h=a.image;return l&&h&&h.height>0||c&&h&&function isCubeTextureComplete(t){let r=0;const i=6;for(let a=0;a<i;a++)void 0!==t[a]&&r++;return r===i}(h)?(null===i&&(i=new PMREMGenerator(t)),o=l?i.fromEquirectangular(a):i.fromCubemap(a),o.texture.pmremVersion=a.pmremVersion,r.set(a,o),a.addEventListener("dispose",onTextureDispose),o.texture):null}}}return a},dispose:function dispose(){r=new WeakMap,null!==i&&(i.dispose(),i=null)}}}function WebGLExtensions(t){const r={};function getExtension(i){if(void 0!==r[i])return r[i];let a;switch(i){case"WEBGL_depth_texture":a=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":a=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":a=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":a=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:a=t.getExtension(i)}return r[i]=a,a}return{has:function(t){return null!==getExtension(t)},init:function(){getExtension("EXT_color_buffer_float"),getExtension("WEBGL_clip_cull_distance"),getExtension("OES_texture_float_linear"),getExtension("EXT_color_buffer_half_float"),getExtension("WEBGL_multisampled_render_to_texture"),getExtension("WEBGL_render_shared_exponent")},get:function(t){const r=getExtension(t);return null===r&&warnOnce("THREE.WebGLRenderer: "+t+" extension not supported."),r}}}function WebGLGeometries(t,r,i,a){const o={},l=new WeakMap;function onGeometryDispose(t){const c=t.target;null!==c.index&&r.remove(c.index);for(const t in c.attributes)r.remove(c.attributes[t]);c.removeEventListener("dispose",onGeometryDispose),delete o[c.id];const h=l.get(c);h&&(r.remove(h),l.delete(c)),a.releaseStatesOfGeometry(c),!0===c.isInstancedBufferGeometry&&delete c._maxInstanceCount,i.memory.geometries--}function updateWireframeAttribute(t){const i=[],a=t.index,o=t.attributes.position;let c=0;if(null!==a){const t=a.array;c=a.version;for(let r=0,a=t.length;r<a;r+=3){const a=t[r+0],o=t[r+1],l=t[r+2];i.push(a,o,o,l,l,a)}}else{if(void 0===o)return;{const t=o.array;c=o.version;for(let r=0,a=t.length/3-1;r<a;r+=3){const t=r+0,a=r+1,o=r+2;i.push(t,a,a,o,o,t)}}}const h=new(arrayNeedsUint32(i)?Uint32BufferAttribute:Uint16BufferAttribute)(i,1);h.version=c;const u=l.get(t);u&&r.remove(u),l.set(t,h)}return{get:function get(t,r){return!0===o[r.id]||(r.addEventListener("dispose",onGeometryDispose),o[r.id]=!0,i.memory.geometries++),r},update:function update(i){const a=i.attributes;for(const i in a)r.update(a[i],t.ARRAY_BUFFER)},getWireframeAttribute:function getWireframeAttribute(t){const r=l.get(t);if(r){const i=t.index;null!==i&&r.version<i.version&&updateWireframeAttribute(t)}else updateWireframeAttribute(t);return l.get(t)}}}function WebGLIndexedBufferRenderer(t,r,i){let a,o,l;function renderInstances(r,c,h){0!==h&&(t.drawElementsInstanced(a,c,o,r*l,h),i.update(c,a,h))}this.setMode=function setMode(t){a=t},this.setIndex=function setIndex(t){o=t.type,l=t.bytesPerElement},this.render=function render(r,c){t.drawElements(a,c,o,r*l),i.update(c,a,1)},this.renderInstances=renderInstances,this.renderMultiDraw=function renderMultiDraw(t,l,c){if(0===c)return;r.get("WEBGL_multi_draw").multiDrawElementsWEBGL(a,l,0,o,t,0,c);let h=0;for(let t=0;t<c;t++)h+=l[t];i.update(h,a,1)},this.renderMultiDrawInstances=function renderMultiDrawInstances(t,c,h,u){if(0===h)return;const d=r.get("WEBGL_multi_draw");if(null===d)for(let r=0;r<t.length;r++)renderInstances(t[r]/l,c[r],u[r]);else{d.multiDrawElementsInstancedWEBGL(a,c,0,o,t,0,u,0,h);let r=0;for(let t=0;t<h;t++)r+=c[t]*u[t];i.update(r,a,1)}}}function WebGLInfo(t){const r={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:r,programs:null,autoReset:!0,reset:function reset(){r.calls=0,r.triangles=0,r.points=0,r.lines=0},update:function update(i,a,o){switch(r.calls++,a){case t.TRIANGLES:r.triangles+=o*(i/3);break;case t.LINES:r.lines+=o*(i/2);break;case t.LINE_STRIP:r.lines+=o*(i-1);break;case t.LINE_LOOP:r.lines+=o*i;break;case t.POINTS:r.points+=o*i;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a)}}}}function WebGLMorphtargets(t,r,i){const a=new WeakMap,o=new Vector4;return{update:function update(l,c,h){const u=l.morphTargetInfluences,d=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,p=void 0!==d?d.length:0;let m=a.get(c);if(void 0===m||m.count!==p){void 0!==m&&m.texture.dispose();const g=void 0!==c.morphAttributes.position,_=void 0!==c.morphAttributes.normal,x=void 0!==c.morphAttributes.color,y=c.morphAttributes.position||[],M=c.morphAttributes.normal||[],S=c.morphAttributes.color||[];let b=0;!0===g&&(b=1),!0===_&&(b=2),!0===x&&(b=3);let T=c.attributes.position.count*b,E=1;T>r.maxTextureSize&&(E=Math.ceil(T/r.maxTextureSize),T=r.maxTextureSize);const w=new Float32Array(T*E*4*p),C=new DataArrayTexture(w,T,E,p);C.type=oa,C.needsUpdate=!0;const A=4*b;for(let R=0;R<p;R++){const P=y[R],L=M[R],U=S[R],D=T*E*4*R;for(let I=0;I<P.count;I++){const N=I*A;!0===g&&(o.fromBufferAttribute(P,I),w[D+N+0]=o.x,w[D+N+1]=o.y,w[D+N+2]=o.z,w[D+N+3]=0),!0===_&&(o.fromBufferAttribute(L,I),w[D+N+4]=o.x,w[D+N+5]=o.y,w[D+N+6]=o.z,w[D+N+7]=0),!0===x&&(o.fromBufferAttribute(U,I),w[D+N+8]=o.x,w[D+N+9]=o.y,w[D+N+10]=o.z,w[D+N+11]=4===U.itemSize?o.w:1)}}function disposeTexture(){C.dispose(),a.delete(c),c.removeEventListener("dispose",disposeTexture)}m={count:p,texture:C,size:new Vector2(T,E)},a.set(c,m),c.addEventListener("dispose",disposeTexture)}if(!0===l.isInstancedMesh&&null!==l.morphTexture)h.getUniforms().setValue(t,"morphTexture",l.morphTexture,i);else{let O=0;for(let B=0;B<u.length;B++)O+=u[B];const z=c.morphTargetsRelative?1:1-O;h.getUniforms().setValue(t,"morphTargetBaseInfluence",z),h.getUniforms().setValue(t,"morphTargetInfluences",u)}h.getUniforms().setValue(t,"morphTargetsTexture",m.texture,i),h.getUniforms().setValue(t,"morphTargetsTextureSize",m.size)}}}function WebGLObjects(t,r,i,a){let o=new WeakMap;function onInstancedMeshDispose(t){const r=t.target;r.removeEventListener("dispose",onInstancedMeshDispose),i.remove(r.instanceMatrix),null!==r.instanceColor&&i.remove(r.instanceColor)}return{update:function update(l){const c=a.render.frame,h=l.geometry,u=r.get(l,h);if(o.get(u)!==c&&(r.update(u),o.set(u,c)),l.isInstancedMesh&&(!1===l.hasEventListener("dispose",onInstancedMeshDispose)&&l.addEventListener("dispose",onInstancedMeshDispose),o.get(l)!==c&&(i.update(l.instanceMatrix,t.ARRAY_BUFFER),null!==l.instanceColor&&i.update(l.instanceColor,t.ARRAY_BUFFER),o.set(l,c))),l.isSkinnedMesh){const t=l.skeleton;o.get(t)!==c&&(t.update(),o.set(t,c))}return u},dispose:function dispose(){o=new WeakMap}}}const Sc=new Texture,bc=new DepthTexture(1,1),Tc=new DataArrayTexture,Ec=new Data3DTexture,wc=new CubeTexture,Cc=[],Ac=[],Rc=new Float32Array(16),Pc=new Float32Array(9),Lc=new Float32Array(4);function flatten(t,r,i){const a=t[0];if(a<=0||a>0)return t;const o=r*i;let l=Cc[o];if(void 0===l&&(l=new Float32Array(o),Cc[o]=l),0!==r){a.toArray(l,0);for(let a=1,o=0;a!==r;++a)o+=i,t[a].toArray(l,o)}return l}function arraysEqual(t,r){if(t.length!==r.length)return!1;for(let i=0,a=t.length;i<a;i++)if(t[i]!==r[i])return!1;return!0}function copyArray(t,r){for(let i=0,a=r.length;i<a;i++)t[i]=r[i]}function allocTexUnits(t,r){let i=Ac[r];void 0===i&&(i=new Int32Array(r),Ac[r]=i);for(let a=0;a!==r;++a)i[a]=t.allocateTextureUnit();return i}function setValueV1f(t,r){const i=this.cache;i[0]!==r&&(t.uniform1f(this.addr,r),i[0]=r)}function setValueV2f(t,r){const i=this.cache;if(void 0!==r.x)i[0]===r.x&&i[1]===r.y||(t.uniform2f(this.addr,r.x,r.y),i[0]=r.x,i[1]=r.y);else{if(arraysEqual(i,r))return;t.uniform2fv(this.addr,r),copyArray(i,r)}}function setValueV3f(t,r){const i=this.cache;if(void 0!==r.x)i[0]===r.x&&i[1]===r.y&&i[2]===r.z||(t.uniform3f(this.addr,r.x,r.y,r.z),i[0]=r.x,i[1]=r.y,i[2]=r.z);else if(void 0!==r.r)i[0]===r.r&&i[1]===r.g&&i[2]===r.b||(t.uniform3f(this.addr,r.r,r.g,r.b),i[0]=r.r,i[1]=r.g,i[2]=r.b);else{if(arraysEqual(i,r))return;t.uniform3fv(this.addr,r),copyArray(i,r)}}function setValueV4f(t,r){const i=this.cache;if(void 0!==r.x)i[0]===r.x&&i[1]===r.y&&i[2]===r.z&&i[3]===r.w||(t.uniform4f(this.addr,r.x,r.y,r.z,r.w),i[0]=r.x,i[1]=r.y,i[2]=r.z,i[3]=r.w);else{if(arraysEqual(i,r))return;t.uniform4fv(this.addr,r),copyArray(i,r)}}function setValueM2(t,r){const i=this.cache,a=r.elements;if(void 0===a){if(arraysEqual(i,r))return;t.uniformMatrix2fv(this.addr,!1,r),copyArray(i,r)}else{if(arraysEqual(i,a))return;Lc.set(a),t.uniformMatrix2fv(this.addr,!1,Lc),copyArray(i,a)}}function setValueM3(t,r){const i=this.cache,a=r.elements;if(void 0===a){if(arraysEqual(i,r))return;t.uniformMatrix3fv(this.addr,!1,r),copyArray(i,r)}else{if(arraysEqual(i,a))return;Pc.set(a),t.uniformMatrix3fv(this.addr,!1,Pc),copyArray(i,a)}}function setValueM4(t,r){const i=this.cache,a=r.elements;if(void 0===a){if(arraysEqual(i,r))return;t.uniformMatrix4fv(this.addr,!1,r),copyArray(i,r)}else{if(arraysEqual(i,a))return;Rc.set(a),t.uniformMatrix4fv(this.addr,!1,Rc),copyArray(i,a)}}function setValueV1i(t,r){const i=this.cache;i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r)}function setValueV2i(t,r){const i=this.cache;if(void 0!==r.x)i[0]===r.x&&i[1]===r.y||(t.uniform2i(this.addr,r.x,r.y),i[0]=r.x,i[1]=r.y);else{if(arraysEqual(i,r))return;t.uniform2iv(this.addr,r),copyArray(i,r)}}function setValueV3i(t,r){const i=this.cache;if(void 0!==r.x)i[0]===r.x&&i[1]===r.y&&i[2]===r.z||(t.uniform3i(this.addr,r.x,r.y,r.z),i[0]=r.x,i[1]=r.y,i[2]=r.z);else{if(arraysEqual(i,r))return;t.uniform3iv(this.addr,r),copyArray(i,r)}}function setValueV4i(t,r){const i=this.cache;if(void 0!==r.x)i[0]===r.x&&i[1]===r.y&&i[2]===r.z&&i[3]===r.w||(t.uniform4i(this.addr,r.x,r.y,r.z,r.w),i[0]=r.x,i[1]=r.y,i[2]=r.z,i[3]=r.w);else{if(arraysEqual(i,r))return;t.uniform4iv(this.addr,r),copyArray(i,r)}}function setValueV1ui(t,r){const i=this.cache;i[0]!==r&&(t.uniform1ui(this.addr,r),i[0]=r)}function setValueV2ui(t,r){const i=this.cache;if(void 0!==r.x)i[0]===r.x&&i[1]===r.y||(t.uniform2ui(this.addr,r.x,r.y),i[0]=r.x,i[1]=r.y);else{if(arraysEqual(i,r))return;t.uniform2uiv(this.addr,r),copyArray(i,r)}}function setValueV3ui(t,r){const i=this.cache;if(void 0!==r.x)i[0]===r.x&&i[1]===r.y&&i[2]===r.z||(t.uniform3ui(this.addr,r.x,r.y,r.z),i[0]=r.x,i[1]=r.y,i[2]=r.z);else{if(arraysEqual(i,r))return;t.uniform3uiv(this.addr,r),copyArray(i,r)}}function setValueV4ui(t,r){const i=this.cache;if(void 0!==r.x)i[0]===r.x&&i[1]===r.y&&i[2]===r.z&&i[3]===r.w||(t.uniform4ui(this.addr,r.x,r.y,r.z,r.w),i[0]=r.x,i[1]=r.y,i[2]=r.z,i[3]=r.w);else{if(arraysEqual(i,r))return;t.uniform4uiv(this.addr,r),copyArray(i,r)}}function setValueT1(t,r,i){const a=this.cache,o=i.allocateTextureUnit();let l;a[0]!==o&&(t.uniform1i(this.addr,o),a[0]=o),this.type===t.SAMPLER_2D_SHADOW?(bc.compareFunction=515,l=bc):l=Sc,i.setTexture2D(r||l,o)}function setValueT3D1(t,r,i){const a=this.cache,o=i.allocateTextureUnit();a[0]!==o&&(t.uniform1i(this.addr,o),a[0]=o),i.setTexture3D(r||Ec,o)}function setValueT6(t,r,i){const a=this.cache,o=i.allocateTextureUnit();a[0]!==o&&(t.uniform1i(this.addr,o),a[0]=o),i.setTextureCube(r||wc,o)}function setValueT2DArray1(t,r,i){const a=this.cache,o=i.allocateTextureUnit();a[0]!==o&&(t.uniform1i(this.addr,o),a[0]=o),i.setTexture2DArray(r||Tc,o)}function setValueV1fArray(t,r){t.uniform1fv(this.addr,r)}function setValueV2fArray(t,r){const i=flatten(r,this.size,2);t.uniform2fv(this.addr,i)}function setValueV3fArray(t,r){const i=flatten(r,this.size,3);t.uniform3fv(this.addr,i)}function setValueV4fArray(t,r){const i=flatten(r,this.size,4);t.uniform4fv(this.addr,i)}function setValueM2Array(t,r){const i=flatten(r,this.size,4);t.uniformMatrix2fv(this.addr,!1,i)}function setValueM3Array(t,r){const i=flatten(r,this.size,9);t.uniformMatrix3fv(this.addr,!1,i)}function setValueM4Array(t,r){const i=flatten(r,this.size,16);t.uniformMatrix4fv(this.addr,!1,i)}function setValueV1iArray(t,r){t.uniform1iv(this.addr,r)}function setValueV2iArray(t,r){t.uniform2iv(this.addr,r)}function setValueV3iArray(t,r){t.uniform3iv(this.addr,r)}function setValueV4iArray(t,r){t.uniform4iv(this.addr,r)}function setValueV1uiArray(t,r){t.uniform1uiv(this.addr,r)}function setValueV2uiArray(t,r){t.uniform2uiv(this.addr,r)}function setValueV3uiArray(t,r){t.uniform3uiv(this.addr,r)}function setValueV4uiArray(t,r){t.uniform4uiv(this.addr,r)}function setValueT1Array(t,r,i){const a=this.cache,o=r.length,l=allocTexUnits(i,o);arraysEqual(a,l)||(t.uniform1iv(this.addr,l),copyArray(a,l));for(let t=0;t!==o;++t)i.setTexture2D(r[t]||Sc,l[t])}function setValueT3DArray(t,r,i){const a=this.cache,o=r.length,l=allocTexUnits(i,o);arraysEqual(a,l)||(t.uniform1iv(this.addr,l),copyArray(a,l));for(let t=0;t!==o;++t)i.setTexture3D(r[t]||Ec,l[t])}function setValueT6Array(t,r,i){const a=this.cache,o=r.length,l=allocTexUnits(i,o);arraysEqual(a,l)||(t.uniform1iv(this.addr,l),copyArray(a,l));for(let t=0;t!==o;++t)i.setTextureCube(r[t]||wc,l[t])}function setValueT2DArrayArray(t,r,i){const a=this.cache,o=r.length,l=allocTexUnits(i,o);arraysEqual(a,l)||(t.uniform1iv(this.addr,l),copyArray(a,l));for(let t=0;t!==o;++t)i.setTexture2DArray(r[t]||Tc,l[t])}class SingleUniform{constructor(t,r,i){this.id=t,this.addr=i,this.cache=[],this.type=r.type,this.setValue=function getSingularSetter(t){switch(t){case 5126:return setValueV1f;case 35664:return setValueV2f;case 35665:return setValueV3f;case 35666:return setValueV4f;case 35674:return setValueM2;case 35675:return setValueM3;case 35676:return setValueM4;case 5124:case 35670:return setValueV1i;case 35667:case 35671:return setValueV2i;case 35668:case 35672:return setValueV3i;case 35669:case 35673:return setValueV4i;case 5125:return setValueV1ui;case 36294:return setValueV2ui;case 36295:return setValueV3ui;case 36296:return setValueV4ui;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1;case 35679:case 36299:case 36307:return setValueT3D1;case 35680:case 36300:case 36308:case 36293:return setValueT6;case 36289:case 36303:case 36311:case 36292:return setValueT2DArray1}}(r.type)}}class PureArrayUniform{constructor(t,r,i){this.id=t,this.addr=i,this.cache=[],this.type=r.type,this.size=r.size,this.setValue=function getPureArraySetter(t){switch(t){case 5126:return setValueV1fArray;case 35664:return setValueV2fArray;case 35665:return setValueV3fArray;case 35666:return setValueV4fArray;case 35674:return setValueM2Array;case 35675:return setValueM3Array;case 35676:return setValueM4Array;case 5124:case 35670:return setValueV1iArray;case 35667:case 35671:return setValueV2iArray;case 35668:case 35672:return setValueV3iArray;case 35669:case 35673:return setValueV4iArray;case 5125:return setValueV1uiArray;case 36294:return setValueV2uiArray;case 36295:return setValueV3uiArray;case 36296:return setValueV4uiArray;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1Array;case 35679:case 36299:case 36307:return setValueT3DArray;case 35680:case 36300:case 36308:case 36293:return setValueT6Array;case 36289:case 36303:case 36311:case 36292:return setValueT2DArrayArray}}(r.type)}}class StructuredUniform{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,r,i){const a=this.seq;for(let o=0,l=a.length;o!==l;++o){const l=a[o];l.setValue(t,r[l.id],i)}}}const Uc=/(\w+)(\])?(\[|\.)?/g;function addUniform(t,r){t.seq.push(r),t.map[r.id]=r}function parseUniform(t,r,i){const a=t.name,o=a.length;for(Uc.lastIndex=0;;){const l=Uc.exec(a),c=Uc.lastIndex;let h=l[1];const u="]"===l[2],d=l[3];if(u&&(h|=0),void 0===d||"["===d&&c+2===o){addUniform(i,void 0===d?new SingleUniform(h,t,r):new PureArrayUniform(h,t,r));break}{let t=i.map[h];void 0===t&&(t=new StructuredUniform(h),addUniform(i,t)),i=t}}}class WebGLUniforms{constructor(t,r){this.seq=[],this.map={};const i=t.getProgramParameter(r,t.ACTIVE_UNIFORMS);for(let a=0;a<i;++a){const i=t.getActiveUniform(r,a);parseUniform(i,t.getUniformLocation(r,i.name),this)}}setValue(t,r,i,a){const o=this.map[r];void 0!==o&&o.setValue(t,i,a)}setOptional(t,r,i){const a=r[i];void 0!==a&&this.setValue(t,i,a)}static upload(t,r,i,a){for(let o=0,l=r.length;o!==l;++o){const l=r[o],c=i[l.id];!1!==c.needsUpdate&&l.setValue(t,c.value,a)}}static seqWithValue(t,r){const i=[];for(let a=0,o=t.length;a!==o;++a){const o=t[a];o.id in r&&i.push(o)}return i}}function WebGLShader(t,r,i){const a=t.createShader(r);return t.shaderSource(a,i),t.compileShader(a),a}let Dc=0;const Ic=new Matrix3;function getShaderErrors(t,r,i){const a=t.getShaderParameter(r,t.COMPILE_STATUS),o=t.getShaderInfoLog(r).trim();if(a&&""===o)return"";const l=/ERROR: 0:(\d+)/.exec(o);if(l){const a=parseInt(l[1]);return i.toUpperCase()+"\n\n"+o+"\n\n"+function handleSource(t,r){const i=t.split("\n"),a=[],o=Math.max(r-6,0),l=Math.min(r+6,i.length);for(let t=o;t<l;t++){const o=t+1;a.push(`${o===r?">":" "} ${o}: ${i[t]}`)}return a.join("\n")}(t.getShaderSource(r),a)}return o}function getTexelEncodingFunction(t,r){const i=function getEncodingComponents(t){Ps._getMatrix(Ic,Ps.workingColorSpace,t);const r=`mat3( ${Ic.elements.map((t=>t.toFixed(4)))} )`;switch(Ps.getTransfer(t)){case ss:return[r,"LinearTransferOETF"];case os:return[r,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",t),[r,"LinearTransferOETF"]}}(r);return[`vec4 ${t}( vec4 value ) {`,`\treturn ${i[1]}( vec4( value.rgb * ${i[0]}, value.a ) );`,"}"].join("\n")}function getToneMappingFunction(t,r){let i;switch(r){case 1:i="Linear";break;case 2:i="Reinhard";break;case 3:i="Cineon";break;case 4:i="ACESFilmic";break;case 6:i="AgX";break;case 7:i="Neutral";break;case 5:i="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",r),i="Linear"}return"vec3 "+t+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}const Nc=new Vector3;function getLuminanceFunction(){Ps.getLuminanceCoefficients(Nc);return["float luminance( const in vec3 rgb ) {",`\tconst vec3 weights = vec3( ${Nc.x.toFixed(4)}, ${Nc.y.toFixed(4)}, ${Nc.z.toFixed(4)} );`,"\treturn dot( weights, rgb );","}"].join("\n")}function filterEmptyLine(t){return""!==t}function replaceLightNums(t,r){const i=r.numSpotLightShadows+r.numSpotLightMaps-r.numSpotLightShadowsWithMaps;return t.replace(/NUM_DIR_LIGHTS/g,r.numDirLights).replace(/NUM_SPOT_LIGHTS/g,r.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,r.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,i).replace(/NUM_RECT_AREA_LIGHTS/g,r.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,r.numPointLights).replace(/NUM_HEMI_LIGHTS/g,r.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,r.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,r.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,r.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,r.numPointLightShadows)}function replaceClippingPlaneNums(t,r){return t.replace(/NUM_CLIPPING_PLANES/g,r.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,r.numClippingPlanes-r.numClipIntersection)}const Oc=/^[ \t]*#include +<([\w\d./]+)>/gm;function resolveIncludes(t){return t.replace(Oc,includeReplacer)}const Fc=new Map;function includeReplacer(t,r){let i=ic[r];if(void 0===i){const t=Fc.get(r);if(void 0===t)throw new Error("Can not resolve #include <"+r+">");i=ic[t],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',r,t)}return resolveIncludes(i)}const zc=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function unrollLoops(t){return t.replace(zc,loopReplacer)}function loopReplacer(t,r,i,a){let o="";for(let t=parseInt(r);t<parseInt(i);t++)o+=a.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return o}function generatePrecision(t){let r=`precision ${t.precision} float;\n\tprecision ${t.precision} int;\n\tprecision ${t.precision} sampler2D;\n\tprecision ${t.precision} samplerCube;\n\tprecision ${t.precision} sampler3D;\n\tprecision ${t.precision} sampler2DArray;\n\tprecision ${t.precision} sampler2DShadow;\n\tprecision ${t.precision} samplerCubeShadow;\n\tprecision ${t.precision} sampler2DArrayShadow;\n\tprecision ${t.precision} isampler2D;\n\tprecision ${t.precision} isampler3D;\n\tprecision ${t.precision} isamplerCube;\n\tprecision ${t.precision} isampler2DArray;\n\tprecision ${t.precision} usampler2D;\n\tprecision ${t.precision} usampler3D;\n\tprecision ${t.precision} usamplerCube;\n\tprecision ${t.precision} usampler2DArray;\n\t`;return"highp"===t.precision?r+="\n#define HIGH_PRECISION":"mediump"===t.precision?r+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(r+="\n#define LOW_PRECISION"),r}function WebGLProgram(t,r,i,a){const o=t.getContext(),l=i.defines;let c=i.vertexShader,h=i.fragmentShader;const u=function generateShadowMapTypeDefine(t){let r="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?r="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?r="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(r="SHADOWMAP_TYPE_VSM"),r}(i),d=function generateEnvMapTypeDefine(t){let r="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case ki:case Gi:r="ENVMAP_TYPE_CUBE";break;case Xi:r="ENVMAP_TYPE_CUBE_UV"}return r}(i),p=function generateEnvMapModeDefine(t){let r="ENVMAP_MODE_REFLECTION";t.envMap&&t.envMapMode===Gi&&(r="ENVMAP_MODE_REFRACTION");return r}(i),m=function generateEnvMapBlendingDefine(t){let r="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:r="ENVMAP_BLENDING_MULTIPLY";break;case 1:r="ENVMAP_BLENDING_MIX";break;case 2:r="ENVMAP_BLENDING_ADD"}return r}(i),g=function generateCubeUVSize(t){const r=t.envMapCubeUVHeight;if(null===r)return null;const i=Math.log2(r)-2,a=1/r;return{texelWidth:1/(3*Math.max(Math.pow(2,i),112)),texelHeight:a,maxMip:i}}(i),_=function generateVertexExtensions(t){return[t.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",t.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(filterEmptyLine).join("\n")}(i),x=function generateDefines(t){const r=[];for(const i in t){const a=t[i];!1!==a&&r.push("#define "+i+" "+a)}return r.join("\n")}(l),y=o.createProgram();let M,S,b=i.glslVersion?"#version "+i.glslVersion+"\n":"";i.isRawShaderMaterial?(M=["#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,x].filter(filterEmptyLine).join("\n"),M.length>0&&(M+="\n"),S=["#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,x].filter(filterEmptyLine).join("\n"),S.length>0&&(S+="\n")):(M=[generatePrecision(i),"#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,x,i.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",i.batching?"#define USE_BATCHING":"",i.batchingColor?"#define USE_BATCHING_COLOR":"",i.instancing?"#define USE_INSTANCING":"",i.instancingColor?"#define USE_INSTANCING_COLOR":"",i.instancingMorph?"#define USE_INSTANCING_MORPH":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+p:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",i.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",i.displacementMap?"#define USE_DISPLACEMENTMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.anisotropy?"#define USE_ANISOTROPY":"",i.anisotropyMap?"#define USE_ANISOTROPYMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",i.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.alphaHash?"#define USE_ALPHAHASH":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",i.mapUv?"#define MAP_UV "+i.mapUv:"",i.alphaMapUv?"#define ALPHAMAP_UV "+i.alphaMapUv:"",i.lightMapUv?"#define LIGHTMAP_UV "+i.lightMapUv:"",i.aoMapUv?"#define AOMAP_UV "+i.aoMapUv:"",i.emissiveMapUv?"#define EMISSIVEMAP_UV "+i.emissiveMapUv:"",i.bumpMapUv?"#define BUMPMAP_UV "+i.bumpMapUv:"",i.normalMapUv?"#define NORMALMAP_UV "+i.normalMapUv:"",i.displacementMapUv?"#define DISPLACEMENTMAP_UV "+i.displacementMapUv:"",i.metalnessMapUv?"#define METALNESSMAP_UV "+i.metalnessMapUv:"",i.roughnessMapUv?"#define ROUGHNESSMAP_UV "+i.roughnessMapUv:"",i.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+i.anisotropyMapUv:"",i.clearcoatMapUv?"#define CLEARCOATMAP_UV "+i.clearcoatMapUv:"",i.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+i.clearcoatNormalMapUv:"",i.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+i.clearcoatRoughnessMapUv:"",i.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+i.iridescenceMapUv:"",i.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+i.iridescenceThicknessMapUv:"",i.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+i.sheenColorMapUv:"",i.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+i.sheenRoughnessMapUv:"",i.specularMapUv?"#define SPECULARMAP_UV "+i.specularMapUv:"",i.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+i.specularColorMapUv:"",i.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+i.specularIntensityMapUv:"",i.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+i.transmissionMapUv:"",i.thicknessMapUv?"#define THICKNESSMAP_UV "+i.thicknessMapUv:"",i.vertexTangents&&!1===i.flatShading?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUv1s?"#define USE_UV1":"",i.vertexUv2s?"#define USE_UV2":"",i.vertexUv3s?"#define USE_UV3":"",i.pointsUvs?"#define USE_POINTS_UV":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.morphColors?"#define USE_MORPHCOLORS":"",i.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+i.morphTextureStride:"",i.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+i.morphTargetsCount:"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+u:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.numLightProbes>0?"#define USE_LIGHT_PROBES":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","\tuniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(filterEmptyLine).join("\n"),S=[generatePrecision(i),"#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,x,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+d:"",i.envMap?"#define "+p:"",i.envMap?"#define "+m:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",i.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.anisotropy?"#define USE_ANISOTROPY":"",i.anisotropyMap?"#define USE_ANISOTROPYMAP":"",i.clearcoat?"#define USE_CLEARCOAT":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.dispersion?"#define USE_DISPERSION":"",i.iridescence?"#define USE_IRIDESCENCE":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",i.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.alphaTest?"#define USE_ALPHATEST":"",i.alphaHash?"#define USE_ALPHAHASH":"",i.sheen?"#define USE_SHEEN":"",i.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.vertexTangents&&!1===i.flatShading?"#define USE_TANGENT":"",i.vertexColors||i.instancingColor||i.batchingColor?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUv1s?"#define USE_UV1":"",i.vertexUv2s?"#define USE_UV2":"",i.vertexUv3s?"#define USE_UV3":"",i.pointsUvs?"#define USE_POINTS_UV":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+u:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.numLightProbes>0?"#define USE_LIGHT_PROBES":"",i.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",i.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==i.toneMapping?"#define TONE_MAPPING":"",0!==i.toneMapping?ic.tonemapping_pars_fragment:"",0!==i.toneMapping?getToneMappingFunction("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",i.opaque?"#define OPAQUE":"",ic.colorspace_pars_fragment,getTexelEncodingFunction("linearToOutputTexel",i.outputColorSpace),getLuminanceFunction(),i.useDepthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(filterEmptyLine).join("\n")),c=resolveIncludes(c),c=replaceLightNums(c,i),c=replaceClippingPlaneNums(c,i),h=resolveIncludes(h),h=replaceLightNums(h,i),h=replaceClippingPlaneNums(h,i),c=unrollLoops(c),h=unrollLoops(h),!0!==i.isRawShaderMaterial&&(b="#version 300 es\n",M=[_,"#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+M,S=["#define varying in",i.glslVersion===vs?"":"layout(location = 0) out highp vec4 pc_fragColor;",i.glslVersion===vs?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+S);const T=b+M+c,E=b+S+h,w=WebGLShader(o,o.VERTEX_SHADER,T),C=WebGLShader(o,o.FRAGMENT_SHADER,E);function onFirstUse(r){if(t.debug.checkShaderErrors){const i=o.getProgramInfoLog(y).trim(),a=o.getShaderInfoLog(w).trim(),l=o.getShaderInfoLog(C).trim();let c=!0,h=!0;if(!1===o.getProgramParameter(y,o.LINK_STATUS))if(c=!1,"function"==typeof t.debug.onShaderError)t.debug.onShaderError(o,y,w,C);else{const t=getShaderErrors(o,w,"vertex"),a=getShaderErrors(o,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+o.getError()+" - VALIDATE_STATUS "+o.getProgramParameter(y,o.VALIDATE_STATUS)+"\n\nMaterial Name: "+r.name+"\nMaterial Type: "+r.type+"\n\nProgram Info Log: "+i+"\n"+t+"\n"+a)}else""!==i?console.warn("THREE.WebGLProgram: Program Info Log:",i):""!==a&&""!==l||(h=!1);h&&(r.diagnostics={runnable:c,programLog:i,vertexShader:{log:a,prefix:M},fragmentShader:{log:l,prefix:S}})}o.deleteShader(w),o.deleteShader(C),A=new WebGLUniforms(o,y),R=function fetchAttributeLocations(t,r){const i={},a=t.getProgramParameter(r,t.ACTIVE_ATTRIBUTES);for(let o=0;o<a;o++){const a=t.getActiveAttrib(r,o),l=a.name;let c=1;a.type===t.FLOAT_MAT2&&(c=2),a.type===t.FLOAT_MAT3&&(c=3),a.type===t.FLOAT_MAT4&&(c=4),i[l]={type:a.type,location:t.getAttribLocation(r,l),locationSize:c}}return i}(o,y)}let A,R;o.attachShader(y,w),o.attachShader(y,C),void 0!==i.index0AttributeName?o.bindAttribLocation(y,0,i.index0AttributeName):!0===i.morphTargets&&o.bindAttribLocation(y,0,"position"),o.linkProgram(y),this.getUniforms=function(){return void 0===A&&onFirstUse(this),A},this.getAttributes=function(){return void 0===R&&onFirstUse(this),R};let P=!1===i.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===P&&(P=o.getProgramParameter(y,37297)),P},this.destroy=function(){a.releaseStatesOfProgram(this),o.deleteProgram(y),this.program=void 0},this.type=i.shaderType,this.name=i.shaderName,this.id=Dc++,this.cacheKey=r,this.usedTimes=1,this.program=y,this.vertexShader=w,this.fragmentShader=C,this}let Bc=0;class WebGLShaderCache{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const r=t.vertexShader,i=t.fragmentShader,a=this._getShaderStage(r),o=this._getShaderStage(i),l=this._getShaderCacheForMaterial(t);return!1===l.has(a)&&(l.add(a),a.usedTimes++),!1===l.has(o)&&(l.add(o),o.usedTimes++),this}remove(t){const r=this.materialCache.get(t);for(const t of r)t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const r=this.materialCache;let i=r.get(t);return void 0===i&&(i=new Set,r.set(t,i)),i}_getShaderStage(t){const r=this.shaderCache;let i=r.get(t);return void 0===i&&(i=new WebGLShaderStage(t),r.set(t,i)),i}}class WebGLShaderStage{constructor(t){this.id=Bc++,this.code=t,this.usedTimes=0}}function WebGLPrograms(t,r,i,a,o,l,c){const h=new Layers,u=new WebGLShaderCache,d=new Set,p=[],m=o.logarithmicDepthBuffer,g=o.vertexTextures;let _=o.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function getChannel(t){return d.add(t),0===t?"uv":`uv${t}`}return{getParameters:function getParameters(l,h,p,y,M){const S=y.fog,b=M.geometry,T=l.isMeshStandardMaterial?y.environment:null,E=(l.isMeshStandardMaterial?i:r).get(l.envMap||T),w=E&&E.mapping===Xi?E.image.height:null,C=x[l.type];null!==l.precision&&(_=o.getMaxPrecision(l.precision),_!==l.precision&&console.warn("THREE.WebGLProgram.getParameters:",l.precision,"not supported, using",_,"instead."));const A=b.morphAttributes.position||b.morphAttributes.normal||b.morphAttributes.color,R=void 0!==A?A.length:0;let P,L,U,D,I=0;if(void 0!==b.morphAttributes.position&&(I=1),void 0!==b.morphAttributes.normal&&(I=2),void 0!==b.morphAttributes.color&&(I=3),C){const t=sc[C];P=t.vertexShader,L=t.fragmentShader}else P=l.vertexShader,L=l.fragmentShader,u.update(l),U=u.getVertexShaderID(l),D=u.getFragmentShaderID(l);const N=t.getRenderTarget(),O=t.state.buffers.depth.getReversed(),z=!0===M.isInstancedMesh,B=!0===M.isBatchedMesh,V=!!l.map,k=!!l.matcap,G=!!E,H=!!l.aoMap,W=!!l.lightMap,X=!!l.bumpMap,j=!!l.normalMap,q=!!l.displacementMap,Y=!!l.emissiveMap,J=!!l.metalnessMap,K=!!l.roughnessMap,Z=l.anisotropy>0,Q=l.clearcoat>0,$=l.dispersion>0,tt=l.iridescence>0,et=l.sheen>0,nt=l.transmission>0,rt=Z&&!!l.anisotropyMap,it=Q&&!!l.clearcoatMap,at=Q&&!!l.clearcoatNormalMap,st=Q&&!!l.clearcoatRoughnessMap,ot=tt&&!!l.iridescenceMap,lt=tt&&!!l.iridescenceThicknessMap,ct=et&&!!l.sheenColorMap,ht=et&&!!l.sheenRoughnessMap,ut=!!l.specularMap,dt=!!l.specularColorMap,pt=!!l.specularIntensityMap,ft=nt&&!!l.transmissionMap,mt=nt&&!!l.thicknessMap,gt=!!l.gradientMap,_t=!!l.alphaMap,vt=l.alphaTest>0,xt=!!l.alphaHash,yt=!!l.extensions;let Mt=0;l.toneMapped&&(null!==N&&!0!==N.isXRRenderTarget||(Mt=t.toneMapping));const St={shaderID:C,shaderType:l.type,shaderName:l.name,vertexShader:P,fragmentShader:L,defines:l.defines,customVertexShaderID:U,customFragmentShaderID:D,isRawShaderMaterial:!0===l.isRawShaderMaterial,glslVersion:l.glslVersion,precision:_,batching:B,batchingColor:B&&null!==M._colorsTexture,instancing:z,instancingColor:z&&null!==M.instanceColor,instancingMorph:z&&null!==M.morphTexture,supportsVertexTextures:g,outputColorSpace:null===N?t.outputColorSpace:!0===N.isXRRenderTarget?N.texture.colorSpace:as,alphaToCoverage:!!l.alphaToCoverage,map:V,matcap:k,envMap:G,envMapMode:G&&E.mapping,envMapCubeUVHeight:w,aoMap:H,lightMap:W,bumpMap:X,normalMap:j,displacementMap:g&&q,emissiveMap:Y,normalMapObjectSpace:j&&1===l.normalMapType,normalMapTangentSpace:j&&0===l.normalMapType,metalnessMap:J,roughnessMap:K,anisotropy:Z,anisotropyMap:rt,clearcoat:Q,clearcoatMap:it,clearcoatNormalMap:at,clearcoatRoughnessMap:st,dispersion:$,iridescence:tt,iridescenceMap:ot,iridescenceThicknessMap:lt,sheen:et,sheenColorMap:ct,sheenRoughnessMap:ht,specularMap:ut,specularColorMap:dt,specularIntensityMap:pt,transmission:nt,transmissionMap:ft,thicknessMap:mt,gradientMap:gt,opaque:!1===l.transparent&&1===l.blending&&!1===l.alphaToCoverage,alphaMap:_t,alphaTest:vt,alphaHash:xt,combine:l.combine,mapUv:V&&getChannel(l.map.channel),aoMapUv:H&&getChannel(l.aoMap.channel),lightMapUv:W&&getChannel(l.lightMap.channel),bumpMapUv:X&&getChannel(l.bumpMap.channel),normalMapUv:j&&getChannel(l.normalMap.channel),displacementMapUv:q&&getChannel(l.displacementMap.channel),emissiveMapUv:Y&&getChannel(l.emissiveMap.channel),metalnessMapUv:J&&getChannel(l.metalnessMap.channel),roughnessMapUv:K&&getChannel(l.roughnessMap.channel),anisotropyMapUv:rt&&getChannel(l.anisotropyMap.channel),clearcoatMapUv:it&&getChannel(l.clearcoatMap.channel),clearcoatNormalMapUv:at&&getChannel(l.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:st&&getChannel(l.clearcoatRoughnessMap.channel),iridescenceMapUv:ot&&getChannel(l.iridescenceMap.channel),iridescenceThicknessMapUv:lt&&getChannel(l.iridescenceThicknessMap.channel),sheenColorMapUv:ct&&getChannel(l.sheenColorMap.channel),sheenRoughnessMapUv:ht&&getChannel(l.sheenRoughnessMap.channel),specularMapUv:ut&&getChannel(l.specularMap.channel),specularColorMapUv:dt&&getChannel(l.specularColorMap.channel),specularIntensityMapUv:pt&&getChannel(l.specularIntensityMap.channel),transmissionMapUv:ft&&getChannel(l.transmissionMap.channel),thicknessMapUv:mt&&getChannel(l.thicknessMap.channel),alphaMapUv:_t&&getChannel(l.alphaMap.channel),vertexTangents:!!b.attributes.tangent&&(j||Z),vertexColors:l.vertexColors,vertexAlphas:!0===l.vertexColors&&!!b.attributes.color&&4===b.attributes.color.itemSize,pointsUvs:!0===M.isPoints&&!!b.attributes.uv&&(V||_t),fog:!!S,useFog:!0===l.fog,fogExp2:!!S&&S.isFogExp2,flatShading:!0===l.flatShading,sizeAttenuation:!0===l.sizeAttenuation,logarithmicDepthBuffer:m,reverseDepthBuffer:O,skinning:!0===M.isSkinnedMesh,morphTargets:void 0!==b.morphAttributes.position,morphNormals:void 0!==b.morphAttributes.normal,morphColors:void 0!==b.morphAttributes.color,morphTargetsCount:R,morphTextureStride:I,numDirLights:h.directional.length,numPointLights:h.point.length,numSpotLights:h.spot.length,numSpotLightMaps:h.spotLightMap.length,numRectAreaLights:h.rectArea.length,numHemiLights:h.hemi.length,numDirLightShadows:h.directionalShadowMap.length,numPointLightShadows:h.pointShadowMap.length,numSpotLightShadows:h.spotShadowMap.length,numSpotLightShadowsWithMaps:h.numSpotLightShadowsWithMaps,numLightProbes:h.numLightProbes,numClippingPlanes:c.numPlanes,numClipIntersection:c.numIntersection,dithering:l.dithering,shadowMapEnabled:t.shadowMap.enabled&&p.length>0,shadowMapType:t.shadowMap.type,toneMapping:Mt,decodeVideoTexture:V&&!0===l.map.isVideoTexture&&Ps.getTransfer(l.map.colorSpace)===os,decodeVideoTextureEmissive:Y&&!0===l.emissiveMap.isVideoTexture&&Ps.getTransfer(l.emissiveMap.colorSpace)===os,premultipliedAlpha:l.premultipliedAlpha,doubleSided:2===l.side,flipSided:1===l.side,useDepthPacking:l.depthPacking>=0,depthPacking:l.depthPacking||0,index0AttributeName:l.index0AttributeName,extensionClipCullDistance:yt&&!0===l.extensions.clipCullDistance&&a.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(yt&&!0===l.extensions.multiDraw||B)&&a.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:a.has("KHR_parallel_shader_compile"),customProgramCacheKey:l.customProgramCacheKey()};return St.vertexUv1s=d.has(1),St.vertexUv2s=d.has(2),St.vertexUv3s=d.has(3),d.clear(),St},getProgramCacheKey:function getProgramCacheKey(r){const i=[];if(r.shaderID?i.push(r.shaderID):(i.push(r.customVertexShaderID),i.push(r.customFragmentShaderID)),void 0!==r.defines)for(const t in r.defines)i.push(t),i.push(r.defines[t]);return!1===r.isRawShaderMaterial&&(!function getProgramCacheKeyParameters(t,r){t.push(r.precision),t.push(r.outputColorSpace),t.push(r.envMapMode),t.push(r.envMapCubeUVHeight),t.push(r.mapUv),t.push(r.alphaMapUv),t.push(r.lightMapUv),t.push(r.aoMapUv),t.push(r.bumpMapUv),t.push(r.normalMapUv),t.push(r.displacementMapUv),t.push(r.emissiveMapUv),t.push(r.metalnessMapUv),t.push(r.roughnessMapUv),t.push(r.anisotropyMapUv),t.push(r.clearcoatMapUv),t.push(r.clearcoatNormalMapUv),t.push(r.clearcoatRoughnessMapUv),t.push(r.iridescenceMapUv),t.push(r.iridescenceThicknessMapUv),t.push(r.sheenColorMapUv),t.push(r.sheenRoughnessMapUv),t.push(r.specularMapUv),t.push(r.specularColorMapUv),t.push(r.specularIntensityMapUv),t.push(r.transmissionMapUv),t.push(r.thicknessMapUv),t.push(r.combine),t.push(r.fogExp2),t.push(r.sizeAttenuation),t.push(r.morphTargetsCount),t.push(r.morphAttributeCount),t.push(r.numDirLights),t.push(r.numPointLights),t.push(r.numSpotLights),t.push(r.numSpotLightMaps),t.push(r.numHemiLights),t.push(r.numRectAreaLights),t.push(r.numDirLightShadows),t.push(r.numPointLightShadows),t.push(r.numSpotLightShadows),t.push(r.numSpotLightShadowsWithMaps),t.push(r.numLightProbes),t.push(r.shadowMapType),t.push(r.toneMapping),t.push(r.numClippingPlanes),t.push(r.numClipIntersection),t.push(r.depthPacking)}(i,r),function getProgramCacheKeyBooleans(t,r){h.disableAll(),r.supportsVertexTextures&&h.enable(0);r.instancing&&h.enable(1);r.instancingColor&&h.enable(2);r.instancingMorph&&h.enable(3);r.matcap&&h.enable(4);r.envMap&&h.enable(5);r.normalMapObjectSpace&&h.enable(6);r.normalMapTangentSpace&&h.enable(7);r.clearcoat&&h.enable(8);r.iridescence&&h.enable(9);r.alphaTest&&h.enable(10);r.vertexColors&&h.enable(11);r.vertexAlphas&&h.enable(12);r.vertexUv1s&&h.enable(13);r.vertexUv2s&&h.enable(14);r.vertexUv3s&&h.enable(15);r.vertexTangents&&h.enable(16);r.anisotropy&&h.enable(17);r.alphaHash&&h.enable(18);r.batching&&h.enable(19);r.dispersion&&h.enable(20);r.batchingColor&&h.enable(21);t.push(h.mask),h.disableAll(),r.fog&&h.enable(0);r.useFog&&h.enable(1);r.flatShading&&h.enable(2);r.logarithmicDepthBuffer&&h.enable(3);r.reverseDepthBuffer&&h.enable(4);r.skinning&&h.enable(5);r.morphTargets&&h.enable(6);r.morphNormals&&h.enable(7);r.morphColors&&h.enable(8);r.premultipliedAlpha&&h.enable(9);r.shadowMapEnabled&&h.enable(10);r.doubleSided&&h.enable(11);r.flipSided&&h.enable(12);r.useDepthPacking&&h.enable(13);r.dithering&&h.enable(14);r.transmission&&h.enable(15);r.sheen&&h.enable(16);r.opaque&&h.enable(17);r.pointsUvs&&h.enable(18);r.decodeVideoTexture&&h.enable(19);r.decodeVideoTextureEmissive&&h.enable(20);r.alphaToCoverage&&h.enable(21);t.push(h.mask)}(i,r),i.push(t.outputColorSpace)),i.push(r.customProgramCacheKey),i.join()},getUniforms:function getUniforms(t){const r=x[t.type];let i;if(r){const t=sc[r];i=ml.clone(t.uniforms)}else i=t.uniforms;return i},acquireProgram:function acquireProgram(r,i){let a;for(let t=0,r=p.length;t<r;t++){const r=p[t];if(r.cacheKey===i){a=r,++a.usedTimes;break}}return void 0===a&&(a=new WebGLProgram(t,i,r,l),p.push(a)),a},releaseProgram:function releaseProgram(t){if(0===--t.usedTimes){const r=p.indexOf(t);p[r]=p[p.length-1],p.pop(),t.destroy()}},releaseShaderCache:function releaseShaderCache(t){u.remove(t)},programs:p,dispose:function dispose(){u.dispose()}}}function WebGLProperties(){let t=new WeakMap;return{has:function has(r){return t.has(r)},get:function get(r){let i=t.get(r);return void 0===i&&(i={},t.set(r,i)),i},remove:function remove(r){t.delete(r)},update:function update(r,i,a){t.get(r)[i]=a},dispose:function dispose(){t=new WeakMap}}}function painterSortStable(t,r){return t.groupOrder!==r.groupOrder?t.groupOrder-r.groupOrder:t.renderOrder!==r.renderOrder?t.renderOrder-r.renderOrder:t.material.id!==r.material.id?t.material.id-r.material.id:t.z!==r.z?t.z-r.z:t.id-r.id}function reversePainterSortStable(t,r){return t.groupOrder!==r.groupOrder?t.groupOrder-r.groupOrder:t.renderOrder!==r.renderOrder?t.renderOrder-r.renderOrder:t.z!==r.z?r.z-t.z:t.id-r.id}function WebGLRenderList(){const t=[];let r=0;const i=[],a=[],o=[];function getNextRenderItem(i,a,o,l,c,h){let u=t[r];return void 0===u?(u={id:i.id,object:i,geometry:a,material:o,groupOrder:l,renderOrder:i.renderOrder,z:c,group:h},t[r]=u):(u.id=i.id,u.object=i,u.geometry=a,u.material=o,u.groupOrder=l,u.renderOrder=i.renderOrder,u.z=c,u.group=h),r++,u}return{opaque:i,transmissive:a,transparent:o,init:function init(){r=0,i.length=0,a.length=0,o.length=0},push:function push(t,r,l,c,h,u){const d=getNextRenderItem(t,r,l,c,h,u);l.transmission>0?a.push(d):!0===l.transparent?o.push(d):i.push(d)},unshift:function unshift(t,r,l,c,h,u){const d=getNextRenderItem(t,r,l,c,h,u);l.transmission>0?a.unshift(d):!0===l.transparent?o.unshift(d):i.unshift(d)},finish:function finish(){for(let i=r,a=t.length;i<a;i++){const r=t[i];if(null===r.id)break;r.id=null,r.object=null,r.geometry=null,r.material=null,r.group=null}},sort:function sort(t,r){i.length>1&&i.sort(t||painterSortStable),a.length>1&&a.sort(r||reversePainterSortStable),o.length>1&&o.sort(r||reversePainterSortStable)}}}function WebGLRenderLists(){let t=new WeakMap;return{get:function get(r,i){const a=t.get(r);let o;return void 0===a?(o=new WebGLRenderList,t.set(r,[o])):i>=a.length?(o=new WebGLRenderList,a.push(o)):o=a[i],o},dispose:function dispose(){t=new WeakMap}}}function UniformsCache(){const t={};return{get:function(r){if(void 0!==t[r.id])return t[r.id];let i;switch(r.type){case"DirectionalLight":i={direction:new Vector3,color:new Color};break;case"SpotLight":i={position:new Vector3,direction:new Vector3,color:new Color,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new Vector3,color:new Color,distance:0,decay:0};break;case"HemisphereLight":i={direction:new Vector3,skyColor:new Color,groundColor:new Color};break;case"RectAreaLight":i={color:new Color,position:new Vector3,halfWidth:new Vector3,halfHeight:new Vector3}}return t[r.id]=i,i}}}let Vc=0;function shadowCastingAndTexturingLightsFirst(t,r){return(r.castShadow?2:0)-(t.castShadow?2:0)+(r.map?1:0)-(t.map?1:0)}function WebGLLights(t){const r=new UniformsCache,i=function ShadowUniformsCache(){const t={};return{get:function(r){if(void 0!==t[r.id])return t[r.id];let i;switch(r.type){case"DirectionalLight":case"SpotLight":i={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case"PointLight":i={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2,shadowCameraNear:1,shadowCameraFar:1e3}}return t[r.id]=i,i}}}(),a={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let t=0;t<9;t++)a.probe.push(new Vector3);const o=new Vector3,l=new Matrix4,c=new Matrix4;return{setup:function setup(o){let l=0,c=0,h=0;for(let t=0;t<9;t++)a.probe[t].set(0,0,0);let u=0,d=0,p=0,m=0,g=0,_=0,x=0,y=0,M=0,S=0,b=0;o.sort(shadowCastingAndTexturingLightsFirst);for(let t=0,T=o.length;t<T;t++){const T=o[t],E=T.color,w=T.intensity,C=T.distance,A=T.shadow&&T.shadow.map?T.shadow.map.texture:null;if(T.isAmbientLight)l+=E.r*w,c+=E.g*w,h+=E.b*w;else if(T.isLightProbe){for(let t=0;t<9;t++)a.probe[t].addScaledVector(T.sh.coefficients[t],w);b++}else if(T.isDirectionalLight){const t=r.get(T);if(t.color.copy(T.color).multiplyScalar(T.intensity),T.castShadow){const t=T.shadow,r=i.get(T);r.shadowIntensity=t.intensity,r.shadowBias=t.bias,r.shadowNormalBias=t.normalBias,r.shadowRadius=t.radius,r.shadowMapSize=t.mapSize,a.directionalShadow[u]=r,a.directionalShadowMap[u]=A,a.directionalShadowMatrix[u]=T.shadow.matrix,_++}a.directional[u]=t,u++}else if(T.isSpotLight){const t=r.get(T);t.position.setFromMatrixPosition(T.matrixWorld),t.color.copy(E).multiplyScalar(w),t.distance=C,t.coneCos=Math.cos(T.angle),t.penumbraCos=Math.cos(T.angle*(1-T.penumbra)),t.decay=T.decay,a.spot[p]=t;const o=T.shadow;if(T.map&&(a.spotLightMap[M]=T.map,M++,o.updateMatrices(T),T.castShadow&&S++),a.spotLightMatrix[p]=o.matrix,T.castShadow){const t=i.get(T);t.shadowIntensity=o.intensity,t.shadowBias=o.bias,t.shadowNormalBias=o.normalBias,t.shadowRadius=o.radius,t.shadowMapSize=o.mapSize,a.spotShadow[p]=t,a.spotShadowMap[p]=A,y++}p++}else if(T.isRectAreaLight){const t=r.get(T);t.color.copy(E).multiplyScalar(w),t.halfWidth.set(.5*T.width,0,0),t.halfHeight.set(0,.5*T.height,0),a.rectArea[m]=t,m++}else if(T.isPointLight){const t=r.get(T);if(t.color.copy(T.color).multiplyScalar(T.intensity),t.distance=T.distance,t.decay=T.decay,T.castShadow){const t=T.shadow,r=i.get(T);r.shadowIntensity=t.intensity,r.shadowBias=t.bias,r.shadowNormalBias=t.normalBias,r.shadowRadius=t.radius,r.shadowMapSize=t.mapSize,r.shadowCameraNear=t.camera.near,r.shadowCameraFar=t.camera.far,a.pointShadow[d]=r,a.pointShadowMap[d]=A,a.pointShadowMatrix[d]=T.shadow.matrix,x++}a.point[d]=t,d++}else if(T.isHemisphereLight){const t=r.get(T);t.skyColor.copy(T.color).multiplyScalar(w),t.groundColor.copy(T.groundColor).multiplyScalar(w),a.hemi[g]=t,g++}}m>0&&(!0===t.has("OES_texture_float_linear")?(a.rectAreaLTC1=ac.LTC_FLOAT_1,a.rectAreaLTC2=ac.LTC_FLOAT_2):(a.rectAreaLTC1=ac.LTC_HALF_1,a.rectAreaLTC2=ac.LTC_HALF_2)),a.ambient[0]=l,a.ambient[1]=c,a.ambient[2]=h;const T=a.hash;T.directionalLength===u&&T.pointLength===d&&T.spotLength===p&&T.rectAreaLength===m&&T.hemiLength===g&&T.numDirectionalShadows===_&&T.numPointShadows===x&&T.numSpotShadows===y&&T.numSpotMaps===M&&T.numLightProbes===b||(a.directional.length=u,a.spot.length=p,a.rectArea.length=m,a.point.length=d,a.hemi.length=g,a.directionalShadow.length=_,a.directionalShadowMap.length=_,a.pointShadow.length=x,a.pointShadowMap.length=x,a.spotShadow.length=y,a.spotShadowMap.length=y,a.directionalShadowMatrix.length=_,a.pointShadowMatrix.length=x,a.spotLightMatrix.length=y+M-S,a.spotLightMap.length=M,a.numSpotLightShadowsWithMaps=S,a.numLightProbes=b,T.directionalLength=u,T.pointLength=d,T.spotLength=p,T.rectAreaLength=m,T.hemiLength=g,T.numDirectionalShadows=_,T.numPointShadows=x,T.numSpotShadows=y,T.numSpotMaps=M,T.numLightProbes=b,a.version=Vc++)},setupView:function setupView(t,r){let i=0,h=0,u=0,d=0,p=0;const m=r.matrixWorldInverse;for(let r=0,g=t.length;r<g;r++){const g=t[r];if(g.isDirectionalLight){const t=a.directional[i];t.direction.setFromMatrixPosition(g.matrixWorld),o.setFromMatrixPosition(g.target.matrixWorld),t.direction.sub(o),t.direction.transformDirection(m),i++}else if(g.isSpotLight){const t=a.spot[u];t.position.setFromMatrixPosition(g.matrixWorld),t.position.applyMatrix4(m),t.direction.setFromMatrixPosition(g.matrixWorld),o.setFromMatrixPosition(g.target.matrixWorld),t.direction.sub(o),t.direction.transformDirection(m),u++}else if(g.isRectAreaLight){const t=a.rectArea[d];t.position.setFromMatrixPosition(g.matrixWorld),t.position.applyMatrix4(m),c.identity(),l.copy(g.matrixWorld),l.premultiply(m),c.extractRotation(l),t.halfWidth.set(.5*g.width,0,0),t.halfHeight.set(0,.5*g.height,0),t.halfWidth.applyMatrix4(c),t.halfHeight.applyMatrix4(c),d++}else if(g.isPointLight){const t=a.point[h];t.position.setFromMatrixPosition(g.matrixWorld),t.position.applyMatrix4(m),h++}else if(g.isHemisphereLight){const t=a.hemi[p];t.direction.setFromMatrixPosition(g.matrixWorld),t.direction.transformDirection(m),p++}}},state:a}}function WebGLRenderState(t){const r=new WebGLLights(t),i=[],a=[];const o={lightsArray:i,shadowsArray:a,camera:null,lights:r,transmissionRenderTarget:{}};return{init:function init(t){o.camera=t,i.length=0,a.length=0},state:o,setupLights:function setupLights(){r.setup(i)},setupLightsView:function setupLightsView(t){r.setupView(i,t)},pushLight:function pushLight(t){i.push(t)},pushShadow:function pushShadow(t){a.push(t)}}}function WebGLRenderStates(t){let r=new WeakMap;return{get:function get(i,a=0){const o=r.get(i);let l;return void 0===o?(l=new WebGLRenderState(t),r.set(i,[l])):a>=o.length?(l=new WebGLRenderState(t),o.push(l)):l=o[a],l},dispose:function dispose(){r=new WeakMap}}}function WebGLShadowMap(t,r,i){let a=new Frustum;const o=new Vector2,l=new Vector2,c=new Vector4,h=new MeshDepthMaterial({depthPacking:3201}),u=new MeshDistanceMaterial,d={},p=i.maxTextureSize,m={[di]:1,[pi]:0,[fi]:2},g=new ShaderMaterial({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),_=g.clone();_.defines.HORIZONTAL_PASS=1;const x=new BufferGeometry;x.setAttribute("position",new BufferAttribute(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const y=new Mesh(x,g),M=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1;let S=this.type;function VSMPass(i,a){const l=r.update(y);g.defines.VSM_SAMPLES!==i.blurSamples&&(g.defines.VSM_SAMPLES=i.blurSamples,_.defines.VSM_SAMPLES=i.blurSamples,g.needsUpdate=!0,_.needsUpdate=!0),null===i.mapPass&&(i.mapPass=new WebGLRenderTarget(o.x,o.y)),g.uniforms.shadow_pass.value=i.map.texture,g.uniforms.resolution.value=i.mapSize,g.uniforms.radius.value=i.radius,t.setRenderTarget(i.mapPass),t.clear(),t.renderBufferDirect(a,null,l,g,y,null),_.uniforms.shadow_pass.value=i.mapPass.texture,_.uniforms.resolution.value=i.mapSize,_.uniforms.radius.value=i.radius,t.setRenderTarget(i.map),t.clear(),t.renderBufferDirect(a,null,l,_,y,null)}function getDepthMaterial(r,i,a,o){let l=null;const c=!0===a.isPointLight?r.customDistanceMaterial:r.customDepthMaterial;if(void 0!==c)l=c;else if(l=!0===a.isPointLight?u:h,t.localClippingEnabled&&!0===i.clipShadows&&Array.isArray(i.clippingPlanes)&&0!==i.clippingPlanes.length||i.displacementMap&&0!==i.displacementScale||i.alphaMap&&i.alphaTest>0||i.map&&i.alphaTest>0||!0===i.alphaToCoverage){const t=l.uuid,r=i.uuid;let a=d[t];void 0===a&&(a={},d[t]=a);let o=a[r];void 0===o&&(o=l.clone(),a[r]=o,i.addEventListener("dispose",onMaterialDispose)),l=o}if(l.visible=i.visible,l.wireframe=i.wireframe,l.side=3===o?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:m[i.side],l.alphaMap=i.alphaMap,l.alphaTest=!0===i.alphaToCoverage?.5:i.alphaTest,l.map=i.map,l.clipShadows=i.clipShadows,l.clippingPlanes=i.clippingPlanes,l.clipIntersection=i.clipIntersection,l.displacementMap=i.displacementMap,l.displacementScale=i.displacementScale,l.displacementBias=i.displacementBias,l.wireframeLinewidth=i.wireframeLinewidth,l.linewidth=i.linewidth,!0===a.isPointLight&&!0===l.isMeshDistanceMaterial){t.properties.get(l).light=a}return l}function renderObject(i,o,l,c,h){if(!1===i.visible)return;if(i.layers.test(o.layers)&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&3===h)&&(!i.frustumCulled||a.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,i.matrixWorld);const a=r.update(i),u=i.material;if(Array.isArray(u)){const r=a.groups;for(let d=0,p=r.length;d<p;d++){const p=r[d],m=u[p.materialIndex];if(m&&m.visible){const r=getDepthMaterial(i,m,c,h);i.onBeforeShadow(t,i,o,l,a,r,p),t.renderBufferDirect(l,null,a,r,i,p),i.onAfterShadow(t,i,o,l,a,r,p)}}}else if(u.visible){const r=getDepthMaterial(i,u,c,h);i.onBeforeShadow(t,i,o,l,a,r,null),t.renderBufferDirect(l,null,a,r,i,null),i.onAfterShadow(t,i,o,l,a,r,null)}}const u=i.children;for(let t=0,r=u.length;t<r;t++)renderObject(u[t],o,l,c,h)}function onMaterialDispose(t){t.target.removeEventListener("dispose",onMaterialDispose);for(const r in d){const i=d[r],a=t.target.uuid;if(a in i){i[a].dispose(),delete i[a]}}}this.render=function(r,i,h){if(!1===M.enabled)return;if(!1===M.autoUpdate&&!1===M.needsUpdate)return;if(0===r.length)return;const u=t.getRenderTarget(),d=t.getActiveCubeFace(),m=t.getActiveMipmapLevel(),g=t.state;g.setBlending(0),g.buffers.color.setClear(1,1,1,1),g.buffers.depth.setTest(!0),g.setScissorTest(!1);const _=3!==S&&3===this.type,x=3===S&&3!==this.type;for(let u=0,d=r.length;u<d;u++){const d=r[u],m=d.shadow;if(void 0===m){console.warn("THREE.WebGLShadowMap:",d,"has no shadow.");continue}if(!1===m.autoUpdate&&!1===m.needsUpdate)continue;o.copy(m.mapSize);const y=m.getFrameExtents();if(o.multiply(y),l.copy(m.mapSize),(o.x>p||o.y>p)&&(o.x>p&&(l.x=Math.floor(p/y.x),o.x=l.x*y.x,m.mapSize.x=l.x),o.y>p&&(l.y=Math.floor(p/y.y),o.y=l.y*y.y,m.mapSize.y=l.y)),null===m.map||!0===_||!0===x){const t=3!==this.type?{minFilter:Ji,magFilter:Ji}:{};null!==m.map&&m.map.dispose(),m.map=new WebGLRenderTarget(o.x,o.y,t),m.map.texture.name=d.name+".shadowMap",m.camera.updateProjectionMatrix()}t.setRenderTarget(m.map),t.clear();const M=m.getViewportCount();for(let t=0;t<M;t++){const r=m.getViewport(t);c.set(l.x*r.x,l.y*r.y,l.x*r.z,l.y*r.w),g.viewport(c),m.updateMatrices(d,t),a=m.getFrustum(),renderObject(i,h,m.camera,d,this.type)}!0!==m.isPointLightShadow&&3===this.type&&VSMPass(m,h),m.needsUpdate=!1}S=this.type,M.needsUpdate=!1,t.setRenderTarget(u,d,m)}}const kc={[Di]:1,[Ni]:6,[Fi]:7,[Oi]:5,[Ii]:0,[Bi]:2,[Vi]:4,[zi]:3};function WebGLState(t,r){const i=new function ColorBuffer(){let r=!1;const i=new Vector4;let a=null;const o=new Vector4(0,0,0,0);return{setMask:function(i){a===i||r||(t.colorMask(i,i,i,i),a=i)},setLocked:function(t){r=t},setClear:function(r,a,l,c,h){!0===h&&(r*=c,a*=c,l*=c),i.set(r,a,l,c),!1===o.equals(i)&&(t.clearColor(r,a,l,c),o.copy(i))},reset:function(){r=!1,a=null,o.set(-1,0,0,0)}}},a=new function DepthBuffer(){let i=!1,a=!1,o=null,l=null,c=null;return{setReversed:function(t){if(a!==t){const i=r.get("EXT_clip_control");t?i.clipControlEXT(i.LOWER_LEFT_EXT,i.ZERO_TO_ONE_EXT):i.clipControlEXT(i.LOWER_LEFT_EXT,i.NEGATIVE_ONE_TO_ONE_EXT),a=t;const o=c;c=null,this.setClear(o)}},getReversed:function(){return a},setTest:function(r){r?enable(t.DEPTH_TEST):disable(t.DEPTH_TEST)},setMask:function(r){o===r||i||(t.depthMask(r),o=r)},setFunc:function(r){if(a&&(r=kc[r]),l!==r){switch(r){case 0:t.depthFunc(t.NEVER);break;case 1:t.depthFunc(t.ALWAYS);break;case 2:t.depthFunc(t.LESS);break;case 3:default:t.depthFunc(t.LEQUAL);break;case 4:t.depthFunc(t.EQUAL);break;case 5:t.depthFunc(t.GEQUAL);break;case 6:t.depthFunc(t.GREATER);break;case 7:t.depthFunc(t.NOTEQUAL)}l=r}},setLocked:function(t){i=t},setClear:function(r){c!==r&&(a&&(r=1-r),t.clearDepth(r),c=r)},reset:function(){i=!1,o=null,l=null,c=null,a=!1}}},o=new function StencilBuffer(){let r=!1,i=null,a=null,o=null,l=null,c=null,h=null,u=null,d=null;return{setTest:function(i){r||(i?enable(t.STENCIL_TEST):disable(t.STENCIL_TEST))},setMask:function(a){i===a||r||(t.stencilMask(a),i=a)},setFunc:function(r,i,c){a===r&&o===i&&l===c||(t.stencilFunc(r,i,c),a=r,o=i,l=c)},setOp:function(r,i,a){c===r&&h===i&&u===a||(t.stencilOp(r,i,a),c=r,h=i,u=a)},setLocked:function(t){r=t},setClear:function(r){d!==r&&(t.clearStencil(r),d=r)},reset:function(){r=!1,i=null,a=null,o=null,l=null,c=null,h=null,u=null,d=null}}},l=new WeakMap,c=new WeakMap;let h={},u={},d=new WeakMap,p=[],m=null,g=!1,_=null,x=null,y=null,M=null,S=null,b=null,T=null,E=new Color(0,0,0),w=0,C=!1,A=null,R=null,P=null,L=null,U=null;const D=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let I=!1,N=0;const O=t.getParameter(t.VERSION);-1!==O.indexOf("WebGL")?(N=parseFloat(/^WebGL (\d)/.exec(O)[1]),I=N>=1):-1!==O.indexOf("OpenGL ES")&&(N=parseFloat(/^OpenGL ES (\d)/.exec(O)[1]),I=N>=2);let z=null,B={};const V=t.getParameter(t.SCISSOR_BOX),k=t.getParameter(t.VIEWPORT),G=(new Vector4).fromArray(V),H=(new Vector4).fromArray(k);function createTexture(r,i,a,o){const l=new Uint8Array(4),c=t.createTexture();t.bindTexture(r,c),t.texParameteri(r,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(r,t.TEXTURE_MAG_FILTER,t.NEAREST);for(let c=0;c<a;c++)r===t.TEXTURE_3D||r===t.TEXTURE_2D_ARRAY?t.texImage3D(i,0,t.RGBA,1,1,o,0,t.RGBA,t.UNSIGNED_BYTE,l):t.texImage2D(i+c,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,l);return c}const W={};function enable(r){!0!==h[r]&&(t.enable(r),h[r]=!0)}function disable(r){!1!==h[r]&&(t.disable(r),h[r]=!1)}W[t.TEXTURE_2D]=createTexture(t.TEXTURE_2D,t.TEXTURE_2D,1),W[t.TEXTURE_CUBE_MAP]=createTexture(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),W[t.TEXTURE_2D_ARRAY]=createTexture(t.TEXTURE_2D_ARRAY,t.TEXTURE_2D_ARRAY,1,1),W[t.TEXTURE_3D]=createTexture(t.TEXTURE_3D,t.TEXTURE_3D,1,1),i.setClear(0,0,0,1),a.setClear(1),o.setClear(0),enable(t.DEPTH_TEST),a.setFunc(3),setFlipSided(!1),setCullFace(1),enable(t.CULL_FACE),setBlending(0);const X={[mi]:t.FUNC_ADD,[gi]:t.FUNC_SUBTRACT,[_i]:t.FUNC_REVERSE_SUBTRACT};X[103]=t.MIN,X[104]=t.MAX;const j={[vi]:t.ZERO,[xi]:t.ONE,[yi]:t.SRC_COLOR,[Si]:t.SRC_ALPHA,[Ai]:t.SRC_ALPHA_SATURATE,[wi]:t.DST_COLOR,[Ti]:t.DST_ALPHA,[Mi]:t.ONE_MINUS_SRC_COLOR,[bi]:t.ONE_MINUS_SRC_ALPHA,[Ci]:t.ONE_MINUS_DST_COLOR,[Ei]:t.ONE_MINUS_DST_ALPHA,[Ri]:t.CONSTANT_COLOR,[Pi]:t.ONE_MINUS_CONSTANT_COLOR,[Li]:t.CONSTANT_ALPHA,[Ui]:t.ONE_MINUS_CONSTANT_ALPHA};function setBlending(r,i,a,o,l,c,h,u,d,p){if(0!==r){if(!1===g&&(enable(t.BLEND),g=!0),5===r)l=l||i,c=c||a,h=h||o,i===x&&l===S||(t.blendEquationSeparate(X[i],X[l]),x=i,S=l),a===y&&o===M&&c===b&&h===T||(t.blendFuncSeparate(j[a],j[o],j[c],j[h]),y=a,M=o,b=c,T=h),!1!==u.equals(E)&&d===w||(t.blendColor(u.r,u.g,u.b,d),E.copy(u),w=d),_=r,C=!1;else if(r!==_||p!==C){if(x===mi&&S===mi||(t.blendEquation(t.FUNC_ADD),x=mi,S=mi),p)switch(r){case 1:t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case 2:t.blendFunc(t.ONE,t.ONE);break;case 3:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case 4:t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",r)}else switch(r){case 1:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case 2:t.blendFunc(t.SRC_ALPHA,t.ONE);break;case 3:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case 4:t.blendFunc(t.ZERO,t.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",r)}y=null,M=null,b=null,T=null,E.set(0,0,0),w=0,_=r,C=p}}else!0===g&&(disable(t.BLEND),g=!1)}function setFlipSided(r){A!==r&&(r?t.frontFace(t.CW):t.frontFace(t.CCW),A=r)}function setCullFace(r){0!==r?(enable(t.CULL_FACE),r!==R&&(1===r?t.cullFace(t.BACK):2===r?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):disable(t.CULL_FACE),R=r}function setPolygonOffset(r,i,a){r?(enable(t.POLYGON_OFFSET_FILL),L===i&&U===a||(t.polygonOffset(i,a),L=i,U=a)):disable(t.POLYGON_OFFSET_FILL)}return{buffers:{color:i,depth:a,stencil:o},enable,disable,bindFramebuffer:function bindFramebuffer(r,i){return u[r]!==i&&(t.bindFramebuffer(r,i),u[r]=i,r===t.DRAW_FRAMEBUFFER&&(u[t.FRAMEBUFFER]=i),r===t.FRAMEBUFFER&&(u[t.DRAW_FRAMEBUFFER]=i),!0)},drawBuffers:function drawBuffers(r,i){let a=p,o=!1;if(r){a=d.get(i),void 0===a&&(a=[],d.set(i,a));const l=r.textures;if(a.length!==l.length||a[0]!==t.COLOR_ATTACHMENT0){for(let r=0,i=l.length;r<i;r++)a[r]=t.COLOR_ATTACHMENT0+r;a.length=l.length,o=!0}}else a[0]!==t.BACK&&(a[0]=t.BACK,o=!0);o&&t.drawBuffers(a)},useProgram:function useProgram(r){return m!==r&&(t.useProgram(r),m=r,!0)},setBlending,setMaterial:function setMaterial(r,l){2===r.side?disable(t.CULL_FACE):enable(t.CULL_FACE);let c=1===r.side;l&&(c=!c),setFlipSided(c),1===r.blending&&!1===r.transparent?setBlending(0):setBlending(r.blending,r.blendEquation,r.blendSrc,r.blendDst,r.blendEquationAlpha,r.blendSrcAlpha,r.blendDstAlpha,r.blendColor,r.blendAlpha,r.premultipliedAlpha),a.setFunc(r.depthFunc),a.setTest(r.depthTest),a.setMask(r.depthWrite),i.setMask(r.colorWrite);const h=r.stencilWrite;o.setTest(h),h&&(o.setMask(r.stencilWriteMask),o.setFunc(r.stencilFunc,r.stencilRef,r.stencilFuncMask),o.setOp(r.stencilFail,r.stencilZFail,r.stencilZPass)),setPolygonOffset(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits),!0===r.alphaToCoverage?enable(t.SAMPLE_ALPHA_TO_COVERAGE):disable(t.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided,setCullFace,setLineWidth:function setLineWidth(r){r!==P&&(I&&t.lineWidth(r),P=r)},setPolygonOffset,setScissorTest:function setScissorTest(r){r?enable(t.SCISSOR_TEST):disable(t.SCISSOR_TEST)},activeTexture:function activeTexture(r){void 0===r&&(r=t.TEXTURE0+D-1),z!==r&&(t.activeTexture(r),z=r)},bindTexture:function bindTexture(r,i,a){void 0===a&&(a=null===z?t.TEXTURE0+D-1:z);let o=B[a];void 0===o&&(o={type:void 0,texture:void 0},B[a]=o),o.type===r&&o.texture===i||(z!==a&&(t.activeTexture(a),z=a),t.bindTexture(r,i||W[r]),o.type=r,o.texture=i)},unbindTexture:function unbindTexture(){const r=B[z];void 0!==r&&void 0!==r.type&&(t.bindTexture(r.type,null),r.type=void 0,r.texture=void 0)},compressedTexImage2D:function compressedTexImage2D(){try{t.compressedTexImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexImage3D:function compressedTexImage3D(){try{t.compressedTexImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function texImage2D(){try{t.texImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function texImage3D(){try{t.texImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},updateUBOMapping:function updateUBOMapping(r,i){let a=c.get(i);void 0===a&&(a=new WeakMap,c.set(i,a));let o=a.get(r);void 0===o&&(o=t.getUniformBlockIndex(i,r.name),a.set(r,o))},uniformBlockBinding:function uniformBlockBinding(r,i){const a=c.get(i).get(r);l.get(i)!==a&&(t.uniformBlockBinding(i,a,r.__bindingPointIndex),l.set(i,a))},texStorage2D:function texStorage2D(){try{t.texStorage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function texStorage3D(){try{t.texStorage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function texSubImage2D(){try{t.texSubImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function texSubImage3D(){try{t.texSubImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function compressedTexSubImage2D(){try{t.compressedTexSubImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage3D:function compressedTexSubImage3D(){try{t.compressedTexSubImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function scissor(r){!1===G.equals(r)&&(t.scissor(r.x,r.y,r.z,r.w),G.copy(r))},viewport:function viewport(r){!1===H.equals(r)&&(t.viewport(r.x,r.y,r.z,r.w),H.copy(r))},reset:function reset(){t.disable(t.BLEND),t.disable(t.CULL_FACE),t.disable(t.DEPTH_TEST),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ZERO),t.blendFuncSeparate(t.ONE,t.ZERO,t.ONE,t.ZERO),t.blendColor(0,0,0,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(t.LESS),a.setReversed(!1),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(t.ALWAYS,0,4294967295),t.stencilOp(t.KEEP,t.KEEP,t.KEEP),t.clearStencil(0),t.cullFace(t.BACK),t.frontFace(t.CCW),t.polygonOffset(0,0),t.activeTexture(t.TEXTURE0),t.bindFramebuffer(t.FRAMEBUFFER,null),t.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),t.bindFramebuffer(t.READ_FRAMEBUFFER,null),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),h={},z=null,B={},u={},d=new WeakMap,p=[],m=null,g=!1,_=null,x=null,y=null,M=null,S=null,b=null,T=null,E=new Color(0,0,0),w=0,C=!1,A=null,R=null,P=null,L=null,U=null,G.set(0,0,t.canvas.width,t.canvas.height),H.set(0,0,t.canvas.width,t.canvas.height),i.reset(),a.reset(),o.reset()}}}function WebGLTextures(t,r,i,a,o,l,c){const h=r.has("WEBGL_multisampled_render_to_texture")?r.get("WEBGL_multisampled_render_to_texture"):null,u="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),d=new Vector2,p=new WeakMap;let m;const g=new WeakMap;let _=!1;try{_="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function createCanvas(t,r){return _?new OffscreenCanvas(t,r):createElementNS("canvas")}function resizeImage(t,r,i){let a=1;const o=getDimensions(t);if((o.width>i||o.height>i)&&(a=i/Math.max(o.width,o.height)),a<1){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap||"undefined"!=typeof VideoFrame&&t instanceof VideoFrame){const i=Math.floor(a*o.width),l=Math.floor(a*o.height);void 0===m&&(m=createCanvas(i,l));const c=r?createCanvas(i,l):m;c.width=i,c.height=l;return c.getContext("2d").drawImage(t,0,0,i,l),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+o.width+"x"+o.height+") to ("+i+"x"+l+")."),c}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+o.width+"x"+o.height+")."),t}return t}function textureNeedsGenerateMipmaps(t){return t.generateMipmaps}function generateMipmap(r){t.generateMipmap(r)}function getTargetType(r){return r.isWebGLCubeRenderTarget?t.TEXTURE_CUBE_MAP:r.isWebGL3DRenderTarget?t.TEXTURE_3D:r.isWebGLArrayRenderTarget||r.isCompressedArrayTexture?t.TEXTURE_2D_ARRAY:t.TEXTURE_2D}function getInternalFormat(i,a,o,l,c=!1){if(null!==i){if(void 0!==t[i])return t[i];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+i+"'")}let h=a;if(a===t.RED&&(o===t.FLOAT&&(h=t.R32F),o===t.HALF_FLOAT&&(h=t.R16F),o===t.UNSIGNED_BYTE&&(h=t.R8)),a===t.RED_INTEGER&&(o===t.UNSIGNED_BYTE&&(h=t.R8UI),o===t.UNSIGNED_SHORT&&(h=t.R16UI),o===t.UNSIGNED_INT&&(h=t.R32UI),o===t.BYTE&&(h=t.R8I),o===t.SHORT&&(h=t.R16I),o===t.INT&&(h=t.R32I)),a===t.RG&&(o===t.FLOAT&&(h=t.RG32F),o===t.HALF_FLOAT&&(h=t.RG16F),o===t.UNSIGNED_BYTE&&(h=t.RG8)),a===t.RG_INTEGER&&(o===t.UNSIGNED_BYTE&&(h=t.RG8UI),o===t.UNSIGNED_SHORT&&(h=t.RG16UI),o===t.UNSIGNED_INT&&(h=t.RG32UI),o===t.BYTE&&(h=t.RG8I),o===t.SHORT&&(h=t.RG16I),o===t.INT&&(h=t.RG32I)),a===t.RGB_INTEGER&&(o===t.UNSIGNED_BYTE&&(h=t.RGB8UI),o===t.UNSIGNED_SHORT&&(h=t.RGB16UI),o===t.UNSIGNED_INT&&(h=t.RGB32UI),o===t.BYTE&&(h=t.RGB8I),o===t.SHORT&&(h=t.RGB16I),o===t.INT&&(h=t.RGB32I)),a===t.RGBA_INTEGER&&(o===t.UNSIGNED_BYTE&&(h=t.RGBA8UI),o===t.UNSIGNED_SHORT&&(h=t.RGBA16UI),o===t.UNSIGNED_INT&&(h=t.RGBA32UI),o===t.BYTE&&(h=t.RGBA8I),o===t.SHORT&&(h=t.RGBA16I),o===t.INT&&(h=t.RGBA32I)),a===t.RGB&&o===t.UNSIGNED_INT_5_9_9_9_REV&&(h=t.RGB9_E5),a===t.RGBA){const r=c?ss:Ps.getTransfer(l);o===t.FLOAT&&(h=t.RGBA32F),o===t.HALF_FLOAT&&(h=t.RGBA16F),o===t.UNSIGNED_BYTE&&(h=r===os?t.SRGB8_ALPHA8:t.RGBA8),o===t.UNSIGNED_SHORT_4_4_4_4&&(h=t.RGBA4),o===t.UNSIGNED_SHORT_5_5_5_1&&(h=t.RGB5_A1)}return h!==t.R16F&&h!==t.R32F&&h!==t.RG16F&&h!==t.RG32F&&h!==t.RGBA16F&&h!==t.RGBA32F||r.get("EXT_color_buffer_float"),h}function getInternalDepthFormat(r,i){let a;return r?null===i||i===sa||i===ua?a=t.DEPTH24_STENCIL8:i===oa?a=t.DEPTH32F_STENCIL8:i===ia&&(a=t.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):null===i||i===sa||i===ua?a=t.DEPTH_COMPONENT24:i===oa?a=t.DEPTH_COMPONENT32F:i===ia&&(a=t.DEPTH_COMPONENT16),a}function getMipLevels(t,r){return!0===textureNeedsGenerateMipmaps(t)||t.isFramebufferTexture&&t.minFilter!==Ji&&t.minFilter!==Qi?Math.log2(Math.max(r.width,r.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?r.mipmaps.length:1}function onTextureDispose(t){const r=t.target;r.removeEventListener("dispose",onTextureDispose),function deallocateTexture(t){const r=a.get(t);if(void 0===r.__webglInit)return;const i=t.source,o=g.get(i);if(o){const a=o[r.__cacheKey];a.usedTimes--,0===a.usedTimes&&deleteTexture(t),0===Object.keys(o).length&&g.delete(i)}a.remove(t)}(r),r.isVideoTexture&&p.delete(r)}function onRenderTargetDispose(r){const i=r.target;i.removeEventListener("dispose",onRenderTargetDispose),function deallocateRenderTarget(r){const i=a.get(r);r.depthTexture&&(r.depthTexture.dispose(),a.remove(r.depthTexture));if(r.isWebGLCubeRenderTarget)for(let r=0;r<6;r++){if(Array.isArray(i.__webglFramebuffer[r]))for(let a=0;a<i.__webglFramebuffer[r].length;a++)t.deleteFramebuffer(i.__webglFramebuffer[r][a]);else t.deleteFramebuffer(i.__webglFramebuffer[r]);i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[r])}else{if(Array.isArray(i.__webglFramebuffer))for(let r=0;r<i.__webglFramebuffer.length;r++)t.deleteFramebuffer(i.__webglFramebuffer[r]);else t.deleteFramebuffer(i.__webglFramebuffer);if(i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&t.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer)for(let r=0;r<i.__webglColorRenderbuffer.length;r++)i.__webglColorRenderbuffer[r]&&t.deleteRenderbuffer(i.__webglColorRenderbuffer[r]);i.__webglDepthRenderbuffer&&t.deleteRenderbuffer(i.__webglDepthRenderbuffer)}const o=r.textures;for(let r=0,i=o.length;r<i;r++){const i=a.get(o[r]);i.__webglTexture&&(t.deleteTexture(i.__webglTexture),c.memory.textures--),a.remove(o[r])}a.remove(r)}(i)}function deleteTexture(r){const i=a.get(r);t.deleteTexture(i.__webglTexture);const o=r.source;delete g.get(o)[i.__cacheKey],c.memory.textures--}let x=0;function setTexture2D(r,o){const l=a.get(r);if(r.isVideoTexture&&function updateVideoTexture(t){const r=c.render.frame;p.get(t)!==r&&(p.set(t,r),t.update())}(r),!1===r.isRenderTargetTexture&&r.version>0&&l.__version!==r.version){const t=r.image;if(null===t)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==t.complete)return void uploadTexture(l,r,o);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}i.bindTexture(t.TEXTURE_2D,l.__webglTexture,t.TEXTURE0+o)}const y={[ji]:t.REPEAT,[qi]:t.CLAMP_TO_EDGE,[Yi]:t.MIRRORED_REPEAT},M={[Ji]:t.NEAREST,[Ki]:t.NEAREST_MIPMAP_NEAREST,[Zi]:t.NEAREST_MIPMAP_LINEAR,[Qi]:t.LINEAR,[$i]:t.LINEAR_MIPMAP_NEAREST,[ta]:t.LINEAR_MIPMAP_LINEAR},S={[cs]:t.NEVER,[gs]:t.ALWAYS,[hs]:t.LESS,[ds]:t.LEQUAL,[us]:t.EQUAL,[ms]:t.GEQUAL,[ps]:t.GREATER,[fs]:t.NOTEQUAL};function setTextureParameters(i,l){if(l.type!==oa||!1!==r.has("OES_texture_float_linear")||l.magFilter!==Qi&&l.magFilter!==$i&&l.magFilter!==Zi&&l.magFilter!==ta&&l.minFilter!==Qi&&l.minFilter!==$i&&l.minFilter!==Zi&&l.minFilter!==ta||console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),t.texParameteri(i,t.TEXTURE_WRAP_S,y[l.wrapS]),t.texParameteri(i,t.TEXTURE_WRAP_T,y[l.wrapT]),i!==t.TEXTURE_3D&&i!==t.TEXTURE_2D_ARRAY||t.texParameteri(i,t.TEXTURE_WRAP_R,y[l.wrapR]),t.texParameteri(i,t.TEXTURE_MAG_FILTER,M[l.magFilter]),t.texParameteri(i,t.TEXTURE_MIN_FILTER,M[l.minFilter]),l.compareFunction&&(t.texParameteri(i,t.TEXTURE_COMPARE_MODE,t.COMPARE_REF_TO_TEXTURE),t.texParameteri(i,t.TEXTURE_COMPARE_FUNC,S[l.compareFunction])),!0===r.has("EXT_texture_filter_anisotropic")){if(l.magFilter===Ji)return;if(l.minFilter!==Zi&&l.minFilter!==ta)return;if(l.type===oa&&!1===r.has("OES_texture_float_linear"))return;if(l.anisotropy>1||a.get(l).__currentAnisotropy){const c=r.get("EXT_texture_filter_anisotropic");t.texParameterf(i,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(l.anisotropy,o.getMaxAnisotropy())),a.get(l).__currentAnisotropy=l.anisotropy}}}function initTexture(r,i){let a=!1;void 0===r.__webglInit&&(r.__webglInit=!0,i.addEventListener("dispose",onTextureDispose));const o=i.source;let l=g.get(o);void 0===l&&(l={},g.set(o,l));const h=function getTextureCacheKey(t){const r=[];return r.push(t.wrapS),r.push(t.wrapT),r.push(t.wrapR||0),r.push(t.magFilter),r.push(t.minFilter),r.push(t.anisotropy),r.push(t.internalFormat),r.push(t.format),r.push(t.type),r.push(t.generateMipmaps),r.push(t.premultiplyAlpha),r.push(t.flipY),r.push(t.unpackAlignment),r.push(t.colorSpace),r.join()}(i);if(h!==r.__cacheKey){void 0===l[h]&&(l[h]={texture:t.createTexture(),usedTimes:0},c.memory.textures++,a=!0),l[h].usedTimes++;const o=l[r.__cacheKey];void 0!==o&&(l[r.__cacheKey].usedTimes--,0===o.usedTimes&&deleteTexture(i)),r.__cacheKey=h,r.__webglTexture=l[h].texture}return a}function getRow(t,r,i){return Math.floor(Math.floor(t/i)/r)}function uploadTexture(r,c,h){let u=t.TEXTURE_2D;(c.isDataArrayTexture||c.isCompressedArrayTexture)&&(u=t.TEXTURE_2D_ARRAY),c.isData3DTexture&&(u=t.TEXTURE_3D);const d=initTexture(r,c),p=c.source;i.bindTexture(u,r.__webglTexture,t.TEXTURE0+h);const m=a.get(p);if(p.version!==m.__version||!0===d){i.activeTexture(t.TEXTURE0+h);const r=Ps.getPrimaries(Ps.workingColorSpace),a=c.colorSpace===rs?null:Ps.getPrimaries(c.colorSpace),g=c.colorSpace===rs||r===a?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,c.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,c.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,c.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,g);let _=resizeImage(c.image,!1,o.maxTextureSize);_=verifyColorSpace(c,_);const x=l.convert(c.format,c.colorSpace),y=l.convert(c.type);let M,S=getInternalFormat(c.internalFormat,x,y,c.colorSpace,c.isVideoTexture);setTextureParameters(u,c);const b=c.mipmaps,T=!0!==c.isVideoTexture,E=void 0===m.__version||!0===d,w=p.dataReady,C=getMipLevels(c,_);if(c.isDepthTexture)S=getInternalDepthFormat(c.format===ma,c.type),E&&(T?i.texStorage2D(t.TEXTURE_2D,1,S,_.width,_.height):i.texImage2D(t.TEXTURE_2D,0,S,_.width,_.height,0,x,y,null));else if(c.isDataTexture)if(b.length>0){T&&E&&i.texStorage2D(t.TEXTURE_2D,C,S,b[0].width,b[0].height);for(let r=0,a=b.length;r<a;r++)M=b[r],T?w&&i.texSubImage2D(t.TEXTURE_2D,r,0,0,M.width,M.height,x,y,M.data):i.texImage2D(t.TEXTURE_2D,r,S,M.width,M.height,0,x,y,M.data);c.generateMipmaps=!1}else T?(E&&i.texStorage2D(t.TEXTURE_2D,C,S,_.width,_.height),w&&function updateTexture(r,a,o,l){const c=r.updateRanges;if(0===c.length)i.texSubImage2D(t.TEXTURE_2D,0,0,0,a.width,a.height,o,l,a.data);else{c.sort(((t,r)=>t.start-r.start));let h=0;for(let t=1;t<c.length;t++){const r=c[h],i=c[t],o=r.start+r.count,l=getRow(i.start,a.width,4),u=getRow(r.start,a.width,4);i.start<=o+1&&l===u&&getRow(i.start+i.count-1,a.width,4)===l?r.count=Math.max(r.count,i.start+i.count-r.start):(++h,c[h]=i)}c.length=h+1;const u=t.getParameter(t.UNPACK_ROW_LENGTH),d=t.getParameter(t.UNPACK_SKIP_PIXELS),p=t.getParameter(t.UNPACK_SKIP_ROWS);t.pixelStorei(t.UNPACK_ROW_LENGTH,a.width);for(let r=0,h=c.length;r<h;r++){const h=c[r],u=Math.floor(h.start/4),d=Math.ceil(h.count/4),p=u%a.width,m=Math.floor(u/a.width),g=d,_=1;t.pixelStorei(t.UNPACK_SKIP_PIXELS,p),t.pixelStorei(t.UNPACK_SKIP_ROWS,m),i.texSubImage2D(t.TEXTURE_2D,0,p,m,g,_,o,l,a.data)}r.clearUpdateRanges(),t.pixelStorei(t.UNPACK_ROW_LENGTH,u),t.pixelStorei(t.UNPACK_SKIP_PIXELS,d),t.pixelStorei(t.UNPACK_SKIP_ROWS,p)}}(c,_,x,y)):i.texImage2D(t.TEXTURE_2D,0,S,_.width,_.height,0,x,y,_.data);else if(c.isCompressedTexture)if(c.isCompressedArrayTexture){T&&E&&i.texStorage3D(t.TEXTURE_2D_ARRAY,C,S,b[0].width,b[0].height,_.depth);for(let r=0,a=b.length;r<a;r++)if(M=b[r],c.format!==pa)if(null!==x)if(T){if(w)if(c.layerUpdates.size>0){const a=getByteLength(M.width,M.height,c.format,c.type);for(const o of c.layerUpdates){const l=M.data.subarray(o*a/M.data.BYTES_PER_ELEMENT,(o+1)*a/M.data.BYTES_PER_ELEMENT);i.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,r,0,0,o,M.width,M.height,1,x,l)}c.clearLayerUpdates()}else i.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,r,0,0,0,M.width,M.height,_.depth,x,M.data)}else i.compressedTexImage3D(t.TEXTURE_2D_ARRAY,r,S,M.width,M.height,_.depth,0,M.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else T?w&&i.texSubImage3D(t.TEXTURE_2D_ARRAY,r,0,0,0,M.width,M.height,_.depth,x,y,M.data):i.texImage3D(t.TEXTURE_2D_ARRAY,r,S,M.width,M.height,_.depth,0,x,y,M.data)}else{T&&E&&i.texStorage2D(t.TEXTURE_2D,C,S,b[0].width,b[0].height);for(let r=0,a=b.length;r<a;r++)M=b[r],c.format!==pa?null!==x?T?w&&i.compressedTexSubImage2D(t.TEXTURE_2D,r,0,0,M.width,M.height,x,M.data):i.compressedTexImage2D(t.TEXTURE_2D,r,S,M.width,M.height,0,M.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):T?w&&i.texSubImage2D(t.TEXTURE_2D,r,0,0,M.width,M.height,x,y,M.data):i.texImage2D(t.TEXTURE_2D,r,S,M.width,M.height,0,x,y,M.data)}else if(c.isDataArrayTexture)if(T){if(E&&i.texStorage3D(t.TEXTURE_2D_ARRAY,C,S,_.width,_.height,_.depth),w)if(c.layerUpdates.size>0){const r=getByteLength(_.width,_.height,c.format,c.type);for(const a of c.layerUpdates){const o=_.data.subarray(a*r/_.data.BYTES_PER_ELEMENT,(a+1)*r/_.data.BYTES_PER_ELEMENT);i.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,a,_.width,_.height,1,x,y,o)}c.clearLayerUpdates()}else i.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,0,_.width,_.height,_.depth,x,y,_.data)}else i.texImage3D(t.TEXTURE_2D_ARRAY,0,S,_.width,_.height,_.depth,0,x,y,_.data);else if(c.isData3DTexture)T?(E&&i.texStorage3D(t.TEXTURE_3D,C,S,_.width,_.height,_.depth),w&&i.texSubImage3D(t.TEXTURE_3D,0,0,0,0,_.width,_.height,_.depth,x,y,_.data)):i.texImage3D(t.TEXTURE_3D,0,S,_.width,_.height,_.depth,0,x,y,_.data);else if(c.isFramebufferTexture){if(E)if(T)i.texStorage2D(t.TEXTURE_2D,C,S,_.width,_.height);else{let r=_.width,a=_.height;for(let o=0;o<C;o++)i.texImage2D(t.TEXTURE_2D,o,S,r,a,0,x,y,null),r>>=1,a>>=1}}else if(b.length>0){if(T&&E){const r=getDimensions(b[0]);i.texStorage2D(t.TEXTURE_2D,C,S,r.width,r.height)}for(let r=0,a=b.length;r<a;r++)M=b[r],T?w&&i.texSubImage2D(t.TEXTURE_2D,r,0,0,x,y,M):i.texImage2D(t.TEXTURE_2D,r,S,x,y,M);c.generateMipmaps=!1}else if(T){if(E){const r=getDimensions(_);i.texStorage2D(t.TEXTURE_2D,C,S,r.width,r.height)}w&&i.texSubImage2D(t.TEXTURE_2D,0,0,0,x,y,_)}else i.texImage2D(t.TEXTURE_2D,0,S,x,y,_);textureNeedsGenerateMipmaps(c)&&generateMipmap(u),m.__version=p.version,c.onUpdate&&c.onUpdate(c)}r.__version=c.version}function setupFrameBufferTexture(r,o,c,u,d,p){const m=l.convert(c.format,c.colorSpace),g=l.convert(c.type),_=getInternalFormat(c.internalFormat,m,g,c.colorSpace),x=a.get(o),y=a.get(c);if(y.__renderTarget=o,!x.__hasExternalTextures){const r=Math.max(1,o.width>>p),a=Math.max(1,o.height>>p);d===t.TEXTURE_3D||d===t.TEXTURE_2D_ARRAY?i.texImage3D(d,p,_,r,a,o.depth,0,m,g,null):i.texImage2D(d,p,_,r,a,0,m,g,null)}i.bindFramebuffer(t.FRAMEBUFFER,r),useMultisampledRTT(o)?h.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,u,d,y.__webglTexture,0,getRenderTargetSamples(o)):(d===t.TEXTURE_2D||d>=t.TEXTURE_CUBE_MAP_POSITIVE_X&&d<=t.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&t.framebufferTexture2D(t.FRAMEBUFFER,u,d,y.__webglTexture,p),i.bindFramebuffer(t.FRAMEBUFFER,null)}function setupRenderBufferStorage(r,i,a){if(t.bindRenderbuffer(t.RENDERBUFFER,r),i.depthBuffer){const o=i.depthTexture,l=o&&o.isDepthTexture?o.type:null,c=getInternalDepthFormat(i.stencilBuffer,l),u=i.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,d=getRenderTargetSamples(i);useMultisampledRTT(i)?h.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,d,c,i.width,i.height):a?t.renderbufferStorageMultisample(t.RENDERBUFFER,d,c,i.width,i.height):t.renderbufferStorage(t.RENDERBUFFER,c,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,u,t.RENDERBUFFER,r)}else{const r=i.textures;for(let o=0;o<r.length;o++){const c=r[o],u=l.convert(c.format,c.colorSpace),d=l.convert(c.type),p=getInternalFormat(c.internalFormat,u,d,c.colorSpace),m=getRenderTargetSamples(i);a&&!1===useMultisampledRTT(i)?t.renderbufferStorageMultisample(t.RENDERBUFFER,m,p,i.width,i.height):useMultisampledRTT(i)?h.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,m,p,i.width,i.height):t.renderbufferStorage(t.RENDERBUFFER,p,i.width,i.height)}}t.bindRenderbuffer(t.RENDERBUFFER,null)}function setupDepthTexture(r,o){if(o&&o.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(t.FRAMEBUFFER,r),!o.depthTexture||!o.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const l=a.get(o.depthTexture);l.__renderTarget=o,l.__webglTexture&&o.depthTexture.image.width===o.width&&o.depthTexture.image.height===o.height||(o.depthTexture.image.width=o.width,o.depthTexture.image.height=o.height,o.depthTexture.needsUpdate=!0),setTexture2D(o.depthTexture,0);const c=l.__webglTexture,u=getRenderTargetSamples(o);if(o.depthTexture.format===fa)useMultisampledRTT(o)?h.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,c,0,u):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,c,0);else{if(o.depthTexture.format!==ma)throw new Error("Unknown depthTexture format");useMultisampledRTT(o)?h.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,c,0,u):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,c,0)}}function setupDepthRenderbuffer(r){const o=a.get(r),l=!0===r.isWebGLCubeRenderTarget;if(o.__boundDepthTexture!==r.depthTexture){const t=r.depthTexture;if(o.__depthDisposeCallback&&o.__depthDisposeCallback(),t){const disposeEvent=()=>{delete o.__boundDepthTexture,delete o.__depthDisposeCallback,t.removeEventListener("dispose",disposeEvent)};t.addEventListener("dispose",disposeEvent),o.__depthDisposeCallback=disposeEvent}o.__boundDepthTexture=t}if(r.depthTexture&&!o.__autoAllocateDepthBuffer){if(l)throw new Error("target.depthTexture not supported in Cube render targets");const t=r.texture.mipmaps;t&&t.length>0?setupDepthTexture(o.__webglFramebuffer[0],r):setupDepthTexture(o.__webglFramebuffer,r)}else if(l){o.__webglDepthbuffer=[];for(let a=0;a<6;a++)if(i.bindFramebuffer(t.FRAMEBUFFER,o.__webglFramebuffer[a]),void 0===o.__webglDepthbuffer[a])o.__webglDepthbuffer[a]=t.createRenderbuffer(),setupRenderBufferStorage(o.__webglDepthbuffer[a],r,!1);else{const i=r.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,l=o.__webglDepthbuffer[a];t.bindRenderbuffer(t.RENDERBUFFER,l),t.framebufferRenderbuffer(t.FRAMEBUFFER,i,t.RENDERBUFFER,l)}}else{const a=r.texture.mipmaps;if(a&&a.length>0?i.bindFramebuffer(t.FRAMEBUFFER,o.__webglFramebuffer[0]):i.bindFramebuffer(t.FRAMEBUFFER,o.__webglFramebuffer),void 0===o.__webglDepthbuffer)o.__webglDepthbuffer=t.createRenderbuffer(),setupRenderBufferStorage(o.__webglDepthbuffer,r,!1);else{const i=r.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,a=o.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,a),t.framebufferRenderbuffer(t.FRAMEBUFFER,i,t.RENDERBUFFER,a)}}i.bindFramebuffer(t.FRAMEBUFFER,null)}const b=[],T=[];function getRenderTargetSamples(t){return Math.min(o.maxSamples,t.samples)}function useMultisampledRTT(t){const i=a.get(t);return t.samples>0&&!0===r.has("WEBGL_multisampled_render_to_texture")&&!1!==i.__useRenderToTexture}function verifyColorSpace(t,r){const i=t.colorSpace,a=t.format,o=t.type;return!0===t.isCompressedTexture||!0===t.isVideoTexture||i!==as&&i!==rs&&(Ps.getTransfer(i)===os?a===pa&&o===ea||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",i)),r}function getDimensions(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement?(d.width=t.naturalWidth||t.width,d.height=t.naturalHeight||t.height):"undefined"!=typeof VideoFrame&&t instanceof VideoFrame?(d.width=t.displayWidth,d.height=t.displayHeight):(d.width=t.width,d.height=t.height),d}this.allocateTextureUnit=function allocateTextureUnit(){const t=x;return t>=o.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+o.maxTextures),x+=1,t},this.resetTextureUnits=function resetTextureUnits(){x=0},this.setTexture2D=setTexture2D,this.setTexture2DArray=function setTexture2DArray(r,o){const l=a.get(r);r.version>0&&l.__version!==r.version?uploadTexture(l,r,o):i.bindTexture(t.TEXTURE_2D_ARRAY,l.__webglTexture,t.TEXTURE0+o)},this.setTexture3D=function setTexture3D(r,o){const l=a.get(r);r.version>0&&l.__version!==r.version?uploadTexture(l,r,o):i.bindTexture(t.TEXTURE_3D,l.__webglTexture,t.TEXTURE0+o)},this.setTextureCube=function setTextureCube(r,c){const h=a.get(r);r.version>0&&h.__version!==r.version?function uploadCubeTexture(r,c,h){if(6!==c.image.length)return;const u=initTexture(r,c),d=c.source;i.bindTexture(t.TEXTURE_CUBE_MAP,r.__webglTexture,t.TEXTURE0+h);const p=a.get(d);if(d.version!==p.__version||!0===u){i.activeTexture(t.TEXTURE0+h);const r=Ps.getPrimaries(Ps.workingColorSpace),a=c.colorSpace===rs?null:Ps.getPrimaries(c.colorSpace),m=c.colorSpace===rs||r===a?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,c.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,c.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,c.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,m);const g=c.isCompressedTexture||c.image[0].isCompressedTexture,_=c.image[0]&&c.image[0].isDataTexture,x=[];for(let t=0;t<6;t++)x[t]=g||_?_?c.image[t].image:c.image[t]:resizeImage(c.image[t],!0,o.maxCubemapSize),x[t]=verifyColorSpace(c,x[t]);const y=x[0],M=l.convert(c.format,c.colorSpace),S=l.convert(c.type),b=getInternalFormat(c.internalFormat,M,S,c.colorSpace),T=!0!==c.isVideoTexture,E=void 0===p.__version||!0===u,w=d.dataReady;let C,A=getMipLevels(c,y);if(setTextureParameters(t.TEXTURE_CUBE_MAP,c),g){T&&E&&i.texStorage2D(t.TEXTURE_CUBE_MAP,A,b,y.width,y.height);for(let r=0;r<6;r++){C=x[r].mipmaps;for(let a=0;a<C.length;a++){const o=C[a];c.format!==pa?null!==M?T?w&&i.compressedTexSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+r,a,0,0,o.width,o.height,M,o.data):i.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+r,a,b,o.width,o.height,0,o.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):T?w&&i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+r,a,0,0,o.width,o.height,M,S,o.data):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+r,a,b,o.width,o.height,0,M,S,o.data)}}}else{if(C=c.mipmaps,T&&E){C.length>0&&A++;const r=getDimensions(x[0]);i.texStorage2D(t.TEXTURE_CUBE_MAP,A,b,r.width,r.height)}for(let r=0;r<6;r++)if(_){T?w&&i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,0,0,x[r].width,x[r].height,M,S,x[r].data):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,b,x[r].width,x[r].height,0,M,S,x[r].data);for(let a=0;a<C.length;a++){const o=C[a].image[r].image;T?w&&i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+r,a+1,0,0,o.width,o.height,M,S,o.data):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+r,a+1,b,o.width,o.height,0,M,S,o.data)}}else{T?w&&i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,0,0,M,S,x[r]):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,b,M,S,x[r]);for(let a=0;a<C.length;a++){const o=C[a];T?w&&i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+r,a+1,0,0,M,S,o.image[r]):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+r,a+1,b,M,S,o.image[r])}}}textureNeedsGenerateMipmaps(c)&&generateMipmap(t.TEXTURE_CUBE_MAP),p.__version=d.version,c.onUpdate&&c.onUpdate(c)}r.__version=c.version}(h,r,c):i.bindTexture(t.TEXTURE_CUBE_MAP,h.__webglTexture,t.TEXTURE0+c)},this.rebindTextures=function rebindTextures(r,i,o){const l=a.get(r);void 0!==i&&setupFrameBufferTexture(l.__webglFramebuffer,r,r.texture,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,0),void 0!==o&&setupDepthRenderbuffer(r)},this.setupRenderTarget=function setupRenderTarget(r){const o=r.texture,h=a.get(r),u=a.get(o);r.addEventListener("dispose",onRenderTargetDispose);const d=r.textures,p=!0===r.isWebGLCubeRenderTarget,m=d.length>1;if(m||(void 0===u.__webglTexture&&(u.__webglTexture=t.createTexture()),u.__version=o.version,c.memory.textures++),p){h.__webglFramebuffer=[];for(let r=0;r<6;r++)if(o.mipmaps&&o.mipmaps.length>0){h.__webglFramebuffer[r]=[];for(let i=0;i<o.mipmaps.length;i++)h.__webglFramebuffer[r][i]=t.createFramebuffer()}else h.__webglFramebuffer[r]=t.createFramebuffer()}else{if(o.mipmaps&&o.mipmaps.length>0){h.__webglFramebuffer=[];for(let r=0;r<o.mipmaps.length;r++)h.__webglFramebuffer[r]=t.createFramebuffer()}else h.__webglFramebuffer=t.createFramebuffer();if(m)for(let r=0,i=d.length;r<i;r++){const i=a.get(d[r]);void 0===i.__webglTexture&&(i.__webglTexture=t.createTexture(),c.memory.textures++)}if(r.samples>0&&!1===useMultisampledRTT(r)){h.__webglMultisampledFramebuffer=t.createFramebuffer(),h.__webglColorRenderbuffer=[],i.bindFramebuffer(t.FRAMEBUFFER,h.__webglMultisampledFramebuffer);for(let i=0;i<d.length;i++){const a=d[i];h.__webglColorRenderbuffer[i]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,h.__webglColorRenderbuffer[i]);const o=l.convert(a.format,a.colorSpace),c=l.convert(a.type),u=getInternalFormat(a.internalFormat,o,c,a.colorSpace,!0===r.isXRRenderTarget),p=getRenderTargetSamples(r);t.renderbufferStorageMultisample(t.RENDERBUFFER,p,u,r.width,r.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+i,t.RENDERBUFFER,h.__webglColorRenderbuffer[i])}t.bindRenderbuffer(t.RENDERBUFFER,null),r.depthBuffer&&(h.__webglDepthRenderbuffer=t.createRenderbuffer(),setupRenderBufferStorage(h.__webglDepthRenderbuffer,r,!0)),i.bindFramebuffer(t.FRAMEBUFFER,null)}}if(p){i.bindTexture(t.TEXTURE_CUBE_MAP,u.__webglTexture),setTextureParameters(t.TEXTURE_CUBE_MAP,o);for(let i=0;i<6;i++)if(o.mipmaps&&o.mipmaps.length>0)for(let a=0;a<o.mipmaps.length;a++)setupFrameBufferTexture(h.__webglFramebuffer[i][a],r,o,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+i,a);else setupFrameBufferTexture(h.__webglFramebuffer[i],r,o,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+i,0);textureNeedsGenerateMipmaps(o)&&generateMipmap(t.TEXTURE_CUBE_MAP),i.unbindTexture()}else if(m){for(let o=0,l=d.length;o<l;o++){const l=d[o],c=a.get(l);i.bindTexture(t.TEXTURE_2D,c.__webglTexture),setTextureParameters(t.TEXTURE_2D,l),setupFrameBufferTexture(h.__webglFramebuffer,r,l,t.COLOR_ATTACHMENT0+o,t.TEXTURE_2D,0),textureNeedsGenerateMipmaps(l)&&generateMipmap(t.TEXTURE_2D)}i.unbindTexture()}else{let a=t.TEXTURE_2D;if((r.isWebGL3DRenderTarget||r.isWebGLArrayRenderTarget)&&(a=r.isWebGL3DRenderTarget?t.TEXTURE_3D:t.TEXTURE_2D_ARRAY),i.bindTexture(a,u.__webglTexture),setTextureParameters(a,o),o.mipmaps&&o.mipmaps.length>0)for(let i=0;i<o.mipmaps.length;i++)setupFrameBufferTexture(h.__webglFramebuffer[i],r,o,t.COLOR_ATTACHMENT0,a,i);else setupFrameBufferTexture(h.__webglFramebuffer,r,o,t.COLOR_ATTACHMENT0,a,0);textureNeedsGenerateMipmaps(o)&&generateMipmap(a),i.unbindTexture()}r.depthBuffer&&setupDepthRenderbuffer(r)},this.updateRenderTargetMipmap=function updateRenderTargetMipmap(t){const r=t.textures;for(let o=0,l=r.length;o<l;o++){const l=r[o];if(textureNeedsGenerateMipmaps(l)){const r=getTargetType(t),o=a.get(l).__webglTexture;i.bindTexture(r,o),generateMipmap(r),i.unbindTexture()}}},this.updateMultisampleRenderTarget=function updateMultisampleRenderTarget(r){if(r.samples>0)if(!1===useMultisampledRTT(r)){const o=r.textures,l=r.width,c=r.height;let h=t.COLOR_BUFFER_BIT;const d=r.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,p=a.get(r),m=o.length>1;if(m)for(let r=0;r<o.length;r++)i.bindFramebuffer(t.FRAMEBUFFER,p.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+r,t.RENDERBUFFER,null),i.bindFramebuffer(t.FRAMEBUFFER,p.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+r,t.TEXTURE_2D,null,0);i.bindFramebuffer(t.READ_FRAMEBUFFER,p.__webglMultisampledFramebuffer);const g=r.texture.mipmaps;g&&g.length>0?i.bindFramebuffer(t.DRAW_FRAMEBUFFER,p.__webglFramebuffer[0]):i.bindFramebuffer(t.DRAW_FRAMEBUFFER,p.__webglFramebuffer);for(let i=0;i<o.length;i++){if(r.resolveDepthBuffer&&(r.depthBuffer&&(h|=t.DEPTH_BUFFER_BIT),r.stencilBuffer&&r.resolveStencilBuffer&&(h|=t.STENCIL_BUFFER_BIT)),m){t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,p.__webglColorRenderbuffer[i]);const r=a.get(o[i]).__webglTexture;t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0)}t.blitFramebuffer(0,0,l,c,0,0,l,c,h,t.NEAREST),!0===u&&(b.length=0,T.length=0,b.push(t.COLOR_ATTACHMENT0+i),r.depthBuffer&&!1===r.resolveDepthBuffer&&(b.push(d),T.push(d),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,T)),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,b))}if(i.bindFramebuffer(t.READ_FRAMEBUFFER,null),i.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),m)for(let r=0;r<o.length;r++){i.bindFramebuffer(t.FRAMEBUFFER,p.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+r,t.RENDERBUFFER,p.__webglColorRenderbuffer[r]);const l=a.get(o[r]).__webglTexture;i.bindFramebuffer(t.FRAMEBUFFER,p.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+r,t.TEXTURE_2D,l,0)}i.bindFramebuffer(t.DRAW_FRAMEBUFFER,p.__webglMultisampledFramebuffer)}else if(r.depthBuffer&&!1===r.resolveDepthBuffer&&u){const i=r.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,[i])}},this.setupDepthRenderbuffer=setupDepthRenderbuffer,this.setupFrameBufferTexture=setupFrameBufferTexture,this.useMultisampledRTT=useMultisampledRTT}function WebGLUtils(t,r){return{convert:function convert(i,a=""){let o;const l=Ps.getTransfer(a);if(i===ea)return t.UNSIGNED_BYTE;if(i===ca)return t.UNSIGNED_SHORT_4_4_4_4;if(i===ha)return t.UNSIGNED_SHORT_5_5_5_1;if(i===da)return t.UNSIGNED_INT_5_9_9_9_REV;if(i===na)return t.BYTE;if(i===ra)return t.SHORT;if(i===ia)return t.UNSIGNED_SHORT;if(i===aa)return t.INT;if(i===sa)return t.UNSIGNED_INT;if(i===oa)return t.FLOAT;if(i===la)return t.HALF_FLOAT;if(1021===i)return t.ALPHA;if(1022===i)return t.RGB;if(i===pa)return t.RGBA;if(i===fa)return t.DEPTH_COMPONENT;if(i===ma)return t.DEPTH_STENCIL;if(i===ga)return t.RED;if(i===_a)return t.RED_INTEGER;if(1030===i)return t.RG;if(i===va)return t.RG_INTEGER;if(i===xa)return t.RGBA_INTEGER;if(i===ya||i===Ma||i===Sa||i===ba)if(l===os){if(o=r.get("WEBGL_compressed_texture_s3tc_srgb"),null===o)return null;if(i===ya)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===Ma)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===Sa)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===ba)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(o=r.get("WEBGL_compressed_texture_s3tc"),null===o)return null;if(i===ya)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===Ma)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===Sa)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===ba)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(i===Ta||i===Ea||i===wa||i===Ca){if(o=r.get("WEBGL_compressed_texture_pvrtc"),null===o)return null;if(i===Ta)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===Ea)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===wa)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===Ca)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(i===Aa||i===Ra||i===Pa){if(o=r.get("WEBGL_compressed_texture_etc"),null===o)return null;if(i===Aa||i===Ra)return l===os?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(i===Pa)return l===os?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}if(i===La||i===Ua||i===Da||i===Ia||i===Na||i===Oa||i===Fa||i===za||i===Ba||i===Va||i===ka||i===Ga||i===Ha||i===Wa){if(o=r.get("WEBGL_compressed_texture_astc"),null===o)return null;if(i===La)return l===os?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===Ua)return l===os?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===Da)return l===os?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===Ia)return l===os?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===Na)return l===os?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===Oa)return l===os?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===Fa)return l===os?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===za)return l===os?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===Ba)return l===os?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===Va)return l===os?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===ka)return l===os?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===Ga)return l===os?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===Ha)return l===os?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===Wa)return l===os?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}if(i===Xa||i===ja||i===qa){if(o=r.get("EXT_texture_compression_bptc"),null===o)return null;if(i===Xa)return l===os?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===ja)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===qa)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(36283===i||i===Ya||i===Ja||i===Ka){if(o=r.get("EXT_texture_compression_rgtc"),null===o)return null;if(i===Xa)return o.COMPRESSED_RED_RGTC1_EXT;if(i===Ya)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===Ja)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===Ka)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return i===ua?t.UNSIGNED_INT_24_8:void 0!==t[i]?t[i]:null}}}class WebXRDepthSensing{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,r,i){if(null===this.texture){const a=new Texture;t.properties.get(a).__webglTexture=r.texture,r.depthNear===i.depthNear&&r.depthFar===i.depthFar||(this.depthNear=r.depthNear,this.depthFar=r.depthFar),this.texture=a}}getMesh(t){if(null!==this.texture&&null===this.mesh){const r=t.cameras[0].viewport,i=new ShaderMaterial({vertexShader:"\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}",fragmentShader:"\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}",uniforms:{depthColor:{value:this.texture},depthWidth:{value:r.z},depthHeight:{value:r.w}}});this.mesh=new Mesh(new PlaneGeometry(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class WebXRManager extends EventDispatcher{constructor(t,r){super();const i=this;let a=null,o=1,l=null,c="local-floor",h=1,u=null,d=null,p=null,m=null,g=null,_=null;const x=new WebXRDepthSensing,y=r.getContextAttributes();let M=null,S=null;const b=[],T=[],E=new Vector2;let w=null;const C=new PerspectiveCamera;C.viewport=new Vector4;const A=new PerspectiveCamera;A.viewport=new Vector4;const R=[C,A],P=new ArrayCamera;let L=null,U=null;function onSessionEvent(t){const r=T.indexOf(t.inputSource);if(-1===r)return;const i=b[r];void 0!==i&&(i.update(t.inputSource,t.frame,u||l),i.dispatchEvent({type:t.type,data:t.inputSource}))}function onSessionEnd(){a.removeEventListener("select",onSessionEvent),a.removeEventListener("selectstart",onSessionEvent),a.removeEventListener("selectend",onSessionEvent),a.removeEventListener("squeeze",onSessionEvent),a.removeEventListener("squeezestart",onSessionEvent),a.removeEventListener("squeezeend",onSessionEvent),a.removeEventListener("end",onSessionEnd),a.removeEventListener("inputsourceschange",onInputSourcesChange);for(let t=0;t<b.length;t++){const r=T[t];null!==r&&(T[t]=null,b[t].disconnect(r))}L=null,U=null,x.reset(),t.setRenderTarget(M),g=null,m=null,p=null,a=null,S=null,O.stop(),i.isPresenting=!1,t.setPixelRatio(w),t.setSize(E.width,E.height,!1),i.dispatchEvent({type:"sessionend"})}function onInputSourcesChange(t){for(let r=0;r<t.removed.length;r++){const i=t.removed[r],a=T.indexOf(i);a>=0&&(T[a]=null,b[a].disconnect(i))}for(let r=0;r<t.added.length;r++){const i=t.added[r];let a=T.indexOf(i);if(-1===a){for(let t=0;t<b.length;t++){if(t>=T.length){T.push(i),a=t;break}if(null===T[t]){T[t]=i,a=t;break}}if(-1===a)break}const o=b[a];o&&o.connect(i)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let r=b[t];return void 0===r&&(r=new WebXRController,b[t]=r),r.getTargetRaySpace()},this.getControllerGrip=function(t){let r=b[t];return void 0===r&&(r=new WebXRController,b[t]=r),r.getGripSpace()},this.getHand=function(t){let r=b[t];return void 0===r&&(r=new WebXRController,b[t]=r),r.getHandSpace()},this.setFramebufferScaleFactor=function(t){o=t,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){c=t,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return u||l},this.setReferenceSpace=function(t){u=t},this.getBaseLayer=function(){return null!==m?m:g},this.getBinding=function(){return p},this.getFrame=function(){return _},this.getSession=function(){return a},this.setSession=async function(d){if(a=d,null!==a){M=t.getRenderTarget(),a.addEventListener("select",onSessionEvent),a.addEventListener("selectstart",onSessionEvent),a.addEventListener("selectend",onSessionEvent),a.addEventListener("squeeze",onSessionEvent),a.addEventListener("squeezestart",onSessionEvent),a.addEventListener("squeezeend",onSessionEvent),a.addEventListener("end",onSessionEnd),a.addEventListener("inputsourceschange",onInputSourcesChange),!0!==y.xrCompatible&&await r.makeXRCompatible(),w=t.getPixelRatio(),t.getSize(E);if("undefined"!=typeof XRWebGLBinding&&"createProjectionLayer"in XRWebGLBinding.prototype){let i=null,l=null,c=null;y.depth&&(c=y.stencil?r.DEPTH24_STENCIL8:r.DEPTH_COMPONENT24,i=y.stencil?ma:fa,l=y.stencil?ua:sa);const h={colorFormat:r.RGBA8,depthFormat:c,scaleFactor:o};p=new XRWebGLBinding(a,r),m=p.createProjectionLayer(h),a.updateRenderState({layers:[m]}),t.setPixelRatio(1),t.setSize(m.textureWidth,m.textureHeight,!1),S=new WebGLRenderTarget(m.textureWidth,m.textureHeight,{format:pa,type:ea,depthTexture:new DepthTexture(m.textureWidth,m.textureHeight,l,void 0,void 0,void 0,void 0,void 0,void 0,i),stencilBuffer:y.stencil,colorSpace:t.outputColorSpace,samples:y.antialias?4:0,resolveDepthBuffer:!1===m.ignoreDepthValues,resolveStencilBuffer:!1===m.ignoreDepthValues})}else{const i={antialias:y.antialias,alpha:!0,depth:y.depth,stencil:y.stencil,framebufferScaleFactor:o};g=new XRWebGLLayer(a,r,i),a.updateRenderState({baseLayer:g}),t.setPixelRatio(1),t.setSize(g.framebufferWidth,g.framebufferHeight,!1),S=new WebGLRenderTarget(g.framebufferWidth,g.framebufferHeight,{format:pa,type:ea,colorSpace:t.outputColorSpace,stencilBuffer:y.stencil,resolveDepthBuffer:!1===g.ignoreDepthValues,resolveStencilBuffer:!1===g.ignoreDepthValues})}S.isXRRenderTarget=!0,this.setFoveation(h),u=null,l=await a.requestReferenceSpace(c),O.setContext(a),O.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==a)return a.environmentBlendMode},this.getDepthTexture=function(){return x.getDepthTexture()};const D=new Vector3,I=new Vector3;function updateCamera(t,r){null===r?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(r.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===a)return;let r=t.near,i=t.far;null!==x.texture&&(x.depthNear>0&&(r=x.depthNear),x.depthFar>0&&(i=x.depthFar)),P.near=A.near=C.near=r,P.far=A.far=C.far=i,L===P.near&&U===P.far||(a.updateRenderState({depthNear:P.near,depthFar:P.far}),L=P.near,U=P.far),C.layers.mask=2|t.layers.mask,A.layers.mask=4|t.layers.mask,P.layers.mask=C.layers.mask|A.layers.mask;const o=t.parent,l=P.cameras;updateCamera(P,o);for(let t=0;t<l.length;t++)updateCamera(l[t],o);2===l.length?function setProjectionFromUnion(t,r,i){D.setFromMatrixPosition(r.matrixWorld),I.setFromMatrixPosition(i.matrixWorld);const a=D.distanceTo(I),o=r.projectionMatrix.elements,l=i.projectionMatrix.elements,c=o[14]/(o[10]-1),h=o[14]/(o[10]+1),u=(o[9]+1)/o[5],d=(o[9]-1)/o[5],p=(o[8]-1)/o[0],m=(l[8]+1)/l[0],g=c*p,_=c*m,x=a/(-p+m),y=x*-p;if(r.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(y),t.translateZ(x),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert(),-1===o[10])t.projectionMatrix.copy(r.projectionMatrix),t.projectionMatrixInverse.copy(r.projectionMatrixInverse);else{const r=c+x,i=h+x,o=g-y,l=_+(a-y),p=u*h/i*r,m=d*h/i*r;t.projectionMatrix.makePerspective(o,l,p,m,r,i),t.projectionMatrixInverse.copy(t.projectionMatrix).invert()}}(P,C,A):P.projectionMatrix.copy(C.projectionMatrix),function updateUserCamera(t,r,i){null===i?t.matrix.copy(r.matrixWorld):(t.matrix.copy(i.matrixWorld),t.matrix.invert(),t.matrix.multiply(r.matrixWorld));t.matrix.decompose(t.position,t.quaternion,t.scale),t.updateMatrixWorld(!0),t.projectionMatrix.copy(r.projectionMatrix),t.projectionMatrixInverse.copy(r.projectionMatrixInverse),t.isPerspectiveCamera&&(t.fov=2*bs*Math.atan(1/t.projectionMatrix.elements[5]),t.zoom=1)}(t,P,o)},this.getCamera=function(){return P},this.getFoveation=function(){if(null!==m||null!==g)return h},this.setFoveation=function(t){h=t,null!==m&&(m.fixedFoveation=t),null!==g&&void 0!==g.fixedFoveation&&(g.fixedFoveation=t)},this.hasDepthSensing=function(){return null!==x.texture},this.getDepthSensingMesh=function(){return x.getMesh(P)};let N=null;const O=new WebGLAnimation;O.setAnimationLoop((function onAnimationFrame(r,o){if(d=o.getViewerPose(u||l),_=o,null!==d){const r=d.views;null!==g&&(t.setRenderTargetFramebuffer(S,g.framebuffer),t.setRenderTarget(S));let i=!1;r.length!==P.cameras.length&&(P.cameras.length=0,i=!0);for(let a=0;a<r.length;a++){const o=r[a];let l=null;if(null!==g)l=g.getViewport(o);else{const r=p.getViewSubImage(m,o);l=r.viewport,0===a&&(t.setRenderTargetTextures(S,r.colorTexture,r.depthStencilTexture),t.setRenderTarget(S))}let c=R[a];void 0===c&&(c=new PerspectiveCamera,c.layers.enable(a),c.viewport=new Vector4,R[a]=c),c.matrix.fromArray(o.transform.matrix),c.matrix.decompose(c.position,c.quaternion,c.scale),c.projectionMatrix.fromArray(o.projectionMatrix),c.projectionMatrixInverse.copy(c.projectionMatrix).invert(),c.viewport.set(l.x,l.y,l.width,l.height),0===a&&(P.matrix.copy(c.matrix),P.matrix.decompose(P.position,P.quaternion,P.scale)),!0===i&&P.cameras.push(c)}const o=a.enabledFeatures;if(o&&o.includes("depth-sensing")&&"gpu-optimized"==a.depthUsage&&p){const i=p.getDepthInformation(r[0]);i&&i.isValid&&i.texture&&x.init(t,i,a.renderState)}}for(let t=0;t<b.length;t++){const r=T[t],i=b[t];null!==r&&void 0!==i&&i.update(r,o,u||l)}N&&N(r,o),o.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:o}),_=null})),this.setAnimationLoop=function(t){N=t},this.dispose=function(){}}}const Gc=new Euler,Hc=new Matrix4;function WebGLMaterials(t,r){function refreshTransformUniform(t,r){!0===t.matrixAutoUpdate&&t.updateMatrix(),r.value.copy(t.matrix)}function refreshUniformsCommon(t,i){t.opacity.value=i.opacity,i.color&&t.diffuse.value.copy(i.color),i.emissive&&t.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(t.map.value=i.map,refreshTransformUniform(i.map,t.mapTransform)),i.alphaMap&&(t.alphaMap.value=i.alphaMap,refreshTransformUniform(i.alphaMap,t.alphaMapTransform)),i.bumpMap&&(t.bumpMap.value=i.bumpMap,refreshTransformUniform(i.bumpMap,t.bumpMapTransform),t.bumpScale.value=i.bumpScale,1===i.side&&(t.bumpScale.value*=-1)),i.normalMap&&(t.normalMap.value=i.normalMap,refreshTransformUniform(i.normalMap,t.normalMapTransform),t.normalScale.value.copy(i.normalScale),1===i.side&&t.normalScale.value.negate()),i.displacementMap&&(t.displacementMap.value=i.displacementMap,refreshTransformUniform(i.displacementMap,t.displacementMapTransform),t.displacementScale.value=i.displacementScale,t.displacementBias.value=i.displacementBias),i.emissiveMap&&(t.emissiveMap.value=i.emissiveMap,refreshTransformUniform(i.emissiveMap,t.emissiveMapTransform)),i.specularMap&&(t.specularMap.value=i.specularMap,refreshTransformUniform(i.specularMap,t.specularMapTransform)),i.alphaTest>0&&(t.alphaTest.value=i.alphaTest);const a=r.get(i),o=a.envMap,l=a.envMapRotation;o&&(t.envMap.value=o,Gc.copy(l),Gc.x*=-1,Gc.y*=-1,Gc.z*=-1,o.isCubeTexture&&!1===o.isRenderTargetTexture&&(Gc.y*=-1,Gc.z*=-1),t.envMapRotation.value.setFromMatrix4(Hc.makeRotationFromEuler(Gc)),t.flipEnvMap.value=o.isCubeTexture&&!1===o.isRenderTargetTexture?-1:1,t.reflectivity.value=i.reflectivity,t.ior.value=i.ior,t.refractionRatio.value=i.refractionRatio),i.lightMap&&(t.lightMap.value=i.lightMap,t.lightMapIntensity.value=i.lightMapIntensity,refreshTransformUniform(i.lightMap,t.lightMapTransform)),i.aoMap&&(t.aoMap.value=i.aoMap,t.aoMapIntensity.value=i.aoMapIntensity,refreshTransformUniform(i.aoMap,t.aoMapTransform))}return{refreshFogUniforms:function refreshFogUniforms(r,i){i.color.getRGB(r.fogColor.value,getUnlitUniformColorSpace(t)),i.isFog?(r.fogNear.value=i.near,r.fogFar.value=i.far):i.isFogExp2&&(r.fogDensity.value=i.density)},refreshMaterialUniforms:function refreshMaterialUniforms(t,i,a,o,l){i.isMeshBasicMaterial||i.isMeshLambertMaterial?refreshUniformsCommon(t,i):i.isMeshToonMaterial?(refreshUniformsCommon(t,i),function refreshUniformsToon(t,r){r.gradientMap&&(t.gradientMap.value=r.gradientMap)}(t,i)):i.isMeshPhongMaterial?(refreshUniformsCommon(t,i),function refreshUniformsPhong(t,r){t.specular.value.copy(r.specular),t.shininess.value=Math.max(r.shininess,1e-4)}(t,i)):i.isMeshStandardMaterial?(refreshUniformsCommon(t,i),function refreshUniformsStandard(t,r){t.metalness.value=r.metalness,r.metalnessMap&&(t.metalnessMap.value=r.metalnessMap,refreshTransformUniform(r.metalnessMap,t.metalnessMapTransform));t.roughness.value=r.roughness,r.roughnessMap&&(t.roughnessMap.value=r.roughnessMap,refreshTransformUniform(r.roughnessMap,t.roughnessMapTransform));r.envMap&&(t.envMapIntensity.value=r.envMapIntensity)}(t,i),i.isMeshPhysicalMaterial&&function refreshUniformsPhysical(t,r,i){t.ior.value=r.ior,r.sheen>0&&(t.sheenColor.value.copy(r.sheenColor).multiplyScalar(r.sheen),t.sheenRoughness.value=r.sheenRoughness,r.sheenColorMap&&(t.sheenColorMap.value=r.sheenColorMap,refreshTransformUniform(r.sheenColorMap,t.sheenColorMapTransform)),r.sheenRoughnessMap&&(t.sheenRoughnessMap.value=r.sheenRoughnessMap,refreshTransformUniform(r.sheenRoughnessMap,t.sheenRoughnessMapTransform)));r.clearcoat>0&&(t.clearcoat.value=r.clearcoat,t.clearcoatRoughness.value=r.clearcoatRoughness,r.clearcoatMap&&(t.clearcoatMap.value=r.clearcoatMap,refreshTransformUniform(r.clearcoatMap,t.clearcoatMapTransform)),r.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=r.clearcoatRoughnessMap,refreshTransformUniform(r.clearcoatRoughnessMap,t.clearcoatRoughnessMapTransform)),r.clearcoatNormalMap&&(t.clearcoatNormalMap.value=r.clearcoatNormalMap,refreshTransformUniform(r.clearcoatNormalMap,t.clearcoatNormalMapTransform),t.clearcoatNormalScale.value.copy(r.clearcoatNormalScale),1===r.side&&t.clearcoatNormalScale.value.negate()));r.dispersion>0&&(t.dispersion.value=r.dispersion);r.iridescence>0&&(t.iridescence.value=r.iridescence,t.iridescenceIOR.value=r.iridescenceIOR,t.iridescenceThicknessMinimum.value=r.iridescenceThicknessRange[0],t.iridescenceThicknessMaximum.value=r.iridescenceThicknessRange[1],r.iridescenceMap&&(t.iridescenceMap.value=r.iridescenceMap,refreshTransformUniform(r.iridescenceMap,t.iridescenceMapTransform)),r.iridescenceThicknessMap&&(t.iridescenceThicknessMap.value=r.iridescenceThicknessMap,refreshTransformUniform(r.iridescenceThicknessMap,t.iridescenceThicknessMapTransform)));r.transmission>0&&(t.transmission.value=r.transmission,t.transmissionSamplerMap.value=i.texture,t.transmissionSamplerSize.value.set(i.width,i.height),r.transmissionMap&&(t.transmissionMap.value=r.transmissionMap,refreshTransformUniform(r.transmissionMap,t.transmissionMapTransform)),t.thickness.value=r.thickness,r.thicknessMap&&(t.thicknessMap.value=r.thicknessMap,refreshTransformUniform(r.thicknessMap,t.thicknessMapTransform)),t.attenuationDistance.value=r.attenuationDistance,t.attenuationColor.value.copy(r.attenuationColor));r.anisotropy>0&&(t.anisotropyVector.value.set(r.anisotropy*Math.cos(r.anisotropyRotation),r.anisotropy*Math.sin(r.anisotropyRotation)),r.anisotropyMap&&(t.anisotropyMap.value=r.anisotropyMap,refreshTransformUniform(r.anisotropyMap,t.anisotropyMapTransform)));t.specularIntensity.value=r.specularIntensity,t.specularColor.value.copy(r.specularColor),r.specularColorMap&&(t.specularColorMap.value=r.specularColorMap,refreshTransformUniform(r.specularColorMap,t.specularColorMapTransform));r.specularIntensityMap&&(t.specularIntensityMap.value=r.specularIntensityMap,refreshTransformUniform(r.specularIntensityMap,t.specularIntensityMapTransform))}(t,i,l)):i.isMeshMatcapMaterial?(refreshUniformsCommon(t,i),function refreshUniformsMatcap(t,r){r.matcap&&(t.matcap.value=r.matcap)}(t,i)):i.isMeshDepthMaterial?refreshUniformsCommon(t,i):i.isMeshDistanceMaterial?(refreshUniformsCommon(t,i),function refreshUniformsDistance(t,i){const a=r.get(i).light;t.referencePosition.value.setFromMatrixPosition(a.matrixWorld),t.nearDistance.value=a.shadow.camera.near,t.farDistance.value=a.shadow.camera.far}(t,i)):i.isMeshNormalMaterial?refreshUniformsCommon(t,i):i.isLineBasicMaterial?(!function refreshUniformsLine(t,r){t.diffuse.value.copy(r.color),t.opacity.value=r.opacity,r.map&&(t.map.value=r.map,refreshTransformUniform(r.map,t.mapTransform))}(t,i),i.isLineDashedMaterial&&function refreshUniformsDash(t,r){t.dashSize.value=r.dashSize,t.totalSize.value=r.dashSize+r.gapSize,t.scale.value=r.scale}(t,i)):i.isPointsMaterial?function refreshUniformsPoints(t,r,i,a){t.diffuse.value.copy(r.color),t.opacity.value=r.opacity,t.size.value=r.size*i,t.scale.value=.5*a,r.map&&(t.map.value=r.map,refreshTransformUniform(r.map,t.uvTransform));r.alphaMap&&(t.alphaMap.value=r.alphaMap,refreshTransformUniform(r.alphaMap,t.alphaMapTransform));r.alphaTest>0&&(t.alphaTest.value=r.alphaTest)}(t,i,a,o):i.isSpriteMaterial?function refreshUniformsSprites(t,r){t.diffuse.value.copy(r.color),t.opacity.value=r.opacity,t.rotation.value=r.rotation,r.map&&(t.map.value=r.map,refreshTransformUniform(r.map,t.mapTransform));r.alphaMap&&(t.alphaMap.value=r.alphaMap,refreshTransformUniform(r.alphaMap,t.alphaMapTransform));r.alphaTest>0&&(t.alphaTest.value=r.alphaTest)}(t,i):i.isShadowMaterial?(t.color.value.copy(i.color),t.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function WebGLUniformsGroups(t,r,i,a){let o={},l={},c=[];const h=t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS);function hasUniformChanged(t,r,i,a){const o=t.value,l=r+"_"+i;if(void 0===a[l])return a[l]="number"==typeof o||"boolean"==typeof o?o:o.clone(),!0;{const t=a[l];if("number"==typeof o||"boolean"==typeof o){if(t!==o)return a[l]=o,!0}else if(!1===t.equals(o))return t.copy(o),!0}return!1}function getUniformSize(t){const r={boundary:0,storage:0};return"number"==typeof t||"boolean"==typeof t?(r.boundary=4,r.storage=4):t.isVector2?(r.boundary=8,r.storage=8):t.isVector3||t.isColor?(r.boundary=16,r.storage=12):t.isVector4?(r.boundary=16,r.storage=16):t.isMatrix3?(r.boundary=48,r.storage=48):t.isMatrix4?(r.boundary=64,r.storage=64):t.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",t),r}function onUniformsGroupsDispose(r){const i=r.target;i.removeEventListener("dispose",onUniformsGroupsDispose);const a=c.indexOf(i.__bindingPointIndex);c.splice(a,1),t.deleteBuffer(o[i.id]),delete o[i.id],delete l[i.id]}return{bind:function bind(t,r){const i=r.program;a.uniformBlockBinding(t,i)},update:function update(i,u){let d=o[i.id];void 0===d&&(!function prepareUniformsGroup(t){const r=t.uniforms;let i=0;const a=16;for(let t=0,o=r.length;t<o;t++){const o=Array.isArray(r[t])?r[t]:[r[t]];for(let t=0,r=o.length;t<r;t++){const r=o[t],l=Array.isArray(r.value)?r.value:[r.value];for(let t=0,o=l.length;t<o;t++){const o=getUniformSize(l[t]),c=i%a,h=c%o.boundary,u=c+h;i+=h,0!==u&&a-u<o.storage&&(i+=a-u),r.__data=new Float32Array(o.storage/Float32Array.BYTES_PER_ELEMENT),r.__offset=i,i+=o.storage}}}const o=i%a;o>0&&(i+=a-o);return t.__size=i,t.__cache={},this}(i),d=function createBuffer(r){const i=function allocateBindingPointIndex(){for(let t=0;t<h;t++)if(-1===c.indexOf(t))return c.push(t),t;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();r.__bindingPointIndex=i;const a=t.createBuffer(),o=r.__size,l=r.usage;return t.bindBuffer(t.UNIFORM_BUFFER,a),t.bufferData(t.UNIFORM_BUFFER,o,l),t.bindBuffer(t.UNIFORM_BUFFER,null),t.bindBufferBase(t.UNIFORM_BUFFER,i,a),a}(i),o[i.id]=d,i.addEventListener("dispose",onUniformsGroupsDispose));const p=u.program;a.updateUBOMapping(i,p);const m=r.render.frame;l[i.id]!==m&&(!function updateBufferData(r){const i=o[r.id],a=r.uniforms,l=r.__cache;t.bindBuffer(t.UNIFORM_BUFFER,i);for(let r=0,i=a.length;r<i;r++){const i=Array.isArray(a[r])?a[r]:[a[r]];for(let a=0,o=i.length;a<o;a++){const o=i[a];if(!0===hasUniformChanged(o,r,a,l)){const r=o.__offset,i=Array.isArray(o.value)?o.value:[o.value];let a=0;for(let l=0;l<i.length;l++){const c=i[l],h=getUniformSize(c);"number"==typeof c||"boolean"==typeof c?(o.__data[0]=c,t.bufferSubData(t.UNIFORM_BUFFER,r+a,o.__data)):c.isMatrix3?(o.__data[0]=c.elements[0],o.__data[1]=c.elements[1],o.__data[2]=c.elements[2],o.__data[3]=0,o.__data[4]=c.elements[3],o.__data[5]=c.elements[4],o.__data[6]=c.elements[5],o.__data[7]=0,o.__data[8]=c.elements[6],o.__data[9]=c.elements[7],o.__data[10]=c.elements[8],o.__data[11]=0):(c.toArray(o.__data,a),a+=h.storage/Float32Array.BYTES_PER_ELEMENT)}t.bufferSubData(t.UNIFORM_BUFFER,r,o.__data)}}}t.bindBuffer(t.UNIFORM_BUFFER,null)}(i),l[i.id]=m)},dispose:function dispose(){for(const r in o)t.deleteBuffer(o[r]);c=[],o={},l={}}}}class WebGLRenderer{constructor(t={}){const{canvas:r=createCanvasElement(),context:i=null,depth:a=!0,stencil:o=!1,alpha:l=!1,antialias:c=!1,premultipliedAlpha:h=!0,preserveDrawingBuffer:u=!1,powerPreference:d="default",failIfMajorPerformanceCaveat:p=!1,reverseDepthBuffer:m=!1}=t;let g;if(this.isWebGLRenderer=!0,null!==i){if("undefined"!=typeof WebGLRenderingContext&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");g=i.getContextAttributes().alpha}else g=l;const _=new Uint32Array(4),x=new Int32Array(4);let y=null,M=null;const S=[],b=[];this.domElement=r,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=0,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const T=this;let E=!1;this._outputColorSpace=is;let w=0,C=0,A=null,R=-1,P=null;const L=new Vector4,U=new Vector4;let D=null;const I=new Color(0);let N=0,O=r.width,z=r.height,B=1,V=null,k=null;const G=new Vector4(0,0,O,z),H=new Vector4(0,0,O,z);let W=!1;const X=new Frustum;let j=!1,q=!1;const Y=new Matrix4,J=new Matrix4,K=new Vector3,Z=new Vector4,Q={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let $=!1;function getTargetPixelRatio(){return null===A?B:1}let tt,et,nt,rt,it,at,st,ot,lt,ct,ht,ut,dt,pt,ft,mt,gt,_t,vt,xt,yt,Mt,St,bt,Tt=i;function getContext(t,i){return r.getContext(t,i)}try{const t={alpha:!0,depth:a,stencil:o,antialias:c,premultipliedAlpha:h,preserveDrawingBuffer:u,powerPreference:d,failIfMajorPerformanceCaveat:p};if("setAttribute"in r&&r.setAttribute("data-engine",`three.js r${ui}`),r.addEventListener("webglcontextlost",onContextLost,!1),r.addEventListener("webglcontextrestored",onContextRestore,!1),r.addEventListener("webglcontextcreationerror",onContextCreationError,!1),null===Tt){const r="webgl2";if(Tt=getContext(r,t),null===Tt)throw getContext(r)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function initGLContext(){tt=new WebGLExtensions(Tt),tt.init(),Mt=new WebGLUtils(Tt,tt),et=new WebGLCapabilities(Tt,tt,t,Mt),nt=new WebGLState(Tt,tt),et.reverseDepthBuffer&&m&&nt.buffers.depth.setReversed(!0),rt=new WebGLInfo(Tt),it=new WebGLProperties,at=new WebGLTextures(Tt,tt,nt,it,et,Mt,rt),st=new WebGLCubeMaps(T),ot=new WebGLCubeUVMaps(T),lt=new WebGLAttributes(Tt),St=new WebGLBindingStates(Tt,lt),ct=new WebGLGeometries(Tt,lt,rt,St),ht=new WebGLObjects(Tt,ct,lt,rt),vt=new WebGLMorphtargets(Tt,et,at),mt=new WebGLClipping(it),ut=new WebGLPrograms(T,st,ot,tt,et,St,mt),dt=new WebGLMaterials(T,it),pt=new WebGLRenderLists,ft=new WebGLRenderStates(tt),_t=new WebGLBackground(T,st,ot,nt,ht,g,h),gt=new WebGLShadowMap(T,ht,et),bt=new WebGLUniformsGroups(Tt,rt,et,nt),xt=new WebGLBufferRenderer(Tt,tt,rt),yt=new WebGLIndexedBufferRenderer(Tt,tt,rt),rt.programs=ut.programs,T.capabilities=et,T.extensions=tt,T.properties=it,T.renderLists=pt,T.shadowMap=gt,T.state=nt,T.info=rt}initGLContext();const Et=new WebXRManager(T,Tt);function onContextLost(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),E=!0}function onContextRestore(){console.log("THREE.WebGLRenderer: Context Restored."),E=!1;const t=rt.autoReset,r=gt.enabled,i=gt.autoUpdate,a=gt.needsUpdate,o=gt.type;initGLContext(),rt.autoReset=t,gt.enabled=r,gt.autoUpdate=i,gt.needsUpdate=a,gt.type=o}function onContextCreationError(t){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",t.statusMessage)}function onMaterialDispose(t){const r=t.target;r.removeEventListener("dispose",onMaterialDispose),function deallocateMaterial(t){(function releaseMaterialProgramReferences(t){const r=it.get(t).programs;void 0!==r&&(r.forEach((function(t){ut.releaseProgram(t)})),t.isShaderMaterial&&ut.releaseShaderCache(t))})(t),it.remove(t)}(r)}function prepareMaterial(t,r,i){!0===t.transparent&&2===t.side&&!1===t.forceSinglePass?(t.side=1,t.needsUpdate=!0,getProgram(t,r,i),t.side=0,t.needsUpdate=!0,getProgram(t,r,i),t.side=2):getProgram(t,r,i)}this.xr=Et,this.getContext=function(){return Tt},this.getContextAttributes=function(){return Tt.getContextAttributes()},this.forceContextLoss=function(){const t=tt.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=tt.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return B},this.setPixelRatio=function(t){void 0!==t&&(B=t,this.setSize(O,z,!1))},this.getSize=function(t){return t.set(O,z)},this.setSize=function(t,i,a=!0){Et.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(O=t,z=i,r.width=Math.floor(t*B),r.height=Math.floor(i*B),!0===a&&(r.style.width=t+"px",r.style.height=i+"px"),this.setViewport(0,0,t,i))},this.getDrawingBufferSize=function(t){return t.set(O*B,z*B).floor()},this.setDrawingBufferSize=function(t,i,a){O=t,z=i,B=a,r.width=Math.floor(t*a),r.height=Math.floor(i*a),this.setViewport(0,0,t,i)},this.getCurrentViewport=function(t){return t.copy(L)},this.getViewport=function(t){return t.copy(G)},this.setViewport=function(t,r,i,a){t.isVector4?G.set(t.x,t.y,t.z,t.w):G.set(t,r,i,a),nt.viewport(L.copy(G).multiplyScalar(B).round())},this.getScissor=function(t){return t.copy(H)},this.setScissor=function(t,r,i,a){t.isVector4?H.set(t.x,t.y,t.z,t.w):H.set(t,r,i,a),nt.scissor(U.copy(H).multiplyScalar(B).round())},this.getScissorTest=function(){return W},this.setScissorTest=function(t){nt.setScissorTest(W=t)},this.setOpaqueSort=function(t){V=t},this.setTransparentSort=function(t){k=t},this.getClearColor=function(t){return t.copy(_t.getClearColor())},this.setClearColor=function(){_t.setClearColor(...arguments)},this.getClearAlpha=function(){return _t.getClearAlpha()},this.setClearAlpha=function(){_t.setClearAlpha(...arguments)},this.clear=function(t=!0,r=!0,i=!0){let a=0;if(t){let t=!1;if(null!==A){const r=A.texture.format;t=r===xa||r===va||r===_a}if(t){const t=A.texture.type,r=t===ea||t===sa||t===ia||t===ua||t===ca||t===ha,i=_t.getClearColor(),a=_t.getClearAlpha(),o=i.r,l=i.g,c=i.b;r?(_[0]=o,_[1]=l,_[2]=c,_[3]=a,Tt.clearBufferuiv(Tt.COLOR,0,_)):(x[0]=o,x[1]=l,x[2]=c,x[3]=a,Tt.clearBufferiv(Tt.COLOR,0,x))}else a|=Tt.COLOR_BUFFER_BIT}r&&(a|=Tt.DEPTH_BUFFER_BIT),i&&(a|=Tt.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),Tt.clear(a)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){r.removeEventListener("webglcontextlost",onContextLost,!1),r.removeEventListener("webglcontextrestored",onContextRestore,!1),r.removeEventListener("webglcontextcreationerror",onContextCreationError,!1),_t.dispose(),pt.dispose(),ft.dispose(),it.dispose(),st.dispose(),ot.dispose(),ht.dispose(),St.dispose(),bt.dispose(),ut.dispose(),Et.dispose(),Et.removeEventListener("sessionstart",onXRSessionStart),Et.removeEventListener("sessionend",onXRSessionEnd),Ct.stop()},this.renderBufferDirect=function(t,r,i,a,o,l){null===r&&(r=Q);const c=o.isMesh&&o.matrixWorld.determinant()<0,h=function setProgram(t,r,i,a,o){!0!==r.isScene&&(r=Q);at.resetTextureUnits();const l=r.fog,c=a.isMeshStandardMaterial?r.environment:null,h=null===A?T.outputColorSpace:!0===A.isXRRenderTarget?A.texture.colorSpace:as,u=(a.isMeshStandardMaterial?ot:st).get(a.envMap||c),d=!0===a.vertexColors&&!!i.attributes.color&&4===i.attributes.color.itemSize,p=!!i.attributes.tangent&&(!!a.normalMap||a.anisotropy>0),m=!!i.morphAttributes.position,g=!!i.morphAttributes.normal,_=!!i.morphAttributes.color;let x=0;a.toneMapped&&(null!==A&&!0!==A.isXRRenderTarget||(x=T.toneMapping));const y=i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color,S=void 0!==y?y.length:0,b=it.get(a),E=M.state.lights;if(!0===j&&(!0===q||t!==P)){const r=t===P&&a.id===R;mt.setState(a,t,r)}let w=!1;a.version===b.__version?b.needsLights&&b.lightsStateVersion!==E.state.version||b.outputColorSpace!==h||o.isBatchedMesh&&!1===b.batching?w=!0:o.isBatchedMesh||!0!==b.batching?o.isBatchedMesh&&!0===b.batchingColor&&null===o.colorTexture||o.isBatchedMesh&&!1===b.batchingColor&&null!==o.colorTexture||o.isInstancedMesh&&!1===b.instancing?w=!0:o.isInstancedMesh||!0!==b.instancing?o.isSkinnedMesh&&!1===b.skinning?w=!0:o.isSkinnedMesh||!0!==b.skinning?o.isInstancedMesh&&!0===b.instancingColor&&null===o.instanceColor||o.isInstancedMesh&&!1===b.instancingColor&&null!==o.instanceColor||o.isInstancedMesh&&!0===b.instancingMorph&&null===o.morphTexture||o.isInstancedMesh&&!1===b.instancingMorph&&null!==o.morphTexture||b.envMap!==u||!0===a.fog&&b.fog!==l?w=!0:void 0===b.numClippingPlanes||b.numClippingPlanes===mt.numPlanes&&b.numIntersection===mt.numIntersection?(b.vertexAlphas!==d||b.vertexTangents!==p||b.morphTargets!==m||b.morphNormals!==g||b.morphColors!==_||b.toneMapping!==x||b.morphTargetsCount!==S)&&(w=!0):w=!0:w=!0:w=!0:w=!0:(w=!0,b.__version=a.version);let C=b.currentProgram;!0===w&&(C=getProgram(a,r,o));let L=!1,U=!1,D=!1;const I=C.getUniforms(),N=b.uniforms;nt.useProgram(C.program)&&(L=!0,U=!0,D=!0);a.id!==R&&(R=a.id,U=!0);if(L||P!==t){nt.buffers.depth.getReversed()?(Y.copy(t.projectionMatrix),function toNormalizedProjectionMatrix(t){const r=t.elements;r[2]=.5*r[2]+.5*r[3],r[6]=.5*r[6]+.5*r[7],r[10]=.5*r[10]+.5*r[11],r[14]=.5*r[14]+.5*r[15]}(Y),function toReversedProjectionMatrix(t){const r=t.elements;-1===r[11]?(r[10]=-r[10]-1,r[14]=-r[14]):(r[10]=-r[10],r[14]=1-r[14])}(Y),I.setValue(Tt,"projectionMatrix",Y)):I.setValue(Tt,"projectionMatrix",t.projectionMatrix),I.setValue(Tt,"viewMatrix",t.matrixWorldInverse);const r=I.map.cameraPosition;void 0!==r&&r.setValue(Tt,K.setFromMatrixPosition(t.matrixWorld)),et.logarithmicDepthBuffer&&I.setValue(Tt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),(a.isMeshPhongMaterial||a.isMeshToonMaterial||a.isMeshLambertMaterial||a.isMeshBasicMaterial||a.isMeshStandardMaterial||a.isShaderMaterial)&&I.setValue(Tt,"isOrthographic",!0===t.isOrthographicCamera),P!==t&&(P=t,U=!0,D=!0)}if(o.isSkinnedMesh){I.setOptional(Tt,o,"bindMatrix"),I.setOptional(Tt,o,"bindMatrixInverse");const t=o.skeleton;t&&(null===t.boneTexture&&t.computeBoneTexture(),I.setValue(Tt,"boneTexture",t.boneTexture,at))}o.isBatchedMesh&&(I.setOptional(Tt,o,"batchingTexture"),I.setValue(Tt,"batchingTexture",o._matricesTexture,at),I.setOptional(Tt,o,"batchingIdTexture"),I.setValue(Tt,"batchingIdTexture",o._indirectTexture,at),I.setOptional(Tt,o,"batchingColorTexture"),null!==o._colorsTexture&&I.setValue(Tt,"batchingColorTexture",o._colorsTexture,at));const O=i.morphAttributes;void 0===O.position&&void 0===O.normal&&void 0===O.color||vt.update(o,i,C);(U||b.receiveShadow!==o.receiveShadow)&&(b.receiveShadow=o.receiveShadow,I.setValue(Tt,"receiveShadow",o.receiveShadow));a.isMeshGouraudMaterial&&null!==a.envMap&&(N.envMap.value=u,N.flipEnvMap.value=u.isCubeTexture&&!1===u.isRenderTargetTexture?-1:1);a.isMeshStandardMaterial&&null===a.envMap&&null!==r.environment&&(N.envMapIntensity.value=r.environmentIntensity);U&&(I.setValue(Tt,"toneMappingExposure",T.toneMappingExposure),b.needsLights&&function markUniformsLightsNeedsUpdate(t,r){t.ambientLightColor.needsUpdate=r,t.lightProbe.needsUpdate=r,t.directionalLights.needsUpdate=r,t.directionalLightShadows.needsUpdate=r,t.pointLights.needsUpdate=r,t.pointLightShadows.needsUpdate=r,t.spotLights.needsUpdate=r,t.spotLightShadows.needsUpdate=r,t.rectAreaLights.needsUpdate=r,t.hemisphereLights.needsUpdate=r}(N,D),l&&!0===a.fog&&dt.refreshFogUniforms(N,l),dt.refreshMaterialUniforms(N,a,B,z,M.state.transmissionRenderTarget[t.id]),WebGLUniforms.upload(Tt,getUniformList(b),N,at));a.isShaderMaterial&&!0===a.uniformsNeedUpdate&&(WebGLUniforms.upload(Tt,getUniformList(b),N,at),a.uniformsNeedUpdate=!1);a.isSpriteMaterial&&I.setValue(Tt,"center",o.center);if(I.setValue(Tt,"modelViewMatrix",o.modelViewMatrix),I.setValue(Tt,"normalMatrix",o.normalMatrix),I.setValue(Tt,"modelMatrix",o.matrixWorld),a.isShaderMaterial||a.isRawShaderMaterial){const t=a.uniformsGroups;for(let r=0,i=t.length;r<i;r++){const i=t[r];bt.update(i,C),bt.bind(i,C)}}return C}(t,r,i,a,o);nt.setMaterial(a,c);let u=i.index,d=1;if(!0===a.wireframe){if(u=ct.getWireframeAttribute(i),void 0===u)return;d=2}const p=i.drawRange,m=i.attributes.position;let g=p.start*d,_=(p.start+p.count)*d;null!==l&&(g=Math.max(g,l.start*d),_=Math.min(_,(l.start+l.count)*d)),null!==u?(g=Math.max(g,0),_=Math.min(_,u.count)):null!=m&&(g=Math.max(g,0),_=Math.min(_,m.count));const x=_-g;if(x<0||x===1/0)return;let y;St.setup(o,a,h,i,u);let S=xt;if(null!==u&&(y=lt.get(u),S=yt,S.setIndex(y)),o.isMesh)!0===a.wireframe?(nt.setLineWidth(a.wireframeLinewidth*getTargetPixelRatio()),S.setMode(Tt.LINES)):S.setMode(Tt.TRIANGLES);else if(o.isLine){let t=a.linewidth;void 0===t&&(t=1),nt.setLineWidth(t*getTargetPixelRatio()),o.isLineSegments?S.setMode(Tt.LINES):o.isLineLoop?S.setMode(Tt.LINE_LOOP):S.setMode(Tt.LINE_STRIP)}else o.isPoints?S.setMode(Tt.POINTS):o.isSprite&&S.setMode(Tt.TRIANGLES);if(o.isBatchedMesh)if(null!==o._multiDrawInstances)warnOnce("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),S.renderMultiDrawInstances(o._multiDrawStarts,o._multiDrawCounts,o._multiDrawCount,o._multiDrawInstances);else if(tt.get("WEBGL_multi_draw"))S.renderMultiDraw(o._multiDrawStarts,o._multiDrawCounts,o._multiDrawCount);else{const t=o._multiDrawStarts,r=o._multiDrawCounts,i=o._multiDrawCount,l=u?lt.get(u).bytesPerElement:1,c=it.get(a).currentProgram.getUniforms();for(let a=0;a<i;a++)c.setValue(Tt,"_gl_DrawID",a),S.render(t[a]/l,r[a])}else if(o.isInstancedMesh)S.renderInstances(g,x,o.count);else if(i.isInstancedBufferGeometry){const t=void 0!==i._maxInstanceCount?i._maxInstanceCount:1/0,r=Math.min(i.instanceCount,t);S.renderInstances(g,x,r)}else S.render(g,x)},this.compile=function(t,r,i=null){null===i&&(i=t),M=ft.get(i),M.init(r),b.push(M),i.traverseVisible((function(t){t.isLight&&t.layers.test(r.layers)&&(M.pushLight(t),t.castShadow&&M.pushShadow(t))})),t!==i&&t.traverseVisible((function(t){t.isLight&&t.layers.test(r.layers)&&(M.pushLight(t),t.castShadow&&M.pushShadow(t))})),M.setupLights();const a=new Set;return t.traverse((function(t){if(!(t.isMesh||t.isPoints||t.isLine||t.isSprite))return;const r=t.material;if(r)if(Array.isArray(r))for(let o=0;o<r.length;o++){const l=r[o];prepareMaterial(l,i,t),a.add(l)}else prepareMaterial(r,i,t),a.add(r)})),M=b.pop(),a},this.compileAsync=function(t,r,i=null){const a=this.compile(t,r,i);return new Promise((r=>{function checkMaterialsReady(){a.forEach((function(t){it.get(t).currentProgram.isReady()&&a.delete(t)})),0!==a.size?setTimeout(checkMaterialsReady,10):r(t)}null!==tt.get("KHR_parallel_shader_compile")?checkMaterialsReady():setTimeout(checkMaterialsReady,10)}))};let wt=null;function onXRSessionStart(){Ct.stop()}function onXRSessionEnd(){Ct.start()}const Ct=new WebGLAnimation;function projectObject(t,r,i,a){if(!1===t.visible)return;if(t.layers.test(r.layers))if(t.isGroup)i=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(r);else if(t.isLight)M.pushLight(t),t.castShadow&&M.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||X.intersectsSprite(t)){a&&Z.setFromMatrixPosition(t.matrixWorld).applyMatrix4(J);const r=ht.update(t),o=t.material;o.visible&&y.push(t,r,o,i,Z.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(!t.frustumCulled||X.intersectsObject(t))){const r=ht.update(t),o=t.material;if(a&&(void 0!==t.boundingSphere?(null===t.boundingSphere&&t.computeBoundingSphere(),Z.copy(t.boundingSphere.center)):(null===r.boundingSphere&&r.computeBoundingSphere(),Z.copy(r.boundingSphere.center)),Z.applyMatrix4(t.matrixWorld).applyMatrix4(J)),Array.isArray(o)){const a=r.groups;for(let l=0,c=a.length;l<c;l++){const c=a[l],h=o[c.materialIndex];h&&h.visible&&y.push(t,r,h,i,Z.z,c)}}else o.visible&&y.push(t,r,o,i,Z.z,null)}const o=t.children;for(let t=0,l=o.length;t<l;t++)projectObject(o[t],r,i,a)}function renderScene(t,r,i,a){const o=t.opaque,l=t.transmissive,c=t.transparent;M.setupLightsView(i),!0===j&&mt.setGlobalState(T.clippingPlanes,i),a&&nt.viewport(L.copy(a)),o.length>0&&renderObjects(o,r,i),l.length>0&&renderObjects(l,r,i),c.length>0&&renderObjects(c,r,i),nt.buffers.depth.setTest(!0),nt.buffers.depth.setMask(!0),nt.buffers.color.setMask(!0),nt.setPolygonOffset(!1)}function renderTransmissionPass(t,r,i,a){if(null!==(!0===i.isScene?i.overrideMaterial:null))return;void 0===M.state.transmissionRenderTarget[a.id]&&(M.state.transmissionRenderTarget[a.id]=new WebGLRenderTarget(1,1,{generateMipmaps:!0,type:tt.has("EXT_color_buffer_half_float")||tt.has("EXT_color_buffer_float")?la:ea,minFilter:ta,samples:4,stencilBuffer:o,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Ps.workingColorSpace}));const l=M.state.transmissionRenderTarget[a.id],c=a.viewport||L;l.setSize(c.z*T.transmissionResolutionScale,c.w*T.transmissionResolutionScale);const h=T.getRenderTarget();T.setRenderTarget(l),T.getClearColor(I),N=T.getClearAlpha(),N<1&&T.setClearColor(16777215,.5),T.clear(),$&&_t.render(i);const u=T.toneMapping;T.toneMapping=0;const d=a.viewport;if(void 0!==a.viewport&&(a.viewport=void 0),M.setupLightsView(a),!0===j&&mt.setGlobalState(T.clippingPlanes,a),renderObjects(t,i,a),at.updateMultisampleRenderTarget(l),at.updateRenderTargetMipmap(l),!1===tt.has("WEBGL_multisampled_render_to_texture")){let t=!1;for(let o=0,l=r.length;o<l;o++){const l=r[o],c=l.object,h=l.geometry,u=l.material,d=l.group;if(2===u.side&&c.layers.test(a.layers)){const r=u.side;u.side=1,u.needsUpdate=!0,renderObject(c,i,a,h,u,d),u.side=r,u.needsUpdate=!0,t=!0}}!0===t&&(at.updateMultisampleRenderTarget(l),at.updateRenderTargetMipmap(l))}T.setRenderTarget(h),T.setClearColor(I,N),void 0!==d&&(a.viewport=d),T.toneMapping=u}function renderObjects(t,r,i){const a=!0===r.isScene?r.overrideMaterial:null;for(let o=0,l=t.length;o<l;o++){const l=t[o],c=l.object,h=l.geometry,u=l.group;let d=l.material;!0===d.allowOverride&&null!==a&&(d=a),c.layers.test(i.layers)&&renderObject(c,r,i,h,d,u)}}function renderObject(t,r,i,a,o,l){t.onBeforeRender(T,r,i,a,o,l),t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),o.onBeforeRender(T,r,i,a,t,l),!0===o.transparent&&2===o.side&&!1===o.forceSinglePass?(o.side=1,o.needsUpdate=!0,T.renderBufferDirect(i,r,a,o,t,l),o.side=0,o.needsUpdate=!0,T.renderBufferDirect(i,r,a,o,t,l),o.side=2):T.renderBufferDirect(i,r,a,o,t,l),t.onAfterRender(T,r,i,a,o,l)}function getProgram(t,r,i){!0!==r.isScene&&(r=Q);const a=it.get(t),o=M.state.lights,l=M.state.shadowsArray,c=o.state.version,h=ut.getParameters(t,o.state,l,r,i),u=ut.getProgramCacheKey(h);let d=a.programs;a.environment=t.isMeshStandardMaterial?r.environment:null,a.fog=r.fog,a.envMap=(t.isMeshStandardMaterial?ot:st).get(t.envMap||a.environment),a.envMapRotation=null!==a.environment&&null===t.envMap?r.environmentRotation:t.envMapRotation,void 0===d&&(t.addEventListener("dispose",onMaterialDispose),d=new Map,a.programs=d);let p=d.get(u);if(void 0!==p){if(a.currentProgram===p&&a.lightsStateVersion===c)return updateCommonMaterialProperties(t,h),p}else h.uniforms=ut.getUniforms(t),t.onBeforeCompile(h,T),p=ut.acquireProgram(h,u),d.set(u,p),a.uniforms=h.uniforms;const m=a.uniforms;return(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(m.clippingPlanes=mt.uniform),updateCommonMaterialProperties(t,h),a.needsLights=function materialNeedsLights(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),a.lightsStateVersion=c,a.needsLights&&(m.ambientLightColor.value=o.state.ambient,m.lightProbe.value=o.state.probe,m.directionalLights.value=o.state.directional,m.directionalLightShadows.value=o.state.directionalShadow,m.spotLights.value=o.state.spot,m.spotLightShadows.value=o.state.spotShadow,m.rectAreaLights.value=o.state.rectArea,m.ltc_1.value=o.state.rectAreaLTC1,m.ltc_2.value=o.state.rectAreaLTC2,m.pointLights.value=o.state.point,m.pointLightShadows.value=o.state.pointShadow,m.hemisphereLights.value=o.state.hemi,m.directionalShadowMap.value=o.state.directionalShadowMap,m.directionalShadowMatrix.value=o.state.directionalShadowMatrix,m.spotShadowMap.value=o.state.spotShadowMap,m.spotLightMatrix.value=o.state.spotLightMatrix,m.spotLightMap.value=o.state.spotLightMap,m.pointShadowMap.value=o.state.pointShadowMap,m.pointShadowMatrix.value=o.state.pointShadowMatrix),a.currentProgram=p,a.uniformsList=null,p}function getUniformList(t){if(null===t.uniformsList){const r=t.currentProgram.getUniforms();t.uniformsList=WebGLUniforms.seqWithValue(r.seq,t.uniforms)}return t.uniformsList}function updateCommonMaterialProperties(t,r){const i=it.get(t);i.outputColorSpace=r.outputColorSpace,i.batching=r.batching,i.batchingColor=r.batchingColor,i.instancing=r.instancing,i.instancingColor=r.instancingColor,i.instancingMorph=r.instancingMorph,i.skinning=r.skinning,i.morphTargets=r.morphTargets,i.morphNormals=r.morphNormals,i.morphColors=r.morphColors,i.morphTargetsCount=r.morphTargetsCount,i.numClippingPlanes=r.numClippingPlanes,i.numIntersection=r.numClipIntersection,i.vertexAlphas=r.vertexAlphas,i.vertexTangents=r.vertexTangents,i.toneMapping=r.toneMapping}Ct.setAnimationLoop((function onAnimationFrame(t){wt&&wt(t)})),"undefined"!=typeof self&&Ct.setContext(self),this.setAnimationLoop=function(t){wt=t,Et.setAnimationLoop(t),null===t?Ct.stop():Ct.start()},Et.addEventListener("sessionstart",onXRSessionStart),Et.addEventListener("sessionend",onXRSessionEnd),this.render=function(t,r){if(void 0!==r&&!0!==r.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===E)return;if(!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),null===r.parent&&!0===r.matrixWorldAutoUpdate&&r.updateMatrixWorld(),!0===Et.enabled&&!0===Et.isPresenting&&(!0===Et.cameraAutoUpdate&&Et.updateCamera(r),r=Et.getCamera()),!0===t.isScene&&t.onBeforeRender(T,t,r,A),M=ft.get(t,b.length),M.init(r),b.push(M),J.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),X.setFromProjectionMatrix(J),q=this.localClippingEnabled,j=mt.init(this.clippingPlanes,q),y=pt.get(t,S.length),y.init(),S.push(y),!0===Et.enabled&&!0===Et.isPresenting){const t=T.xr.getDepthSensingMesh();null!==t&&projectObject(t,r,-1/0,T.sortObjects)}projectObject(t,r,0,T.sortObjects),y.finish(),!0===T.sortObjects&&y.sort(V,k),$=!1===Et.enabled||!1===Et.isPresenting||!1===Et.hasDepthSensing(),$&&_t.addToRenderList(y,t),this.info.render.frame++,!0===j&&mt.beginShadows();const i=M.state.shadowsArray;gt.render(i,t,r),!0===j&&mt.endShadows(),!0===this.info.autoReset&&this.info.reset();const a=y.opaque,o=y.transmissive;if(M.setupLights(),r.isArrayCamera){const i=r.cameras;if(o.length>0)for(let r=0,l=i.length;r<l;r++){renderTransmissionPass(a,o,t,i[r])}$&&_t.render(t);for(let r=0,a=i.length;r<a;r++){const a=i[r];renderScene(y,t,a,a.viewport)}}else o.length>0&&renderTransmissionPass(a,o,t,r),$&&_t.render(t),renderScene(y,t,r);null!==A&&0===C&&(at.updateMultisampleRenderTarget(A),at.updateRenderTargetMipmap(A)),!0===t.isScene&&t.onAfterRender(T,t,r),St.resetDefaultState(),R=-1,P=null,b.pop(),b.length>0?(M=b[b.length-1],!0===j&&mt.setGlobalState(T.clippingPlanes,M.state.camera)):M=null,S.pop(),y=S.length>0?S[S.length-1]:null},this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return C},this.getRenderTarget=function(){return A},this.setRenderTargetTextures=function(t,r,i){const a=it.get(t);a.__autoAllocateDepthBuffer=!1===t.resolveDepthBuffer,!1===a.__autoAllocateDepthBuffer&&(a.__useRenderToTexture=!1),it.get(t.texture).__webglTexture=r,it.get(t.depthTexture).__webglTexture=a.__autoAllocateDepthBuffer?void 0:i,a.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(t,r){const i=it.get(t);i.__webglFramebuffer=r,i.__useDefaultFramebuffer=void 0===r};const At=Tt.createFramebuffer();this.setRenderTarget=function(t,r=0,i=0){A=t,w=r,C=i;let a=!0,o=null,l=!1,c=!1;if(t){const h=it.get(t);if(void 0!==h.__useDefaultFramebuffer)nt.bindFramebuffer(Tt.FRAMEBUFFER,null),a=!1;else if(void 0===h.__webglFramebuffer)at.setupRenderTarget(t);else if(h.__hasExternalTextures)at.rebindTextures(t,it.get(t.texture).__webglTexture,it.get(t.depthTexture).__webglTexture);else if(t.depthBuffer){const r=t.depthTexture;if(h.__boundDepthTexture!==r){if(null!==r&&it.has(r)&&(t.width!==r.image.width||t.height!==r.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");at.setupDepthRenderbuffer(t)}}const u=t.texture;(u.isData3DTexture||u.isDataArrayTexture||u.isCompressedArrayTexture)&&(c=!0);const d=it.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(o=Array.isArray(d[r])?d[r][i]:d[r],l=!0):o=t.samples>0&&!1===at.useMultisampledRTT(t)?it.get(t).__webglMultisampledFramebuffer:Array.isArray(d)?d[i]:d,L.copy(t.viewport),U.copy(t.scissor),D=t.scissorTest}else L.copy(G).multiplyScalar(B).floor(),U.copy(H).multiplyScalar(B).floor(),D=W;0!==i&&(o=At);if(nt.bindFramebuffer(Tt.FRAMEBUFFER,o)&&a&&nt.drawBuffers(t,o),nt.viewport(L),nt.scissor(U),nt.setScissorTest(D),l){const a=it.get(t.texture);Tt.framebufferTexture2D(Tt.FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,Tt.TEXTURE_CUBE_MAP_POSITIVE_X+r,a.__webglTexture,i)}else if(c){const a=it.get(t.texture),o=r;Tt.framebufferTextureLayer(Tt.FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,a.__webglTexture,i,o)}else if(null!==t&&0!==i){const r=it.get(t.texture);Tt.framebufferTexture2D(Tt.FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,Tt.TEXTURE_2D,r.__webglTexture,i)}R=-1},this.readRenderTargetPixels=function(t,r,i,a,o,l,c,h=0){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let u=it.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==c&&(u=u[c]),u){nt.bindFramebuffer(Tt.FRAMEBUFFER,u);try{const c=t.textures[h],u=c.format,d=c.type;if(!et.textureFormatReadable(u))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!et.textureTypeReadable(d))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");r>=0&&r<=t.width-a&&i>=0&&i<=t.height-o&&(t.textures.length>1&&Tt.readBuffer(Tt.COLOR_ATTACHMENT0+h),Tt.readPixels(r,i,a,o,Mt.convert(u),Mt.convert(d),l))}finally{const t=null!==A?it.get(A).__webglFramebuffer:null;nt.bindFramebuffer(Tt.FRAMEBUFFER,t)}}},this.readRenderTargetPixelsAsync=async function(t,r,i,a,o,l,c,h=0){if(!t||!t.isWebGLRenderTarget)throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let u=it.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==c&&(u=u[c]),u){if(r>=0&&r<=t.width-a&&i>=0&&i<=t.height-o){nt.bindFramebuffer(Tt.FRAMEBUFFER,u);const c=t.textures[h],d=c.format,p=c.type;if(!et.textureFormatReadable(d))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!et.textureTypeReadable(p))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const m=Tt.createBuffer();Tt.bindBuffer(Tt.PIXEL_PACK_BUFFER,m),Tt.bufferData(Tt.PIXEL_PACK_BUFFER,l.byteLength,Tt.STREAM_READ),t.textures.length>1&&Tt.readBuffer(Tt.COLOR_ATTACHMENT0+h),Tt.readPixels(r,i,a,o,Mt.convert(d),Mt.convert(p),0);const g=null!==A?it.get(A).__webglFramebuffer:null;nt.bindFramebuffer(Tt.FRAMEBUFFER,g);const _=Tt.fenceSync(Tt.SYNC_GPU_COMMANDS_COMPLETE,0);return Tt.flush(),await function probeAsync(t,r,i){return new Promise((function(a,o){setTimeout((function probe(){switch(t.clientWaitSync(r,t.SYNC_FLUSH_COMMANDS_BIT,0)){case t.WAIT_FAILED:o();break;case t.TIMEOUT_EXPIRED:setTimeout(probe,i);break;default:a()}}),i)}))}(Tt,_,4),Tt.bindBuffer(Tt.PIXEL_PACK_BUFFER,m),Tt.getBufferSubData(Tt.PIXEL_PACK_BUFFER,0,l),Tt.deleteBuffer(m),Tt.deleteSync(_),l}throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(t,r=null,i=0){const a=Math.pow(2,-i),o=Math.floor(t.image.width*a),l=Math.floor(t.image.height*a),c=null!==r?r.x:0,h=null!==r?r.y:0;at.setTexture2D(t,0),Tt.copyTexSubImage2D(Tt.TEXTURE_2D,i,0,0,c,h,o,l),nt.unbindTexture()};const Rt=Tt.createFramebuffer(),Pt=Tt.createFramebuffer();this.copyTextureToTexture=function(t,r,i=null,a=null,o=0,l=null){let c,h,u,d,p,m,g,_,x;null===l&&(0!==o?(warnOnce("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),l=o,o=0):l=0);const y=t.isCompressedTexture?t.mipmaps[l]:t.image;if(null!==i)c=i.max.x-i.min.x,h=i.max.y-i.min.y,u=i.isBox3?i.max.z-i.min.z:1,d=i.min.x,p=i.min.y,m=i.isBox3?i.min.z:0;else{const r=Math.pow(2,-o);c=Math.floor(y.width*r),h=Math.floor(y.height*r),u=t.isDataArrayTexture?y.depth:t.isData3DTexture?Math.floor(y.depth*r):1,d=0,p=0,m=0}null!==a?(g=a.x,_=a.y,x=a.z):(g=0,_=0,x=0);const M=Mt.convert(r.format),S=Mt.convert(r.type);let b;r.isData3DTexture?(at.setTexture3D(r,0),b=Tt.TEXTURE_3D):r.isDataArrayTexture||r.isCompressedArrayTexture?(at.setTexture2DArray(r,0),b=Tt.TEXTURE_2D_ARRAY):(at.setTexture2D(r,0),b=Tt.TEXTURE_2D),Tt.pixelStorei(Tt.UNPACK_FLIP_Y_WEBGL,r.flipY),Tt.pixelStorei(Tt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),Tt.pixelStorei(Tt.UNPACK_ALIGNMENT,r.unpackAlignment);const T=Tt.getParameter(Tt.UNPACK_ROW_LENGTH),E=Tt.getParameter(Tt.UNPACK_IMAGE_HEIGHT),w=Tt.getParameter(Tt.UNPACK_SKIP_PIXELS),C=Tt.getParameter(Tt.UNPACK_SKIP_ROWS),A=Tt.getParameter(Tt.UNPACK_SKIP_IMAGES);Tt.pixelStorei(Tt.UNPACK_ROW_LENGTH,y.width),Tt.pixelStorei(Tt.UNPACK_IMAGE_HEIGHT,y.height),Tt.pixelStorei(Tt.UNPACK_SKIP_PIXELS,d),Tt.pixelStorei(Tt.UNPACK_SKIP_ROWS,p),Tt.pixelStorei(Tt.UNPACK_SKIP_IMAGES,m);const R=t.isDataArrayTexture||t.isData3DTexture,P=r.isDataArrayTexture||r.isData3DTexture;if(t.isDepthTexture){const i=it.get(t),a=it.get(r),y=it.get(i.__renderTarget),M=it.get(a.__renderTarget);nt.bindFramebuffer(Tt.READ_FRAMEBUFFER,y.__webglFramebuffer),nt.bindFramebuffer(Tt.DRAW_FRAMEBUFFER,M.__webglFramebuffer);for(let i=0;i<u;i++)R&&(Tt.framebufferTextureLayer(Tt.READ_FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,it.get(t).__webglTexture,o,m+i),Tt.framebufferTextureLayer(Tt.DRAW_FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,it.get(r).__webglTexture,l,x+i)),Tt.blitFramebuffer(d,p,c,h,g,_,c,h,Tt.DEPTH_BUFFER_BIT,Tt.NEAREST);nt.bindFramebuffer(Tt.READ_FRAMEBUFFER,null),nt.bindFramebuffer(Tt.DRAW_FRAMEBUFFER,null)}else if(0!==o||t.isRenderTargetTexture||it.has(t)){const i=it.get(t),a=it.get(r);nt.bindFramebuffer(Tt.READ_FRAMEBUFFER,Rt),nt.bindFramebuffer(Tt.DRAW_FRAMEBUFFER,Pt);for(let t=0;t<u;t++)R?Tt.framebufferTextureLayer(Tt.READ_FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,i.__webglTexture,o,m+t):Tt.framebufferTexture2D(Tt.READ_FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,Tt.TEXTURE_2D,i.__webglTexture,o),P?Tt.framebufferTextureLayer(Tt.DRAW_FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,a.__webglTexture,l,x+t):Tt.framebufferTexture2D(Tt.DRAW_FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,Tt.TEXTURE_2D,a.__webglTexture,l),0!==o?Tt.blitFramebuffer(d,p,c,h,g,_,c,h,Tt.COLOR_BUFFER_BIT,Tt.NEAREST):P?Tt.copyTexSubImage3D(b,l,g,_,x+t,d,p,c,h):Tt.copyTexSubImage2D(b,l,g,_,d,p,c,h);nt.bindFramebuffer(Tt.READ_FRAMEBUFFER,null),nt.bindFramebuffer(Tt.DRAW_FRAMEBUFFER,null)}else P?t.isDataTexture||t.isData3DTexture?Tt.texSubImage3D(b,l,g,_,x,c,h,u,M,S,y.data):r.isCompressedArrayTexture?Tt.compressedTexSubImage3D(b,l,g,_,x,c,h,u,M,y.data):Tt.texSubImage3D(b,l,g,_,x,c,h,u,M,S,y):t.isDataTexture?Tt.texSubImage2D(Tt.TEXTURE_2D,l,g,_,c,h,M,S,y.data):t.isCompressedTexture?Tt.compressedTexSubImage2D(Tt.TEXTURE_2D,l,g,_,y.width,y.height,M,y.data):Tt.texSubImage2D(Tt.TEXTURE_2D,l,g,_,c,h,M,S,y);Tt.pixelStorei(Tt.UNPACK_ROW_LENGTH,T),Tt.pixelStorei(Tt.UNPACK_IMAGE_HEIGHT,E),Tt.pixelStorei(Tt.UNPACK_SKIP_PIXELS,w),Tt.pixelStorei(Tt.UNPACK_SKIP_ROWS,C),Tt.pixelStorei(Tt.UNPACK_SKIP_IMAGES,A),0===l&&r.generateMipmaps&&Tt.generateMipmap(b),nt.unbindTexture()},this.copyTextureToTexture3D=function(t,r,i=null,a=null,o=0){return warnOnce('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(t,r,i,a,o)},this.initRenderTarget=function(t){void 0===it.get(t).__webglFramebuffer&&at.setupRenderTarget(t)},this.initTexture=function(t){t.isCubeTexture?at.setTextureCube(t,0):t.isData3DTexture?at.setTexture3D(t,0):t.isDataArrayTexture||t.isCompressedArrayTexture?at.setTexture2DArray(t,0):at.setTexture2D(t,0),nt.unbindTexture()},this.resetState=function(){w=0,C=0,A=null,nt.reset(),St.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return xs}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const r=this.getContext();r.drawingBufferColorSpace=Ps._getDrawingBufferColorSpace(t),r.unpackColorSpace=Ps._getUnpackColorSpace()}}class TextGeometry extends ExtrudeGeometry{constructor(t,r={}){const i=r.font;if(void 0===i)super();else{const a=i.generateShapes(t,r.size);void 0===r.depth&&(r.depth=50),void 0===r.bevelThickness&&(r.bevelThickness=10),void 0===r.bevelSize&&(r.bevelSize=8),void 0===r.bevelEnabled&&(r.bevelEnabled=!1),super(a,r)}this.type="TextGeometry"}}class FontLoader extends Loader{constructor(t){super(t)}load(t,r,i,a){const o=this,l=new FileLoader(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,(function(t){const i=o.parse(JSON.parse(t));r&&r(i)}),i,a)}parse(t){return new Font(t)}}class Font{constructor(t){this.isFont=!0,this.type="Font",this.data=t}generateShapes(t,r=100){const i=[],a=function createPaths(t,r,i){const a=Array.from(t),o=r/i.resolution,l=(i.boundingBox.yMax-i.boundingBox.yMin+i.underlineThickness)*o,c=[];let h=0,u=0;for(let t=0;t<a.length;t++){const r=a[t];if("\n"===r)h=0,u-=l;else{const t=createPath(r,o,h,u,i);h+=t.offsetX,c.push(t.path)}}return c}(t,r,this.data);for(let t=0,r=a.length;t<r;t++)i.push(...a[t].toShapes());return i}}function createPath(t,r,i,a,o){const l=o.glyphs[t]||o.glyphs["?"];if(!l)return void console.error('THREE.Font: character "'+t+'" does not exists in font family '+o.familyName+".");const c=new ShapePath;let h,u,d,p,m,g,_,x;if(l.o){const t=l._cachedOutline||(l._cachedOutline=l.o.split(" "));for(let o=0,l=t.length;o<l;){switch(t[o++]){case"m":h=t[o++]*r+i,u=t[o++]*r+a,c.moveTo(h,u);break;case"l":h=t[o++]*r+i,u=t[o++]*r+a,c.lineTo(h,u);break;case"q":d=t[o++]*r+i,p=t[o++]*r+a,m=t[o++]*r+i,g=t[o++]*r+a,c.quadraticCurveTo(m,g,d,p);break;case"b":d=t[o++]*r+i,p=t[o++]*r+a,m=t[o++]*r+i,g=t[o++]*r+a,_=t[o++]*r+i,x=t[o++]*r+a,c.bezierCurveTo(m,g,_,x,d,p)}}}return{offsetX:l.ha*r,path:c}}const Wc=new Vector3;function getUv(t,r,i,a,o,l){const c=2*Math.PI*o/4,h=Math.max(l-2*o,0),u=Math.PI/4;Wc.copy(r),Wc[a]=0,Wc.normalize();const d=.5*c/(c+h),p=1-Wc.angleTo(t)/u;if(1===Math.sign(Wc[i]))return p*d;return h/(c+h)+d+d*(1-p)}class RoundedBoxGeometry extends BoxGeometry{constructor(t=1,r=1,i=1,a=2,o=.1){if(a=2*a+1,o=Math.min(t/2,r/2,i/2,o),super(1,1,1,a,a,a),1===a)return;const l=this.toNonIndexed();this.index=null,this.attributes.position=l.attributes.position,this.attributes.normal=l.attributes.normal,this.attributes.uv=l.attributes.uv;const c=new Vector3,h=new Vector3,u=new Vector3(t,r,i).divideScalar(2).subScalar(o),d=this.attributes.position.array,p=this.attributes.normal.array,m=this.attributes.uv.array,g=d.length/6,_=new Vector3,x=.5/a;for(let a=0,l=0;a<d.length;a+=3,l+=2){c.fromArray(d,a),h.copy(c),h.x-=Math.sign(h.x)*x,h.y-=Math.sign(h.y)*x,h.z-=Math.sign(h.z)*x,h.normalize(),d[a+0]=u.x*Math.sign(c.x)+h.x*o,d[a+1]=u.y*Math.sign(c.y)+h.y*o,d[a+2]=u.z*Math.sign(c.z)+h.z*o,p[a+0]=h.x,p[a+1]=h.y,p[a+2]=h.z;switch(Math.floor(a/g)){case 0:_.set(1,0,0),m[l+0]=getUv(_,h,"z","y",o,i),m[l+1]=1-getUv(_,h,"y","z",o,r);break;case 1:_.set(-1,0,0),m[l+0]=1-getUv(_,h,"z","y",o,i),m[l+1]=1-getUv(_,h,"y","z",o,r);break;case 2:_.set(0,1,0),m[l+0]=1-getUv(_,h,"x","z",o,t),m[l+1]=getUv(_,h,"z","x",o,i);break;case 3:_.set(0,-1,0),m[l+0]=1-getUv(_,h,"x","z",o,t),m[l+1]=1-getUv(_,h,"z","x",o,i);break;case 4:_.set(0,0,1),m[l+0]=1-getUv(_,h,"x","y",o,t),m[l+1]=1-getUv(_,h,"y","x",o,r);break;case 5:_.set(0,0,-1),m[l+0]=getUv(_,h,"x","y",o,t),m[l+1]=1-getUv(_,h,"y","x",o,r)}}}}const Xc=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];Math.PI,Math.PI;function MathUtils_generateUUID(){const t=4294967295*Math.random()|0,r=4294967295*Math.random()|0,i=4294967295*Math.random()|0,a=4294967295*Math.random()|0;return(Xc[255&t]+Xc[t>>8&255]+Xc[t>>16&255]+Xc[t>>24&255]+"-"+Xc[255&r]+Xc[r>>8&255]+"-"+Xc[r>>16&15|64]+Xc[r>>24&255]+"-"+Xc[63&i|128]+Xc[i>>8&255]+"-"+Xc[i>>16&255]+Xc[i>>24&255]+Xc[255&a]+Xc[a>>8&255]+Xc[a>>16&255]+Xc[a>>24&255]).toLowerCase()}function MathUtils_clamp(t,r,i){return Math.max(r,Math.min(i,t))}function MathUtils_euclideanModulo(t,r){return(t%r+r)%r}function MathUtils_lerp(t,r,i){return(1-i)*t+i*r}class Quaternion_Quaternion{constructor(t=0,r=0,i=0,a=1){this.isQuaternion=!0,this._x=t,this._y=r,this._z=i,this._w=a}static slerpFlat(t,r,i,a,o,l,c){let h=i[a+0],u=i[a+1],d=i[a+2],p=i[a+3];const m=o[l+0],g=o[l+1],_=o[l+2],x=o[l+3];if(0===c)return t[r+0]=h,t[r+1]=u,t[r+2]=d,void(t[r+3]=p);if(1===c)return t[r+0]=m,t[r+1]=g,t[r+2]=_,void(t[r+3]=x);if(p!==x||h!==m||u!==g||d!==_){let t=1-c;const r=h*m+u*g+d*_+p*x,i=r>=0?1:-1,a=1-r*r;if(a>Number.EPSILON){const o=Math.sqrt(a),l=Math.atan2(o,r*i);t=Math.sin(t*l)/o,c=Math.sin(c*l)/o}const o=c*i;if(h=h*t+m*o,u=u*t+g*o,d=d*t+_*o,p=p*t+x*o,t===1-c){const t=1/Math.sqrt(h*h+u*u+d*d+p*p);h*=t,u*=t,d*=t,p*=t}}t[r]=h,t[r+1]=u,t[r+2]=d,t[r+3]=p}static multiplyQuaternionsFlat(t,r,i,a,o,l){const c=i[a],h=i[a+1],u=i[a+2],d=i[a+3],p=o[l],m=o[l+1],g=o[l+2],_=o[l+3];return t[r]=c*_+d*p+h*g-u*m,t[r+1]=h*_+d*m+u*p-c*g,t[r+2]=u*_+d*g+c*m-h*p,t[r+3]=d*_-c*p-h*m-u*g,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,r,i,a){return this._x=t,this._y=r,this._z=i,this._w=a,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,r=!0){const i=t._x,a=t._y,o=t._z,l=t._order,c=Math.cos,h=Math.sin,u=c(i/2),d=c(a/2),p=c(o/2),m=h(i/2),g=h(a/2),_=h(o/2);switch(l){case"XYZ":this._x=m*d*p+u*g*_,this._y=u*g*p-m*d*_,this._z=u*d*_+m*g*p,this._w=u*d*p-m*g*_;break;case"YXZ":this._x=m*d*p+u*g*_,this._y=u*g*p-m*d*_,this._z=u*d*_-m*g*p,this._w=u*d*p+m*g*_;break;case"ZXY":this._x=m*d*p-u*g*_,this._y=u*g*p+m*d*_,this._z=u*d*_+m*g*p,this._w=u*d*p-m*g*_;break;case"ZYX":this._x=m*d*p-u*g*_,this._y=u*g*p+m*d*_,this._z=u*d*_-m*g*p,this._w=u*d*p+m*g*_;break;case"YZX":this._x=m*d*p+u*g*_,this._y=u*g*p+m*d*_,this._z=u*d*_-m*g*p,this._w=u*d*p-m*g*_;break;case"XZY":this._x=m*d*p-u*g*_,this._y=u*g*p-m*d*_,this._z=u*d*_+m*g*p,this._w=u*d*p+m*g*_;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return!0===r&&this._onChangeCallback(),this}setFromAxisAngle(t,r){const i=r/2,a=Math.sin(i);return this._x=t.x*a,this._y=t.y*a,this._z=t.z*a,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const r=t.elements,i=r[0],a=r[4],o=r[8],l=r[1],c=r[5],h=r[9],u=r[2],d=r[6],p=r[10],m=i+c+p;if(m>0){const t=.5/Math.sqrt(m+1);this._w=.25/t,this._x=(d-h)*t,this._y=(o-u)*t,this._z=(l-a)*t}else if(i>c&&i>p){const t=2*Math.sqrt(1+i-c-p);this._w=(d-h)/t,this._x=.25*t,this._y=(a+l)/t,this._z=(o+u)/t}else if(c>p){const t=2*Math.sqrt(1+c-i-p);this._w=(o-u)/t,this._x=(a+l)/t,this._y=.25*t,this._z=(h+d)/t}else{const t=2*Math.sqrt(1+p-i-c);this._w=(l-a)/t,this._x=(o+u)/t,this._y=(h+d)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,r){let i=t.dot(r)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*r.z-t.z*r.y,this._y=t.z*r.x-t.x*r.z,this._z=t.x*r.y-t.y*r.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(MathUtils_clamp(this.dot(t),-1,1)))}rotateTowards(t,r){const i=this.angleTo(t);if(0===i)return this;const a=Math.min(1,r/i);return this.slerp(t,a),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,r){const i=t._x,a=t._y,o=t._z,l=t._w,c=r._x,h=r._y,u=r._z,d=r._w;return this._x=i*d+l*c+a*u-o*h,this._y=a*d+l*h+o*c-i*u,this._z=o*d+l*u+i*h-a*c,this._w=l*d-i*c-a*h-o*u,this._onChangeCallback(),this}slerp(t,r){if(0===r)return this;if(1===r)return this.copy(t);const i=this._x,a=this._y,o=this._z,l=this._w;let c=l*t._w+i*t._x+a*t._y+o*t._z;if(c<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,c=-c):this.copy(t),c>=1)return this._w=l,this._x=i,this._y=a,this._z=o,this;const h=1-c*c;if(h<=Number.EPSILON){const t=1-r;return this._w=t*l+r*this._w,this._x=t*i+r*this._x,this._y=t*a+r*this._y,this._z=t*o+r*this._z,this.normalize(),this}const u=Math.sqrt(h),d=Math.atan2(u,c),p=Math.sin((1-r)*d)/u,m=Math.sin(r*d)/u;return this._w=l*p+this._w*m,this._x=i*p+this._x*m,this._y=a*p+this._y*m,this._z=o*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(t,r,i){return this.copy(t).slerp(r,i)}random(){const t=2*Math.PI*Math.random(),r=2*Math.PI*Math.random(),i=Math.random(),a=Math.sqrt(1-i),o=Math.sqrt(i);return this.set(a*Math.sin(t),a*Math.cos(t),o*Math.sin(r),o*Math.cos(r))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,r=0){return this._x=t[r],this._y=t[r+1],this._z=t[r+2],this._w=t[r+3],this._onChangeCallback(),this}toArray(t=[],r=0){return t[r]=this._x,t[r+1]=this._y,t[r+2]=this._z,t[r+3]=this._w,t}fromBufferAttribute(t,r){return this._x=t.getX(r),this._y=t.getY(r),this._z=t.getZ(r),this._w=t.getW(r),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Vector3_Vector3{constructor(t=0,r=0,i=0){Vector3_Vector3.prototype.isVector3=!0,this.x=t,this.y=r,this.z=i}set(t,r,i){return void 0===i&&(i=this.z),this.x=t,this.y=r,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,r){switch(t){case 0:this.x=r;break;case 1:this.y=r;break;case 2:this.z=r;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,r){return this.x=t.x+r.x,this.y=t.y+r.y,this.z=t.z+r.z,this}addScaledVector(t,r){return this.x+=t.x*r,this.y+=t.y*r,this.z+=t.z*r,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,r){return this.x=t.x-r.x,this.y=t.y-r.y,this.z=t.z-r.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,r){return this.x=t.x*r.x,this.y=t.y*r.y,this.z=t.z*r.z,this}applyEuler(t){return this.applyQuaternion(qc.setFromEuler(t))}applyAxisAngle(t,r){return this.applyQuaternion(qc.setFromAxisAngle(t,r))}applyMatrix3(t){const r=this.x,i=this.y,a=this.z,o=t.elements;return this.x=o[0]*r+o[3]*i+o[6]*a,this.y=o[1]*r+o[4]*i+o[7]*a,this.z=o[2]*r+o[5]*i+o[8]*a,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const r=this.x,i=this.y,a=this.z,o=t.elements,l=1/(o[3]*r+o[7]*i+o[11]*a+o[15]);return this.x=(o[0]*r+o[4]*i+o[8]*a+o[12])*l,this.y=(o[1]*r+o[5]*i+o[9]*a+o[13])*l,this.z=(o[2]*r+o[6]*i+o[10]*a+o[14])*l,this}applyQuaternion(t){const r=this.x,i=this.y,a=this.z,o=t.x,l=t.y,c=t.z,h=t.w,u=2*(l*a-c*i),d=2*(c*r-o*a),p=2*(o*i-l*r);return this.x=r+h*u+l*p-c*d,this.y=i+h*d+c*u-o*p,this.z=a+h*p+o*d-l*u,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const r=this.x,i=this.y,a=this.z,o=t.elements;return this.x=o[0]*r+o[4]*i+o[8]*a,this.y=o[1]*r+o[5]*i+o[9]*a,this.z=o[2]*r+o[6]*i+o[10]*a,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,r){return this.x=MathUtils_clamp(this.x,t.x,r.x),this.y=MathUtils_clamp(this.y,t.y,r.y),this.z=MathUtils_clamp(this.z,t.z,r.z),this}clampScalar(t,r){return this.x=MathUtils_clamp(this.x,t,r),this.y=MathUtils_clamp(this.y,t,r),this.z=MathUtils_clamp(this.z,t,r),this}clampLength(t,r){const i=this.length();return this.divideScalar(i||1).multiplyScalar(MathUtils_clamp(i,t,r))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,r){return this.x+=(t.x-this.x)*r,this.y+=(t.y-this.y)*r,this.z+=(t.z-this.z)*r,this}lerpVectors(t,r,i){return this.x=t.x+(r.x-t.x)*i,this.y=t.y+(r.y-t.y)*i,this.z=t.z+(r.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,r){const i=t.x,a=t.y,o=t.z,l=r.x,c=r.y,h=r.z;return this.x=a*h-o*c,this.y=o*l-i*h,this.z=i*c-a*l,this}projectOnVector(t){const r=t.lengthSq();if(0===r)return this.set(0,0,0);const i=t.dot(this)/r;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return jc.copy(this).projectOnVector(t),this.sub(jc)}reflect(t){return this.sub(jc.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const r=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===r)return Math.PI/2;const i=this.dot(t)/r;return Math.acos(MathUtils_clamp(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const r=this.x-t.x,i=this.y-t.y,a=this.z-t.z;return r*r+i*i+a*a}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,r,i){const a=Math.sin(r)*t;return this.x=a*Math.sin(i),this.y=Math.cos(r)*t,this.z=a*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,r,i){return this.x=t*Math.sin(r),this.y=i,this.z=t*Math.cos(r),this}setFromMatrixPosition(t){const r=t.elements;return this.x=r[12],this.y=r[13],this.z=r[14],this}setFromMatrixScale(t){const r=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),a=this.setFromMatrixColumn(t,2).length();return this.x=r,this.y=i,this.z=a,this}setFromMatrixColumn(t,r){return this.fromArray(t.elements,4*r)}setFromMatrix3Column(t,r){return this.fromArray(t.elements,3*r)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,r=0){return this.x=t[r],this.y=t[r+1],this.z=t[r+2],this}toArray(t=[],r=0){return t[r]=this.x,t[r+1]=this.y,t[r+2]=this.z,t}fromBufferAttribute(t,r){return this.x=t.getX(r),this.y=t.getY(r),this.z=t.getZ(r),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,r=2*Math.random()-1,i=Math.sqrt(1-r*r);return this.x=i*Math.cos(t),this.y=r,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const jc=new Vector3_Vector3,qc=new Quaternion_Quaternion,Yc="srgb",Jc="srgb-linear",Kc="linear",Zc="srgb",Qc=2e3;class Matrix4_Matrix4{constructor(t,r,i,a,o,l,c,h,u,d,p,m,g,_,x,y){Matrix4_Matrix4.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==t&&this.set(t,r,i,a,o,l,c,h,u,d,p,m,g,_,x,y)}set(t,r,i,a,o,l,c,h,u,d,p,m,g,_,x,y){const M=this.elements;return M[0]=t,M[4]=r,M[8]=i,M[12]=a,M[1]=o,M[5]=l,M[9]=c,M[13]=h,M[2]=u,M[6]=d,M[10]=p,M[14]=m,M[3]=g,M[7]=_,M[11]=x,M[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Matrix4_Matrix4).fromArray(this.elements)}copy(t){const r=this.elements,i=t.elements;return r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],this}copyPosition(t){const r=this.elements,i=t.elements;return r[12]=i[12],r[13]=i[13],r[14]=i[14],this}setFromMatrix3(t){const r=t.elements;return this.set(r[0],r[3],r[6],0,r[1],r[4],r[7],0,r[2],r[5],r[8],0,0,0,0,1),this}extractBasis(t,r,i){return t.setFromMatrixColumn(this,0),r.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,r,i){return this.set(t.x,r.x,i.x,0,t.y,r.y,i.y,0,t.z,r.z,i.z,0,0,0,0,1),this}extractRotation(t){const r=this.elements,i=t.elements,a=1/$c.setFromMatrixColumn(t,0).length(),o=1/$c.setFromMatrixColumn(t,1).length(),l=1/$c.setFromMatrixColumn(t,2).length();return r[0]=i[0]*a,r[1]=i[1]*a,r[2]=i[2]*a,r[3]=0,r[4]=i[4]*o,r[5]=i[5]*o,r[6]=i[6]*o,r[7]=0,r[8]=i[8]*l,r[9]=i[9]*l,r[10]=i[10]*l,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,this}makeRotationFromEuler(t){const r=this.elements,i=t.x,a=t.y,o=t.z,l=Math.cos(i),c=Math.sin(i),h=Math.cos(a),u=Math.sin(a),d=Math.cos(o),p=Math.sin(o);if("XYZ"===t.order){const t=l*d,i=l*p,a=c*d,o=c*p;r[0]=h*d,r[4]=-h*p,r[8]=u,r[1]=i+a*u,r[5]=t-o*u,r[9]=-c*h,r[2]=o-t*u,r[6]=a+i*u,r[10]=l*h}else if("YXZ"===t.order){const t=h*d,i=h*p,a=u*d,o=u*p;r[0]=t+o*c,r[4]=a*c-i,r[8]=l*u,r[1]=l*p,r[5]=l*d,r[9]=-c,r[2]=i*c-a,r[6]=o+t*c,r[10]=l*h}else if("ZXY"===t.order){const t=h*d,i=h*p,a=u*d,o=u*p;r[0]=t-o*c,r[4]=-l*p,r[8]=a+i*c,r[1]=i+a*c,r[5]=l*d,r[9]=o-t*c,r[2]=-l*u,r[6]=c,r[10]=l*h}else if("ZYX"===t.order){const t=l*d,i=l*p,a=c*d,o=c*p;r[0]=h*d,r[4]=a*u-i,r[8]=t*u+o,r[1]=h*p,r[5]=o*u+t,r[9]=i*u-a,r[2]=-u,r[6]=c*h,r[10]=l*h}else if("YZX"===t.order){const t=l*h,i=l*u,a=c*h,o=c*u;r[0]=h*d,r[4]=o-t*p,r[8]=a*p+i,r[1]=p,r[5]=l*d,r[9]=-c*d,r[2]=-u*d,r[6]=i*p+a,r[10]=t-o*p}else if("XZY"===t.order){const t=l*h,i=l*u,a=c*h,o=c*u;r[0]=h*d,r[4]=-p,r[8]=u*d,r[1]=t*p+o,r[5]=l*d,r[9]=i*p-a,r[2]=a*p-i,r[6]=c*d,r[10]=o*p+t}return r[3]=0,r[7]=0,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,this}makeRotationFromQuaternion(t){return this.compose(eh,t,nh)}lookAt(t,r,i){const a=this.elements;return ah.subVectors(t,r),0===ah.lengthSq()&&(ah.z=1),ah.normalize(),rh.crossVectors(i,ah),0===rh.lengthSq()&&(1===Math.abs(i.z)?ah.x+=1e-4:ah.z+=1e-4,ah.normalize(),rh.crossVectors(i,ah)),rh.normalize(),ih.crossVectors(ah,rh),a[0]=rh.x,a[4]=ih.x,a[8]=ah.x,a[1]=rh.y,a[5]=ih.y,a[9]=ah.y,a[2]=rh.z,a[6]=ih.z,a[10]=ah.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,r){const i=t.elements,a=r.elements,o=this.elements,l=i[0],c=i[4],h=i[8],u=i[12],d=i[1],p=i[5],m=i[9],g=i[13],_=i[2],x=i[6],y=i[10],M=i[14],S=i[3],b=i[7],T=i[11],E=i[15],w=a[0],C=a[4],A=a[8],R=a[12],P=a[1],L=a[5],U=a[9],D=a[13],I=a[2],N=a[6],O=a[10],z=a[14],B=a[3],V=a[7],k=a[11],G=a[15];return o[0]=l*w+c*P+h*I+u*B,o[4]=l*C+c*L+h*N+u*V,o[8]=l*A+c*U+h*O+u*k,o[12]=l*R+c*D+h*z+u*G,o[1]=d*w+p*P+m*I+g*B,o[5]=d*C+p*L+m*N+g*V,o[9]=d*A+p*U+m*O+g*k,o[13]=d*R+p*D+m*z+g*G,o[2]=_*w+x*P+y*I+M*B,o[6]=_*C+x*L+y*N+M*V,o[10]=_*A+x*U+y*O+M*k,o[14]=_*R+x*D+y*z+M*G,o[3]=S*w+b*P+T*I+E*B,o[7]=S*C+b*L+T*N+E*V,o[11]=S*A+b*U+T*O+E*k,o[15]=S*R+b*D+T*z+E*G,this}multiplyScalar(t){const r=this.elements;return r[0]*=t,r[4]*=t,r[8]*=t,r[12]*=t,r[1]*=t,r[5]*=t,r[9]*=t,r[13]*=t,r[2]*=t,r[6]*=t,r[10]*=t,r[14]*=t,r[3]*=t,r[7]*=t,r[11]*=t,r[15]*=t,this}determinant(){const t=this.elements,r=t[0],i=t[4],a=t[8],o=t[12],l=t[1],c=t[5],h=t[9],u=t[13],d=t[2],p=t[6],m=t[10],g=t[14];return t[3]*(+o*h*p-a*u*p-o*c*m+i*u*m+a*c*g-i*h*g)+t[7]*(+r*h*g-r*u*m+o*l*m-a*l*g+a*u*d-o*h*d)+t[11]*(+r*u*p-r*c*g-o*l*p+i*l*g+o*c*d-i*u*d)+t[15]*(-a*c*d-r*h*p+r*c*m+a*l*p-i*l*m+i*h*d)}transpose(){const t=this.elements;let r;return r=t[1],t[1]=t[4],t[4]=r,r=t[2],t[2]=t[8],t[8]=r,r=t[6],t[6]=t[9],t[9]=r,r=t[3],t[3]=t[12],t[12]=r,r=t[7],t[7]=t[13],t[13]=r,r=t[11],t[11]=t[14],t[14]=r,this}setPosition(t,r,i){const a=this.elements;return t.isVector3?(a[12]=t.x,a[13]=t.y,a[14]=t.z):(a[12]=t,a[13]=r,a[14]=i),this}invert(){const t=this.elements,r=t[0],i=t[1],a=t[2],o=t[3],l=t[4],c=t[5],h=t[6],u=t[7],d=t[8],p=t[9],m=t[10],g=t[11],_=t[12],x=t[13],y=t[14],M=t[15],S=p*y*u-x*m*u+x*h*g-c*y*g-p*h*M+c*m*M,b=_*m*u-d*y*u-_*h*g+l*y*g+d*h*M-l*m*M,T=d*x*u-_*p*u+_*c*g-l*x*g-d*c*M+l*p*M,E=_*p*h-d*x*h-_*c*m+l*x*m+d*c*y-l*p*y,w=r*S+i*b+a*T+o*E;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const C=1/w;return t[0]=S*C,t[1]=(x*m*o-p*y*o-x*a*g+i*y*g+p*a*M-i*m*M)*C,t[2]=(c*y*o-x*h*o+x*a*u-i*y*u-c*a*M+i*h*M)*C,t[3]=(p*h*o-c*m*o-p*a*u+i*m*u+c*a*g-i*h*g)*C,t[4]=b*C,t[5]=(d*y*o-_*m*o+_*a*g-r*y*g-d*a*M+r*m*M)*C,t[6]=(_*h*o-l*y*o-_*a*u+r*y*u+l*a*M-r*h*M)*C,t[7]=(l*m*o-d*h*o+d*a*u-r*m*u-l*a*g+r*h*g)*C,t[8]=T*C,t[9]=(_*p*o-d*x*o-_*i*g+r*x*g+d*i*M-r*p*M)*C,t[10]=(l*x*o-_*c*o+_*i*u-r*x*u-l*i*M+r*c*M)*C,t[11]=(d*c*o-l*p*o-d*i*u+r*p*u+l*i*g-r*c*g)*C,t[12]=E*C,t[13]=(d*x*a-_*p*a+_*i*m-r*x*m-d*i*y+r*p*y)*C,t[14]=(_*c*a-l*x*a-_*i*h+r*x*h+l*i*y-r*c*y)*C,t[15]=(l*p*a-d*c*a+d*i*h-r*p*h-l*i*m+r*c*m)*C,this}scale(t){const r=this.elements,i=t.x,a=t.y,o=t.z;return r[0]*=i,r[4]*=a,r[8]*=o,r[1]*=i,r[5]*=a,r[9]*=o,r[2]*=i,r[6]*=a,r[10]*=o,r[3]*=i,r[7]*=a,r[11]*=o,this}getMaxScaleOnAxis(){const t=this.elements,r=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],a=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(r,i,a))}makeTranslation(t,r,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,r,0,0,1,i,0,0,0,1),this}makeRotationX(t){const r=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,r,-i,0,0,i,r,0,0,0,0,1),this}makeRotationY(t){const r=Math.cos(t),i=Math.sin(t);return this.set(r,0,i,0,0,1,0,0,-i,0,r,0,0,0,0,1),this}makeRotationZ(t){const r=Math.cos(t),i=Math.sin(t);return this.set(r,-i,0,0,i,r,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,r){const i=Math.cos(r),a=Math.sin(r),o=1-i,l=t.x,c=t.y,h=t.z,u=o*l,d=o*c;return this.set(u*l+i,u*c-a*h,u*h+a*c,0,u*c+a*h,d*c+i,d*h-a*l,0,u*h-a*c,d*h+a*l,o*h*h+i,0,0,0,0,1),this}makeScale(t,r,i){return this.set(t,0,0,0,0,r,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,r,i,a,o,l){return this.set(1,i,o,0,t,1,l,0,r,a,1,0,0,0,0,1),this}compose(t,r,i){const a=this.elements,o=r._x,l=r._y,c=r._z,h=r._w,u=o+o,d=l+l,p=c+c,m=o*u,g=o*d,_=o*p,x=l*d,y=l*p,M=c*p,S=h*u,b=h*d,T=h*p,E=i.x,w=i.y,C=i.z;return a[0]=(1-(x+M))*E,a[1]=(g+T)*E,a[2]=(_-b)*E,a[3]=0,a[4]=(g-T)*w,a[5]=(1-(m+M))*w,a[6]=(y+S)*w,a[7]=0,a[8]=(_+b)*C,a[9]=(y-S)*C,a[10]=(1-(m+x))*C,a[11]=0,a[12]=t.x,a[13]=t.y,a[14]=t.z,a[15]=1,this}decompose(t,r,i){const a=this.elements;let o=$c.set(a[0],a[1],a[2]).length();const l=$c.set(a[4],a[5],a[6]).length(),c=$c.set(a[8],a[9],a[10]).length();this.determinant()<0&&(o=-o),t.x=a[12],t.y=a[13],t.z=a[14],th.copy(this);const h=1/o,u=1/l,d=1/c;return th.elements[0]*=h,th.elements[1]*=h,th.elements[2]*=h,th.elements[4]*=u,th.elements[5]*=u,th.elements[6]*=u,th.elements[8]*=d,th.elements[9]*=d,th.elements[10]*=d,r.setFromRotationMatrix(th),i.x=o,i.y=l,i.z=c,this}makePerspective(t,r,i,a,o,l,c=2e3){const h=this.elements,u=2*o/(r-t),d=2*o/(i-a),p=(r+t)/(r-t),m=(i+a)/(i-a);let g,_;if(c===Qc)g=-(l+o)/(l-o),_=-2*l*o/(l-o);else{if(2001!==c)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);g=-l/(l-o),_=-l*o/(l-o)}return h[0]=u,h[4]=0,h[8]=p,h[12]=0,h[1]=0,h[5]=d,h[9]=m,h[13]=0,h[2]=0,h[6]=0,h[10]=g,h[14]=_,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,r,i,a,o,l,c=2e3){const h=this.elements,u=1/(r-t),d=1/(i-a),p=1/(l-o),m=(r+t)*u,g=(i+a)*d;let _,x;if(c===Qc)_=(l+o)*p,x=-2*p;else{if(2001!==c)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);_=o*p,x=-1*p}return h[0]=2*u,h[4]=0,h[8]=0,h[12]=-m,h[1]=0,h[5]=2*d,h[9]=0,h[13]=-g,h[2]=0,h[6]=0,h[10]=x,h[14]=-_,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const r=this.elements,i=t.elements;for(let t=0;t<16;t++)if(r[t]!==i[t])return!1;return!0}fromArray(t,r=0){for(let i=0;i<16;i++)this.elements[i]=t[i+r];return this}toArray(t=[],r=0){const i=this.elements;return t[r]=i[0],t[r+1]=i[1],t[r+2]=i[2],t[r+3]=i[3],t[r+4]=i[4],t[r+5]=i[5],t[r+6]=i[6],t[r+7]=i[7],t[r+8]=i[8],t[r+9]=i[9],t[r+10]=i[10],t[r+11]=i[11],t[r+12]=i[12],t[r+13]=i[13],t[r+14]=i[14],t[r+15]=i[15],t}}const $c=new Vector3_Vector3,th=new Matrix4_Matrix4,eh=new Vector3_Vector3(0,0,0),nh=new Vector3_Vector3(1,1,1),rh=new Vector3_Vector3,ih=new Vector3_Vector3,ah=new Vector3_Vector3;class EventDispatcher_EventDispatcher{addEventListener(t,r){void 0===this._listeners&&(this._listeners={});const i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(r)&&i[t].push(r)}hasEventListener(t,r){const i=this._listeners;return void 0!==i&&(void 0!==i[t]&&-1!==i[t].indexOf(r))}removeEventListener(t,r){const i=this._listeners;if(void 0===i)return;const a=i[t];if(void 0!==a){const t=a.indexOf(r);-1!==t&&a.splice(t,1)}}dispatchEvent(t){const r=this._listeners;if(void 0===r)return;const i=r[t.type];if(void 0!==i){t.target=this;const r=i.slice(0);for(let i=0,a=r.length;i<a;i++)r[i].call(this,t);t.target=null}}}const sh=new Matrix4_Matrix4,oh=new Quaternion_Quaternion;class Euler_Euler{constructor(t=0,r=0,i=0,a=Euler_Euler.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=r,this._z=i,this._order=a}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,r,i,a=this._order){return this._x=t,this._y=r,this._z=i,this._order=a,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,r=this._order,i=!0){const a=t.elements,o=a[0],l=a[4],c=a[8],h=a[1],u=a[5],d=a[9],p=a[2],m=a[6],g=a[10];switch(r){case"XYZ":this._y=Math.asin(MathUtils_clamp(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-d,g),this._z=Math.atan2(-l,o)):(this._x=Math.atan2(m,u),this._z=0);break;case"YXZ":this._x=Math.asin(-MathUtils_clamp(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(c,g),this._z=Math.atan2(h,u)):(this._y=Math.atan2(-p,o),this._z=0);break;case"ZXY":this._x=Math.asin(MathUtils_clamp(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,g),this._z=Math.atan2(-l,u)):(this._y=0,this._z=Math.atan2(h,o));break;case"ZYX":this._y=Math.asin(-MathUtils_clamp(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,g),this._z=Math.atan2(h,o)):(this._x=0,this._z=Math.atan2(-l,u));break;case"YZX":this._z=Math.asin(MathUtils_clamp(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-d,u),this._y=Math.atan2(-p,o)):(this._x=0,this._y=Math.atan2(c,g));break;case"XZY":this._z=Math.asin(-MathUtils_clamp(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(m,u),this._y=Math.atan2(c,o)):(this._x=Math.atan2(-d,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+r)}return this._order=r,!0===i&&this._onChangeCallback(),this}setFromQuaternion(t,r,i){return sh.makeRotationFromQuaternion(t),this.setFromRotationMatrix(sh,r,i)}setFromVector3(t,r=this._order){return this.set(t.x,t.y,t.z,r)}reorder(t){return oh.setFromEuler(this),this.setFromQuaternion(oh,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],r=0){return t[r]=this._x,t[r+1]=this._y,t[r+2]=this._z,t[r+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Euler_Euler.DEFAULT_ORDER="XYZ";class Layers_Layers{constructor(){this.mask=1}set(t){this.mask=1<<t>>>0}enable(t){this.mask|=1<<t}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t}disable(t){this.mask&=~(1<<t)}disableAll(){this.mask=0}test(t){return 0!==(this.mask&t.mask)}isEnabled(t){return!!(this.mask&1<<t)}}class Matrix3_Matrix3{constructor(t,r,i,a,o,l,c,h,u){Matrix3_Matrix3.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==t&&this.set(t,r,i,a,o,l,c,h,u)}set(t,r,i,a,o,l,c,h,u){const d=this.elements;return d[0]=t,d[1]=a,d[2]=c,d[3]=r,d[4]=o,d[5]=h,d[6]=i,d[7]=l,d[8]=u,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const r=this.elements,i=t.elements;return r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],this}extractBasis(t,r,i){return t.setFromMatrix3Column(this,0),r.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const r=t.elements;return this.set(r[0],r[4],r[8],r[1],r[5],r[9],r[2],r[6],r[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,r){const i=t.elements,a=r.elements,o=this.elements,l=i[0],c=i[3],h=i[6],u=i[1],d=i[4],p=i[7],m=i[2],g=i[5],_=i[8],x=a[0],y=a[3],M=a[6],S=a[1],b=a[4],T=a[7],E=a[2],w=a[5],C=a[8];return o[0]=l*x+c*S+h*E,o[3]=l*y+c*b+h*w,o[6]=l*M+c*T+h*C,o[1]=u*x+d*S+p*E,o[4]=u*y+d*b+p*w,o[7]=u*M+d*T+p*C,o[2]=m*x+g*S+_*E,o[5]=m*y+g*b+_*w,o[8]=m*M+g*T+_*C,this}multiplyScalar(t){const r=this.elements;return r[0]*=t,r[3]*=t,r[6]*=t,r[1]*=t,r[4]*=t,r[7]*=t,r[2]*=t,r[5]*=t,r[8]*=t,this}determinant(){const t=this.elements,r=t[0],i=t[1],a=t[2],o=t[3],l=t[4],c=t[5],h=t[6],u=t[7],d=t[8];return r*l*d-r*c*u-i*o*d+i*c*h+a*o*u-a*l*h}invert(){const t=this.elements,r=t[0],i=t[1],a=t[2],o=t[3],l=t[4],c=t[5],h=t[6],u=t[7],d=t[8],p=d*l-c*u,m=c*h-d*o,g=u*o-l*h,_=r*p+i*m+a*g;if(0===_)return this.set(0,0,0,0,0,0,0,0,0);const x=1/_;return t[0]=p*x,t[1]=(a*u-d*i)*x,t[2]=(c*i-a*l)*x,t[3]=m*x,t[4]=(d*r-a*h)*x,t[5]=(a*o-c*r)*x,t[6]=g*x,t[7]=(i*h-u*r)*x,t[8]=(l*r-i*o)*x,this}transpose(){let t;const r=this.elements;return t=r[1],r[1]=r[3],r[3]=t,t=r[2],r[2]=r[6],r[6]=t,t=r[5],r[5]=r[7],r[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const r=this.elements;return t[0]=r[0],t[1]=r[3],t[2]=r[6],t[3]=r[1],t[4]=r[4],t[5]=r[7],t[6]=r[2],t[7]=r[5],t[8]=r[8],this}setUvTransform(t,r,i,a,o,l,c){const h=Math.cos(o),u=Math.sin(o);return this.set(i*h,i*u,-i*(h*l+u*c)+l+t,-a*u,a*h,-a*(-u*l+h*c)+c+r,0,0,1),this}scale(t,r){return this.premultiply(lh.makeScale(t,r)),this}rotate(t){return this.premultiply(lh.makeRotation(-t)),this}translate(t,r){return this.premultiply(lh.makeTranslation(t,r)),this}makeTranslation(t,r){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,r,0,0,1),this}makeRotation(t){const r=Math.cos(t),i=Math.sin(t);return this.set(r,-i,0,i,r,0,0,0,1),this}makeScale(t,r){return this.set(t,0,0,0,r,0,0,0,1),this}equals(t){const r=this.elements,i=t.elements;for(let t=0;t<9;t++)if(r[t]!==i[t])return!1;return!0}fromArray(t,r=0){for(let i=0;i<9;i++)this.elements[i]=t[i+r];return this}toArray(t=[],r=0){const i=this.elements;return t[r]=i[0],t[r+1]=i[1],t[r+2]=i[2],t[r+3]=i[3],t[r+4]=i[4],t[r+5]=i[5],t[r+6]=i[6],t[r+7]=i[7],t[r+8]=i[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}const lh=new Matrix3_Matrix3;let ch=0;const hh=new Vector3_Vector3,uh=new Quaternion_Quaternion,dh=new Matrix4_Matrix4,ph=new Vector3_Vector3,fh=new Vector3_Vector3,mh=new Vector3_Vector3,gh=new Quaternion_Quaternion,_h=new Vector3_Vector3(1,0,0),vh=new Vector3_Vector3(0,1,0),xh=new Vector3_Vector3(0,0,1),yh={type:"added"},Mh={type:"removed"},Sh={type:"childadded",child:null},bh={type:"childremoved",child:null};class Object3D_Object3D extends EventDispatcher_EventDispatcher{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ch++}),this.uuid=MathUtils_generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Object3D_Object3D.DEFAULT_UP.clone();const t=new Vector3_Vector3,r=new Euler_Euler,i=new Quaternion_Quaternion,a=new Vector3_Vector3(1,1,1);r._onChange((function onRotationChange(){i.setFromEuler(r,!1)})),i._onChange((function onQuaternionChange(){r.setFromQuaternion(i,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:r},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:a},modelViewMatrix:{value:new Matrix4_Matrix4},normalMatrix:{value:new Matrix3_Matrix3}}),this.matrix=new Matrix4_Matrix4,this.matrixWorld=new Matrix4_Matrix4,this.matrixAutoUpdate=Object3D_Object3D.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Object3D_Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Layers_Layers,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,r){this.quaternion.setFromAxisAngle(t,r)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,r){return uh.setFromAxisAngle(t,r),this.quaternion.multiply(uh),this}rotateOnWorldAxis(t,r){return uh.setFromAxisAngle(t,r),this.quaternion.premultiply(uh),this}rotateX(t){return this.rotateOnAxis(_h,t)}rotateY(t){return this.rotateOnAxis(vh,t)}rotateZ(t){return this.rotateOnAxis(xh,t)}translateOnAxis(t,r){return hh.copy(t).applyQuaternion(this.quaternion),this.position.add(hh.multiplyScalar(r)),this}translateX(t){return this.translateOnAxis(_h,t)}translateY(t){return this.translateOnAxis(vh,t)}translateZ(t){return this.translateOnAxis(xh,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(dh.copy(this.matrixWorld).invert())}lookAt(t,r,i){t.isVector3?ph.copy(t):ph.set(t,r,i);const a=this.parent;this.updateWorldMatrix(!0,!1),fh.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?dh.lookAt(fh,ph,this.up):dh.lookAt(ph,fh,this.up),this.quaternion.setFromRotationMatrix(dh),a&&(dh.extractRotation(a.matrixWorld),uh.setFromRotationMatrix(dh),this.quaternion.premultiply(uh.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(yh),Sh.child=t,this.dispatchEvent(Sh),Sh.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const r=this.children.indexOf(t);return-1!==r&&(t.parent=null,this.children.splice(r,1),t.dispatchEvent(Mh),bh.child=t,this.dispatchEvent(bh),bh.child=null),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),dh.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),dh.multiply(t.parent.matrixWorld)),t.applyMatrix4(dh),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(yh),Sh.child=t,this.dispatchEvent(Sh),Sh.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,r){if(this[t]===r)return this;for(let i=0,a=this.children.length;i<a;i++){const a=this.children[i].getObjectByProperty(t,r);if(void 0!==a)return a}}getObjectsByProperty(t,r,i=[]){this[t]===r&&i.push(this);const a=this.children;for(let o=0,l=a.length;o<l;o++)a[o].getObjectsByProperty(t,r,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fh,t,mh),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fh,gh,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const r=this.matrixWorld.elements;return t.set(r[8],r[9],r[10]).normalize()}raycast(){}traverse(t){t(this);const r=this.children;for(let i=0,a=r.length;i<a;i++)r[i].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const r=this.children;for(let i=0,a=r.length;i<a;i++)r[i].traverseVisible(t)}traverseAncestors(t){const r=this.parent;null!==r&&(t(r),r.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const r=this.children;for(let i=0,a=r.length;i<a;i++){r[i].updateMatrixWorld(t)}}updateWorldMatrix(t,r){const i=this.parent;if(!0===t&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),!0===r){const t=this.children;for(let r=0,i=t.length;r<i;r++){t[r].updateWorldMatrix(!1,!0)}}}toJSON(t){const r=void 0===t||"string"==typeof t,i={};r&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const a={};function serialize(r,i){return void 0===r[i.uuid]&&(r[i.uuid]=i.toJSON(t)),i.uuid}if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),!0===this.castShadow&&(a.castShadow=!0),!0===this.receiveShadow&&(a.receiveShadow=!0),!1===this.visible&&(a.visible=!1),!1===this.frustumCulled&&(a.frustumCulled=!1),0!==this.renderOrder&&(a.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(a.userData=this.userData),a.layers=this.layers.mask,a.matrix=this.matrix.toArray(),a.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(a.matrixAutoUpdate=!1),this.isInstancedMesh&&(a.type="InstancedMesh",a.count=this.count,a.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(a.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(a.type="BatchedMesh",a.perObjectFrustumCulled=this.perObjectFrustumCulled,a.sortObjects=this.sortObjects,a.drawRanges=this._drawRanges,a.reservedRanges=this._reservedRanges,a.geometryInfo=this._geometryInfo.map((t=>({...t,boundingBox:t.boundingBox?t.boundingBox.toJSON():void 0,boundingSphere:t.boundingSphere?t.boundingSphere.toJSON():void 0}))),a.instanceInfo=this._instanceInfo.map((t=>({...t}))),a.availableInstanceIds=this._availableInstanceIds.slice(),a.availableGeometryIds=this._availableGeometryIds.slice(),a.nextIndexStart=this._nextIndexStart,a.nextVertexStart=this._nextVertexStart,a.geometryCount=this._geometryCount,a.maxInstanceCount=this._maxInstanceCount,a.maxVertexCount=this._maxVertexCount,a.maxIndexCount=this._maxIndexCount,a.geometryInitialized=this._geometryInitialized,a.matricesTexture=this._matricesTexture.toJSON(t),a.indirectTexture=this._indirectTexture.toJSON(t),null!==this._colorsTexture&&(a.colorsTexture=this._colorsTexture.toJSON(t)),null!==this.boundingSphere&&(a.boundingSphere=this.boundingSphere.toJSON()),null!==this.boundingBox&&(a.boundingBox=this.boundingBox.toJSON())),this.isScene)this.background&&(this.background.isColor?a.background=this.background.toJSON():this.background.isTexture&&(a.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(a.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){a.geometry=serialize(t.geometries,this.geometry);const r=this.geometry.parameters;if(void 0!==r&&void 0!==r.shapes){const i=r.shapes;if(Array.isArray(i))for(let r=0,a=i.length;r<a;r++){const a=i[r];serialize(t.shapes,a)}else serialize(t.shapes,i)}}if(this.isSkinnedMesh&&(a.bindMode=this.bindMode,a.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(serialize(t.skeletons,this.skeleton),a.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const r=[];for(let i=0,a=this.material.length;i<a;i++)r.push(serialize(t.materials,this.material[i]));a.material=r}else a.material=serialize(t.materials,this.material);if(this.children.length>0){a.children=[];for(let r=0;r<this.children.length;r++)a.children.push(this.children[r].toJSON(t).object)}if(this.animations.length>0){a.animations=[];for(let r=0;r<this.animations.length;r++){const i=this.animations[r];a.animations.push(serialize(t.animations,i))}}if(r){const r=extractFromCache(t.geometries),a=extractFromCache(t.materials),o=extractFromCache(t.textures),l=extractFromCache(t.images),c=extractFromCache(t.shapes),h=extractFromCache(t.skeletons),u=extractFromCache(t.animations),d=extractFromCache(t.nodes);r.length>0&&(i.geometries=r),a.length>0&&(i.materials=a),o.length>0&&(i.textures=o),l.length>0&&(i.images=l),c.length>0&&(i.shapes=c),h.length>0&&(i.skeletons=h),u.length>0&&(i.animations=u),d.length>0&&(i.nodes=d)}return i.object=a,i;function extractFromCache(t){const r=[];for(const i in t){const a=t[i];delete a.metadata,r.push(a)}return r}}clone(t){return(new this.constructor).copy(this,t)}copy(t,r=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),!0===r)for(let r=0;r<t.children.length;r++){const i=t.children[r];this.add(i.clone())}return this}}Object3D_Object3D.DEFAULT_UP=new Vector3_Vector3(0,1,0),Object3D_Object3D.DEFAULT_MATRIX_AUTO_UPDATE=!0,Object3D_Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;const Th={};function utils_warnOnce(t){t in Th||(Th[t]=!0,console.warn(t))}const Eh=(new Matrix3_Matrix3).set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),wh=(new Matrix3_Matrix3).set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function ColorManagement_createColorManagement(){const t={enabled:!0,workingColorSpace:Jc,spaces:{},convert:function(t,r,i){return!1!==this.enabled&&r!==i&&r&&i?(this.spaces[r].transfer===Zc&&(t.r=ColorManagement_SRGBToLinear(t.r),t.g=ColorManagement_SRGBToLinear(t.g),t.b=ColorManagement_SRGBToLinear(t.b)),this.spaces[r].primaries!==this.spaces[i].primaries&&(t.applyMatrix3(this.spaces[r].toXYZ),t.applyMatrix3(this.spaces[i].fromXYZ)),this.spaces[i].transfer===Zc&&(t.r=ColorManagement_LinearToSRGB(t.r),t.g=ColorManagement_LinearToSRGB(t.g),t.b=ColorManagement_LinearToSRGB(t.b)),t):t},workingToColorSpace:function(t,r){return this.convert(t,this.workingColorSpace,r)},colorSpaceToWorking:function(t,r){return this.convert(t,r,this.workingColorSpace)},getPrimaries:function(t){return this.spaces[t].primaries},getTransfer:function(t){return""===t?Kc:this.spaces[t].transfer},getLuminanceCoefficients:function(t,r=this.workingColorSpace){return t.fromArray(this.spaces[r].luminanceCoefficients)},define:function(t){Object.assign(this.spaces,t)},_getMatrix:function(t,r,i){return t.copy(this.spaces[r].toXYZ).multiply(this.spaces[i].fromXYZ)},_getDrawingBufferColorSpace:function(t){return this.spaces[t].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(t=this.workingColorSpace){return this.spaces[t].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(r,i){return utils_warnOnce("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),t.workingToColorSpace(r,i)},toWorkingColorSpace:function(r,i){return utils_warnOnce("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),t.colorSpaceToWorking(r,i)}},r=[.64,.33,.3,.6,.15,.06],i=[.2126,.7152,.0722],a=[.3127,.329];return t.define({[Jc]:{primaries:r,whitePoint:a,transfer:Kc,toXYZ:Eh,fromXYZ:wh,luminanceCoefficients:i,workingColorSpaceConfig:{unpackColorSpace:Yc},outputColorSpaceConfig:{drawingBufferColorSpace:Yc}},[Yc]:{primaries:r,whitePoint:a,transfer:Zc,toXYZ:Eh,fromXYZ:wh,luminanceCoefficients:i,outputColorSpaceConfig:{drawingBufferColorSpace:Yc}}}),t}const Ch=ColorManagement_createColorManagement();function ColorManagement_SRGBToLinear(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function ColorManagement_LinearToSRGB(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}const Ah={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Rh={h:0,s:0,l:0},Ph={h:0,s:0,l:0};function Color_hue2rgb(t,r,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(r-t)*i:i<.5?r:i<2/3?t+6*(r-t)*(2/3-i):t}class Color_Color{constructor(t,r,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,r,i)}set(t,r,i){if(void 0===r&&void 0===i){const r=t;r&&r.isColor?this.copy(r):"number"==typeof r?this.setHex(r):"string"==typeof r&&this.setStyle(r)}else this.setRGB(t,r,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,r=Yc){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,Ch.colorSpaceToWorking(this,r),this}setRGB(t,r,i,a=Ch.workingColorSpace){return this.r=t,this.g=r,this.b=i,Ch.colorSpaceToWorking(this,a),this}setHSL(t,r,i,a=Ch.workingColorSpace){if(t=MathUtils_euclideanModulo(t,1),r=MathUtils_clamp(r,0,1),i=MathUtils_clamp(i,0,1),0===r)this.r=this.g=this.b=i;else{const a=i<=.5?i*(1+r):i+r-i*r,o=2*i-a;this.r=Color_hue2rgb(o,a,t+1/3),this.g=Color_hue2rgb(o,a,t),this.b=Color_hue2rgb(o,a,t-1/3)}return Ch.colorSpaceToWorking(this,a),this}setStyle(t,r=Yc){function handleAlpha(r){void 0!==r&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let a;const o=i[1],l=i[2];switch(o){case"rgb":case"rgba":if(a=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return handleAlpha(a[4]),this.setRGB(Math.min(255,parseInt(a[1],10))/255,Math.min(255,parseInt(a[2],10))/255,Math.min(255,parseInt(a[3],10))/255,r);if(a=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return handleAlpha(a[4]),this.setRGB(Math.min(100,parseInt(a[1],10))/100,Math.min(100,parseInt(a[2],10))/100,Math.min(100,parseInt(a[3],10))/100,r);break;case"hsl":case"hsla":if(a=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return handleAlpha(a[4]),this.setHSL(parseFloat(a[1])/360,parseFloat(a[2])/100,parseFloat(a[3])/100,r);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const a=i[1],o=a.length;if(3===o)return this.setRGB(parseInt(a.charAt(0),16)/15,parseInt(a.charAt(1),16)/15,parseInt(a.charAt(2),16)/15,r);if(6===o)return this.setHex(parseInt(a,16),r);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,r);return this}setColorName(t,r=Yc){const i=Ah[t.toLowerCase()];return void 0!==i?this.setHex(i,r):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=ColorManagement_SRGBToLinear(t.r),this.g=ColorManagement_SRGBToLinear(t.g),this.b=ColorManagement_SRGBToLinear(t.b),this}copyLinearToSRGB(t){return this.r=ColorManagement_LinearToSRGB(t.r),this.g=ColorManagement_LinearToSRGB(t.g),this.b=ColorManagement_LinearToSRGB(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Yc){return Ch.workingToColorSpace(Lh.copy(this),t),65536*Math.round(MathUtils_clamp(255*Lh.r,0,255))+256*Math.round(MathUtils_clamp(255*Lh.g,0,255))+Math.round(MathUtils_clamp(255*Lh.b,0,255))}getHexString(t=Yc){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,r=Ch.workingColorSpace){Ch.workingToColorSpace(Lh.copy(this),r);const i=Lh.r,a=Lh.g,o=Lh.b,l=Math.max(i,a,o),c=Math.min(i,a,o);let h,u;const d=(c+l)/2;if(c===l)h=0,u=0;else{const t=l-c;switch(u=d<=.5?t/(l+c):t/(2-l-c),l){case i:h=(a-o)/t+(a<o?6:0);break;case a:h=(o-i)/t+2;break;case o:h=(i-a)/t+4}h/=6}return t.h=h,t.s=u,t.l=d,t}getRGB(t,r=Ch.workingColorSpace){return Ch.workingToColorSpace(Lh.copy(this),r),t.r=Lh.r,t.g=Lh.g,t.b=Lh.b,t}getStyle(t=Yc){Ch.workingToColorSpace(Lh.copy(this),t);const r=Lh.r,i=Lh.g,a=Lh.b;return t!==Yc?`color(${t} ${r.toFixed(3)} ${i.toFixed(3)} ${a.toFixed(3)})`:`rgb(${Math.round(255*r)},${Math.round(255*i)},${Math.round(255*a)})`}offsetHSL(t,r,i){return this.getHSL(Rh),this.setHSL(Rh.h+t,Rh.s+r,Rh.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,r){return this.r=t.r+r.r,this.g=t.g+r.g,this.b=t.b+r.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,r){return this.r+=(t.r-this.r)*r,this.g+=(t.g-this.g)*r,this.b+=(t.b-this.b)*r,this}lerpColors(t,r,i){return this.r=t.r+(r.r-t.r)*i,this.g=t.g+(r.g-t.g)*i,this.b=t.b+(r.b-t.b)*i,this}lerpHSL(t,r){this.getHSL(Rh),t.getHSL(Ph);const i=MathUtils_lerp(Rh.h,Ph.h,r),a=MathUtils_lerp(Rh.s,Ph.s,r),o=MathUtils_lerp(Rh.l,Ph.l,r);return this.setHSL(i,a,o),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const r=this.r,i=this.g,a=this.b,o=t.elements;return this.r=o[0]*r+o[3]*i+o[6]*a,this.g=o[1]*r+o[4]*i+o[7]*a,this.b=o[2]*r+o[5]*i+o[8]*a,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,r=0){return this.r=t[r],this.g=t[r+1],this.b=t[r+2],this}toArray(t=[],r=0){return t[r]=this.r,t[r+1]=this.g,t[r+2]=this.b,t}fromBufferAttribute(t,r){return this.r=t.getX(r),this.g=t.getY(r),this.b=t.getZ(r),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Lh=new Color_Color;Color_Color.NAMES=Ah;class Light_Light extends Object3D_Object3D{constructor(t,r=1){super(),this.isLight=!0,this.type="Light",this.color=new Color_Color(t),this.intensity=r}dispose(){}copy(t,r){return super.copy(t,r),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const r=super.toJSON(t);return r.object.color=this.color.getHex(),r.object.intensity=this.intensity,void 0!==this.groundColor&&(r.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(r.object.distance=this.distance),void 0!==this.angle&&(r.object.angle=this.angle),void 0!==this.decay&&(r.object.decay=this.decay),void 0!==this.penumbra&&(r.object.penumbra=this.penumbra),void 0!==this.shadow&&(r.object.shadow=this.shadow.toJSON()),void 0!==this.target&&(r.object.target=this.target.uuid),r}}class RectAreaLight_RectAreaLight extends Light_Light{constructor(t,r,i=10,a=10){super(t,r),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=a}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const r=super.toJSON(t);return r.object.width=this.width,r.object.height=this.height,r}}class RectAreaLightHelper extends Line{constructor(t,r){const i=new BufferGeometry;i.setAttribute("position",new Float32BufferAttribute([1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),i.computeBoundingSphere();super(i,new LineBasicMaterial({fog:!1})),this.light=t,this.color=r,this.type="RectAreaLightHelper";const a=new BufferGeometry;a.setAttribute("position",new Float32BufferAttribute([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),a.computeBoundingSphere(),this.add(new Mesh(a,new MeshBasicMaterial({side:1,fog:!1})))}updateMatrixWorld(){if(this.scale.set(.5*this.light.width,.5*this.light.height,1),void 0!==this.color)this.material.color.set(this.color),this.children[0].material.color.set(this.color);else{this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);const t=this.material.color,r=Math.max(t.r,t.g,t.b);r>1&&t.multiplyScalar(1/r),this.children[0].material.color.copy(this.material.color)}this.matrixWorld.extractRotation(this.light.matrixWorld).scale(this.scale).copyPosition(this.light.matrixWorld),this.children[0].matrixWorld.copy(this.matrixWorld)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}var Uh,Dh,Ih,Nh=document.querySelector("#game");function beginPlay(){!function initializeGame(){var t=document.querySelector("#turn"),r=document.querySelector("#turnCounter");t.textContent="Human";var a=document.querySelector(".boardContainer"),o=document.querySelector(".boardContainer2");hi&&(ci.to(a,{x:0,duration:.8}),ci.to(o,{x:0,duration:.8})),hi=!1,document.getElementById("game").style.display="grid";var l=new i(4,"s1",10,!1),c=new i(5,"s2",10,!1),h=new i(2,"s3",10,!1);l.dom(),c.dom(),h.dom();var u=document.querySelector("#ready");u.addEventListener("click",handleReady),u.addEventListener("mousedown",(function(){u.style.backgroundColor="rgba(189,0,255,0.7)"})),u.addEventListener("mouseup",(function(){u.style.backgroundColor="rgba(189,0,255,1)"})),u.addEventListener("mouseenter",(function(){u.style.backgroundColor="rgba(0,0,0,0.6)"})),u.addEventListener("mouseleave",(function(){u.style.backgroundColor="rgba(189,0,255,1)"})),createBoard(10,document.querySelector("#board")),createBoardComputer(10,document.querySelector("#boardComputer")),setTimeout((function(){document.querySelector("#backButton").style.display="block"}),4e3),textArea.classList.remove("hiddenfade"),r.classList.remove("hiddenfade");var d=document.querySelector("#p1tag"),p=document.querySelector("#p2tag");d.classList.remove("hiddenfade"),p.classList.remove("hiddenfade")}();var t=Array.from(Nh.children).filter((function(t){return"shipContainer"!==t.id})),r=document.querySelector("#shipContainer");ci.to(t,{y:0,duration:4,ease:"elastic.out",stagger:.2}),ci.to(r,{y:40,duration:4,ease:"power1.inOut"})}var Oh,Fh,zh,Bh,Vh,kh,Gh,Hh=!0;function isObjectHovered(t,r,i){var a=(new Box3).setFromObject(t),o=a.min.clone(),l=a.max.clone(),c=[new Vector3(o.x,o.y,o.z),new Vector3(o.x,o.y,l.z),new Vector3(o.x,l.y,o.z),new Vector3(o.x,l.y,l.z),new Vector3(l.x,o.y,o.z),new Vector3(l.x,o.y,l.z),new Vector3(l.x,l.y,o.z),new Vector3(l.x,l.y,l.z)].map((function(t){var i=t.project(r);return{x:(i.x+1)/2*window.innerWidth,y:(1-i.y)/2*window.innerHeight}})),h=1/0,u=-1/0,d=1/0,p=-1/0;return c.forEach((function(t){h=Math.min(h,t.x),u=Math.max(u,t.x),d=Math.min(d,t.y),p=Math.max(p,t.y)})),i.x>=h&&i.x<=u&&i.y>=d&&i.y<=p}var Wh=document.createElement("button");Wh.id="backButton",Wh.textContent="Back to Menu",Wh.style.position="absolute",Wh.style.top="20px",Wh.style.left="20px",Wh.style.pointerEvents="auto",Wh.style.display="none",document.getElementById("game").appendChild(Wh),Wh.addEventListener("click",(function(){!function deleteGame(){r.list=[],r.shipHitCount=11,r.shipHitCountComp=11,r.shipHitCountFriend=11;var t=document.getElementById("board"),i=document.getElementById("boardComputer");t.innerHTML="",i.innerHTML="",t.classList.remove("hov"),i.classList.remove("hov");var a=document.querySelector("#p1tag"),o=document.querySelector("#p2tag");a.classList.add("hiddenfade"),o.classList.add("hiddenfade"),document.querySelector("#textArea").classList.add("hiddenfade"),document.querySelector("#turnCounter").classList.add("hiddenfade"),document.querySelector("#turn").textContent="",document.querySelector("#backButton").style.display="none";var l=document.querySelector("#ready");l.removeEventListener("click",handleReady),l.removeEventListener("click",handleReadyFriend);var c=document.querySelector(".boardContainer"),h=document.querySelector(".boardContainer2"),u=document.querySelector("#buttonContainer");ci.to(c,{y:-800,duration:1,ease:"power2.out"}),ci.to(h,{y:-800,duration:1,ease:"power2.out"}),ci.to(u,{y:-800,duration:1,ease:"power2.out"});var d=document.querySelector("#shipContainer");d.innerHTML="",ci.to(d,{y:200,duration:1,ease:"power2.out"})}(),setTimeout((function(){Hh=!0,ci.to(Oh.position,{x:0,y:4,z:10,duration:3,ease:"power2.inOut",onUpdate:function onUpdate(){return Oh.lookAt(0,3,-10)}}),zh.visible=!0,Fh.visible=!0,Bh.visible=!0,Vh.visible=!0,kh.visible=!0,Gh.visible=!0}),1600)})),function createMenu(){Oh=new PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,300);var t=new Scene;document.querySelector("#menu").style.display="grid";var r=new WebGLRenderer({antialias:!0});r.setSize(window.innerWidth,window.innerHeight),r.shadowMap.enabled=!0,r.shadowMap.type=2,r.domElement.style.position="absolute",r.domElement.style.top="0",r.domElement.style.left="0",r.domElement.style.zIndex="0",document.body.appendChild(r.domElement);var i=new BoxGeometry(2,2,2,10);Uh=new Group;for(var a=[],o=-3;o<=6;o++)for(var l=0;l<10;l++){var c=new MeshBasicMaterial({color:65535}),h=new Mesh(i,c),u=new EdgesGeometry(i),d=new LineBasicMaterial({color:0}),p=new LineSegments(u,d);h.add(p),h.position.z=-10,h.position.y=5*o+1,h.position.x=5*l+1,a.push(h),Uh.add(h)}Dh=new Group;for(var m=-3;m<=6;m++)for(var g=-1;g>-10;g--){var _=new MeshBasicMaterial({color:9040694}),x=new Mesh(i,_),y=new EdgesGeometry(i),M=new LineBasicMaterial({color:0}),S=new LineSegments(y,M);x.add(S),x.position.z=-10,x.position.y=5*m+1,x.position.x=5*g+1,a.push(x),Dh.add(x)}ci.to(a.map((function(t){return t.rotation})),{duration:2,y:Math.PI/2,repeat:-1,yoyo:!0,ease:"power1.inOut",stagger:{each:.1,from:"random"},repeatRefresh:!0}),Uh.scale.set(4,4,4),Dh.scale.set(4,4,4),t.add(Dh),t.add(Uh);var b=new DirectionalLight(16777215,5);b.position.set(-2,10,3),b.castShadow=!0,b.shadow.mapSize.width=512,b.shadow.mapSize.height=512,b.shadow.camera.near=.5,b.shadow.camera.far=500,t.add(b);var T=new AmbientLight(16777215,.4);t.add(T);var E={x:0,y:0},w=new RoundedBoxGeometry(16,4,.5,1,1),C=new MeshStandardMaterial({color:1973790});C=new MeshStandardMaterial({color:1973790,metalness:.3,roughness:.01}),(Bh=new Mesh(w,C)).position.z=0,Bh.position.y=8,Bh.receiveShadow=!0,Bh.metalness=1,Bh.roughness=0,t.add(Bh);var A=new BoxGeometry(8.8,.01,.2),R=new MeshStandardMaterial({color:16777215}),P=new Mesh(A,R);P.position.set(0,-2,0),Bh.add(P);var L=new RectAreaLight_RectAreaLight(16777215,10,8.8,10);L.position.set(0,-.2,0),L.lookAt(0,-10,0),L.rotation.z=0,P.add(L);var U=new RoundedBoxGeometry(8,4,.5,1,1),D=new MeshStandardMaterial({color:1973790,metalness:.3,roughness:.01});(Fh=new Mesh(U,D)).receiveShadow=!0,Fh.position.set(0,2,0),t.add(Fh);var I=new RoundedBoxGeometry(8,4,.5,1,1),N=new MeshStandardMaterial({color:1973790,metalness:.3,roughness:.01});(zh=new Mesh(I,N)).receiveShadow=!0,zh.position.set(0,-3,0),t.add(zh),Oh.position.z=10,Oh.position.y=4,window.addEventListener("resize",(function(){r.setSize(window.innerWidth,window.innerHeight),Oh.aspect=window.innerWidth/window.innerHeight,Oh.updateProjectionMatrix()})),(new FontLoader).load("https://threejs.org/examples/fonts/helvetiker_regular.typeface.json",(function(r){var i=new TextGeometry("BattleShips",{font:r,size:1,height:.1,bevelThickness:.2}),a=new MeshStandardMaterial({color:16777215});(Gh=new Mesh(i,a)).scale.z=.0045,Gh.position.z=.25,Gh.position.y=7.6,Gh.position.x=-3.8,Gh.castShadow=!0,t.add(Gh);var o=new TextGeometry("Play",{font:r,size:1,height:.1,bevelThickness:.2}),l=new MeshStandardMaterial({color:16777215}),c=new Mesh(o,l);c.scale.z=.01,c.position.set(-1.4,-.2,0),c.castShadow=!0,Fh.add(c);var h=new Mesh(o,l);h.scale.z=.01,h.position.set(-1.4,-.2,0),h.castShadow=!0,zh.add(h);var u=new TextGeometry("(vs computer)",{font:r,size:.4,height:.1,bevelThickness:.2}),d=new MeshStandardMaterial({color:16777215}),p=new Mesh(u,d);p.scale.z=.01,p.position.set(-1.8,-1.2,0),p.castShadow=!0,Fh.add(p);var m=new TextGeometry("(vs human)",{font:r,size:.4,height:.1,bevelThickness:.2}),g=new Mesh(m,d);g.scale.z=.008,g.position.set(-1.6,-1.2,0),g.castShadow=!0,zh.add(g)}));var O=new CylinderGeometry(.05,.05,3,32),z=new MeshStandardMaterial({color:1769727,emissive:1769727,emissiveIntensity:4,metalness:.3,roughness:.2});Bh.castShadow=!0,Bh.receiveShadow=!0,(Vh=new Mesh(O,z)).rotation.z=Math.PI/2,Vh.position.set(-7.6,8,.25),Vh.rotation.z=0,t.add(Vh),(kh=new Mesh(O,z)).position.set(7.6,8,.25),kh.rotation.z=0,t.add(kh);var B=new RectAreaLight_RectAreaLight(10289407,100,.15,2.9);B.position.set(0,0,0),B.lookAt(10,0,-1),Vh.add(B);var V=new RectAreaLight_RectAreaLight(10289407,100,.15,2.9);function onMouseMove(t){if(E.x=t.clientX,E.y=t.clientY,Hh){var r=t.clientX/window.innerWidth*2-1,i=-t.clientY/window.innerHeight*2+1;ci.to(Oh.position,{x:4*r,y:5*i,duration:1,ease:"power2.out",onUpdate:function onUpdate(){return Oh.lookAt(0,3,-10)}})}}V.position.set(0,0,0),V.lookAt(-10,0,-1),kh.add(V),Ih=new RectAreaLightHelper(B),B.add(Ih),new Raycaster,new Vector2,window.addEventListener("mousemove",onMouseMove),window.addEventListener("click",(function(){if(isObjectHovered(Fh,Oh,E))!function initiatePlay(t){Hh=!1,Uh.position.z=0,Dh.position.z=0,ci.to(t.position,{y:-100,z:-20,duration:3,ease:"power2.inOut",onUpdate:function onUpdate(){return t.lookAt(0,-10*t.position.y,-100)},onComplete:function onComplete(){beginPlay()}}),setTimeout((function(){zh.visible=!1,Fh.visible=!1,Bh.visible=!1,Vh.visible=!1,kh.visible=!1,Gh.visible=!1}),2e3)}(Oh);else{if(!isObjectHovered(zh,Oh,E))return;!function initiatePlayFriend(t){Hh=!1,Uh.position.z=0,Dh.position.z=0,ci.to(t.position,{y:-100,z:-20,duration:3,ease:"power2.inOut",onUpdate:function onUpdate(){return t.lookAt(0,-10*t.position.y,-100)},onComplete:function onComplete(){!function beginPlayFriend(){initializeGameFriend();var t=Array.from(Nh.children).filter((function(t){return"shipContainer"!==t.id})),r=document.querySelector("#shipContainer");ci.to(t,{y:0,duration:4,ease:"elastic.out",stagger:.2}),ci.to(r,{y:40,duration:4,ease:"power1.inOut"})}()}}),setTimeout((function(){zh.visible=!1,Fh.visible=!1,Bh.visible=!1,Vh.visible=!1,kh.visible=!1,Gh.visible=!1}),2e3)}(Oh)}})),r.setAnimationLoop((function(){!function animate(t,r,i,a,o,l,c){var h=document.querySelector("canvas");isObjectHovered(Uh,i,a)?ci.to(Uh.position,{z:-5,duration:2}):ci.to(Uh.position,{z:0,duration:2});isObjectHovered(Dh,i,a)?ci.to(Dh.position,{z:-5,duration:2}):ci.to(Dh.position,{z:0,duration:2});isObjectHovered(o,i,a)?(ci.to(o.scale,{x:1.1,y:1.1,z:1.1,duration:.6}),o.material.color.set(2763306),h.style.cursor="pointer"):(ci.to(o.scale,{x:1,y:1,z:1,duration:.6}),o.material.color.set(1973790),h.style.cursor="default");isObjectHovered(l,i,a)?(ci.to(l.scale,{x:1.1,y:1.1,z:1.1,duration:.6}),l.material.color.set(2763306),h.style.cursor="pointer"):(ci.to(l.scale,{x:1,y:1,z:1,duration:.6}),l.material.color.set(1973790));t.render(r,i)}(r,t,Oh,E,Fh,zh)}))}()})();